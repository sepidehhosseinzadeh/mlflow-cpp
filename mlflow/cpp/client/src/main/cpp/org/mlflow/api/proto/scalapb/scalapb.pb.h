// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scalapb/scalapb.proto

#ifndef PROTOBUF_INCLUDED_scalapb_2fscalapb_2eproto
#define PROTOBUF_INCLUDED_scalapb_2fscalapb_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_scalapb_2fscalapb_2eproto 

namespace protobuf_scalapb_2fscalapb_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_scalapb_2fscalapb_2eproto
namespace scalapb {
class FieldOptions;
class FieldOptionsDefaultTypeInternal;
extern FieldOptionsDefaultTypeInternal _FieldOptions_default_instance_;
class MessageOptions;
class MessageOptionsDefaultTypeInternal;
extern MessageOptionsDefaultTypeInternal _MessageOptions_default_instance_;
class ScalaPbOptions;
class ScalaPbOptionsDefaultTypeInternal;
extern ScalaPbOptionsDefaultTypeInternal _ScalaPbOptions_default_instance_;
}  // namespace scalapb
namespace google {
namespace protobuf {
template<> ::scalapb::FieldOptions* Arena::CreateMaybeMessage<::scalapb::FieldOptions>(Arena*);
template<> ::scalapb::MessageOptions* Arena::CreateMaybeMessage<::scalapb::MessageOptions>(Arena*);
template<> ::scalapb::ScalaPbOptions* Arena::CreateMaybeMessage<::scalapb::ScalaPbOptions>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace scalapb {

// ===================================================================

class ScalaPbOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scalapb.ScalaPbOptions) */ {
 public:
  ScalaPbOptions();
  virtual ~ScalaPbOptions();

  ScalaPbOptions(const ScalaPbOptions& from);

  inline ScalaPbOptions& operator=(const ScalaPbOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScalaPbOptions(ScalaPbOptions&& from) noexcept
    : ScalaPbOptions() {
    *this = ::std::move(from);
  }

  inline ScalaPbOptions& operator=(ScalaPbOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScalaPbOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScalaPbOptions* internal_default_instance() {
    return reinterpret_cast<const ScalaPbOptions*>(
               &_ScalaPbOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ScalaPbOptions* other);
  friend void swap(ScalaPbOptions& a, ScalaPbOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScalaPbOptions* New() const final {
    return CreateMaybeMessage<ScalaPbOptions>(NULL);
  }

  ScalaPbOptions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScalaPbOptions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScalaPbOptions& from);
  void MergeFrom(const ScalaPbOptions& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScalaPbOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string import = 3;
  int import_size() const;
  void clear_import();
  static const int kImportFieldNumber = 3;
  const ::std::string& import(int index) const;
  ::std::string* mutable_import(int index);
  void set_import(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_import(int index, ::std::string&& value);
  #endif
  void set_import(int index, const char* value);
  void set_import(int index, const char* value, size_t size);
  ::std::string* add_import();
  void add_import(const ::std::string& value);
  #if LANG_CXX11
  void add_import(::std::string&& value);
  #endif
  void add_import(const char* value);
  void add_import(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& import() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_import();

  // optional string package_name = 1;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 1;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // optional bool flat_package = 2;
  bool has_flat_package() const;
  void clear_flat_package();
  static const int kFlatPackageFieldNumber = 2;
  bool flat_package() const;
  void set_flat_package(bool value);

  // @@protoc_insertion_point(class_scope:scalapb.ScalaPbOptions)
 private:
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_flat_package();
  void clear_has_flat_package();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> import_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  bool flat_package_;
  friend struct ::protobuf_scalapb_2fscalapb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MessageOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scalapb.MessageOptions) */ {
 public:
  MessageOptions();
  virtual ~MessageOptions();

  MessageOptions(const MessageOptions& from);

  inline MessageOptions& operator=(const MessageOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageOptions(MessageOptions&& from) noexcept
    : MessageOptions() {
    *this = ::std::move(from);
  }

  inline MessageOptions& operator=(MessageOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageOptions* internal_default_instance() {
    return reinterpret_cast<const MessageOptions*>(
               &_MessageOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MessageOptions* other);
  friend void swap(MessageOptions& a, MessageOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageOptions* New() const final {
    return CreateMaybeMessage<MessageOptions>(NULL);
  }

  MessageOptions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MessageOptions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MessageOptions& from);
  void MergeFrom(const MessageOptions& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string extends = 1;
  int extends_size() const;
  void clear_extends();
  static const int kExtendsFieldNumber = 1;
  const ::std::string& extends(int index) const;
  ::std::string* mutable_extends(int index);
  void set_extends(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_extends(int index, ::std::string&& value);
  #endif
  void set_extends(int index, const char* value);
  void set_extends(int index, const char* value, size_t size);
  ::std::string* add_extends();
  void add_extends(const ::std::string& value);
  #if LANG_CXX11
  void add_extends(::std::string&& value);
  #endif
  void add_extends(const char* value);
  void add_extends(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& extends() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_extends();

  // @@protoc_insertion_point(class_scope:scalapb.MessageOptions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> extends_;
  friend struct ::protobuf_scalapb_2fscalapb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FieldOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scalapb.FieldOptions) */ {
 public:
  FieldOptions();
  virtual ~FieldOptions();

  FieldOptions(const FieldOptions& from);

  inline FieldOptions& operator=(const FieldOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FieldOptions(FieldOptions&& from) noexcept
    : FieldOptions() {
    *this = ::std::move(from);
  }

  inline FieldOptions& operator=(FieldOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FieldOptions* internal_default_instance() {
    return reinterpret_cast<const FieldOptions*>(
               &_FieldOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(FieldOptions* other);
  friend void swap(FieldOptions& a, FieldOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FieldOptions* New() const final {
    return CreateMaybeMessage<FieldOptions>(NULL);
  }

  FieldOptions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FieldOptions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FieldOptions& from);
  void MergeFrom(const FieldOptions& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FieldOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:scalapb.FieldOptions)
 private:
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  friend struct ::protobuf_scalapb_2fscalapb_2eproto::TableStruct;
};
// ===================================================================

static const int kOptionsFieldNumber = 1020;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::scalapb::ScalaPbOptions >, 11, false >
  options;
static const int kMessageFieldNumber = 1020;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::scalapb::MessageOptions >, 11, false >
  message;
static const int kFieldFieldNumber = 1020;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::scalapb::FieldOptions >, 11, false >
  field;

// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ScalaPbOptions

// optional string package_name = 1;
inline bool ScalaPbOptions::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScalaPbOptions::set_has_package_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScalaPbOptions::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScalaPbOptions::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& ScalaPbOptions::package_name() const {
  // @@protoc_insertion_point(field_get:scalapb.ScalaPbOptions.package_name)
  return package_name_.GetNoArena();
}
inline void ScalaPbOptions::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scalapb.ScalaPbOptions.package_name)
}
#if LANG_CXX11
inline void ScalaPbOptions::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scalapb.ScalaPbOptions.package_name)
}
#endif
inline void ScalaPbOptions::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scalapb.ScalaPbOptions.package_name)
}
inline void ScalaPbOptions::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scalapb.ScalaPbOptions.package_name)
}
inline ::std::string* ScalaPbOptions::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:scalapb.ScalaPbOptions.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScalaPbOptions::release_package_name() {
  // @@protoc_insertion_point(field_release:scalapb.ScalaPbOptions.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScalaPbOptions::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:scalapb.ScalaPbOptions.package_name)
}

// optional bool flat_package = 2;
inline bool ScalaPbOptions::has_flat_package() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScalaPbOptions::set_has_flat_package() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScalaPbOptions::clear_has_flat_package() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScalaPbOptions::clear_flat_package() {
  flat_package_ = false;
  clear_has_flat_package();
}
inline bool ScalaPbOptions::flat_package() const {
  // @@protoc_insertion_point(field_get:scalapb.ScalaPbOptions.flat_package)
  return flat_package_;
}
inline void ScalaPbOptions::set_flat_package(bool value) {
  set_has_flat_package();
  flat_package_ = value;
  // @@protoc_insertion_point(field_set:scalapb.ScalaPbOptions.flat_package)
}

// repeated string import = 3;
inline int ScalaPbOptions::import_size() const {
  return import_.size();
}
inline void ScalaPbOptions::clear_import() {
  import_.Clear();
}
inline const ::std::string& ScalaPbOptions::import(int index) const {
  // @@protoc_insertion_point(field_get:scalapb.ScalaPbOptions.import)
  return import_.Get(index);
}
inline ::std::string* ScalaPbOptions::mutable_import(int index) {
  // @@protoc_insertion_point(field_mutable:scalapb.ScalaPbOptions.import)
  return import_.Mutable(index);
}
inline void ScalaPbOptions::set_import(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:scalapb.ScalaPbOptions.import)
  import_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ScalaPbOptions::set_import(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:scalapb.ScalaPbOptions.import)
  import_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ScalaPbOptions::set_import(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  import_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:scalapb.ScalaPbOptions.import)
}
inline void ScalaPbOptions::set_import(int index, const char* value, size_t size) {
  import_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:scalapb.ScalaPbOptions.import)
}
inline ::std::string* ScalaPbOptions::add_import() {
  // @@protoc_insertion_point(field_add_mutable:scalapb.ScalaPbOptions.import)
  return import_.Add();
}
inline void ScalaPbOptions::add_import(const ::std::string& value) {
  import_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:scalapb.ScalaPbOptions.import)
}
#if LANG_CXX11
inline void ScalaPbOptions::add_import(::std::string&& value) {
  import_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:scalapb.ScalaPbOptions.import)
}
#endif
inline void ScalaPbOptions::add_import(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  import_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:scalapb.ScalaPbOptions.import)
}
inline void ScalaPbOptions::add_import(const char* value, size_t size) {
  import_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:scalapb.ScalaPbOptions.import)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ScalaPbOptions::import() const {
  // @@protoc_insertion_point(field_list:scalapb.ScalaPbOptions.import)
  return import_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ScalaPbOptions::mutable_import() {
  // @@protoc_insertion_point(field_mutable_list:scalapb.ScalaPbOptions.import)
  return &import_;
}

// -------------------------------------------------------------------

// MessageOptions

// repeated string extends = 1;
inline int MessageOptions::extends_size() const {
  return extends_.size();
}
inline void MessageOptions::clear_extends() {
  extends_.Clear();
}
inline const ::std::string& MessageOptions::extends(int index) const {
  // @@protoc_insertion_point(field_get:scalapb.MessageOptions.extends)
  return extends_.Get(index);
}
inline ::std::string* MessageOptions::mutable_extends(int index) {
  // @@protoc_insertion_point(field_mutable:scalapb.MessageOptions.extends)
  return extends_.Mutable(index);
}
inline void MessageOptions::set_extends(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:scalapb.MessageOptions.extends)
  extends_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MessageOptions::set_extends(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:scalapb.MessageOptions.extends)
  extends_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MessageOptions::set_extends(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  extends_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:scalapb.MessageOptions.extends)
}
inline void MessageOptions::set_extends(int index, const char* value, size_t size) {
  extends_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:scalapb.MessageOptions.extends)
}
inline ::std::string* MessageOptions::add_extends() {
  // @@protoc_insertion_point(field_add_mutable:scalapb.MessageOptions.extends)
  return extends_.Add();
}
inline void MessageOptions::add_extends(const ::std::string& value) {
  extends_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:scalapb.MessageOptions.extends)
}
#if LANG_CXX11
inline void MessageOptions::add_extends(::std::string&& value) {
  extends_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:scalapb.MessageOptions.extends)
}
#endif
inline void MessageOptions::add_extends(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  extends_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:scalapb.MessageOptions.extends)
}
inline void MessageOptions::add_extends(const char* value, size_t size) {
  extends_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:scalapb.MessageOptions.extends)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MessageOptions::extends() const {
  // @@protoc_insertion_point(field_list:scalapb.MessageOptions.extends)
  return extends_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MessageOptions::mutable_extends() {
  // @@protoc_insertion_point(field_mutable_list:scalapb.MessageOptions.extends)
  return &extends_;
}

// -------------------------------------------------------------------

// FieldOptions

// optional string type = 1;
inline bool FieldOptions::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FieldOptions::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FieldOptions::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FieldOptions::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& FieldOptions::type() const {
  // @@protoc_insertion_point(field_get:scalapb.FieldOptions.type)
  return type_.GetNoArena();
}
inline void FieldOptions::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scalapb.FieldOptions.type)
}
#if LANG_CXX11
inline void FieldOptions::set_type(::std::string&& value) {
  set_has_type();
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scalapb.FieldOptions.type)
}
#endif
inline void FieldOptions::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scalapb.FieldOptions.type)
}
inline void FieldOptions::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scalapb.FieldOptions.type)
}
inline ::std::string* FieldOptions::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:scalapb.FieldOptions.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FieldOptions::release_type() {
  // @@protoc_insertion_point(field_release:scalapb.FieldOptions.type)
  if (!has_type()) {
    return NULL;
  }
  clear_has_type();
  return type_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FieldOptions::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:scalapb.FieldOptions.type)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace scalapb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_scalapb_2fscalapb_2eproto
