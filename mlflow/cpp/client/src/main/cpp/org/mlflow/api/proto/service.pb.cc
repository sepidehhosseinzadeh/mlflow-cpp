// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

#include "service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_service_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DoubleClause;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Experiment;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FileInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FloatClause;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Metric;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Param;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RunInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RunTag;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringClause;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ParameterSearchExpression;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MetricSearchExpression;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Run;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SearchExpression;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_RunData;
}  // namespace protobuf_service_2eproto
namespace mlflow {
class MetricDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Metric>
      _instance;
} _Metric_default_instance_;
class ParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Param>
      _instance;
} _Param_default_instance_;
class RunDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Run>
      _instance;
} _Run_default_instance_;
class RunDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunData>
      _instance;
} _RunData_default_instance_;
class RunTagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunTag>
      _instance;
} _RunTag_default_instance_;
class RunInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunInfo>
      _instance;
} _RunInfo_default_instance_;
class ExperimentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Experiment>
      _instance;
} _Experiment_default_instance_;
class CreateExperiment_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateExperiment_Response>
      _instance;
} _CreateExperiment_Response_default_instance_;
class CreateExperimentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateExperiment>
      _instance;
} _CreateExperiment_default_instance_;
class ListExperiments_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListExperiments_Response>
      _instance;
} _ListExperiments_Response_default_instance_;
class ListExperimentsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListExperiments>
      _instance;
} _ListExperiments_default_instance_;
class GetExperiment_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetExperiment_Response>
      _instance;
} _GetExperiment_Response_default_instance_;
class GetExperimentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetExperiment>
      _instance;
} _GetExperiment_default_instance_;
class DeleteExperiment_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteExperiment_Response>
      _instance;
} _DeleteExperiment_Response_default_instance_;
class DeleteExperimentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteExperiment>
      _instance;
} _DeleteExperiment_default_instance_;
class RestoreExperiment_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RestoreExperiment_Response>
      _instance;
} _RestoreExperiment_Response_default_instance_;
class RestoreExperimentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RestoreExperiment>
      _instance;
} _RestoreExperiment_default_instance_;
class CreateRun_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateRun_Response>
      _instance;
} _CreateRun_Response_default_instance_;
class CreateRunDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateRun>
      _instance;
} _CreateRun_default_instance_;
class UpdateRun_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateRun_Response>
      _instance;
} _UpdateRun_Response_default_instance_;
class UpdateRunDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateRun>
      _instance;
} _UpdateRun_default_instance_;
class DeleteRun_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteRun_Response>
      _instance;
} _DeleteRun_Response_default_instance_;
class DeleteRunDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteRun>
      _instance;
} _DeleteRun_default_instance_;
class RestoreRun_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RestoreRun_Response>
      _instance;
} _RestoreRun_Response_default_instance_;
class RestoreRunDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RestoreRun>
      _instance;
} _RestoreRun_default_instance_;
class LogMetric_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogMetric_Response>
      _instance;
} _LogMetric_Response_default_instance_;
class LogMetricDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogMetric>
      _instance;
} _LogMetric_default_instance_;
class LogParam_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogParam_Response>
      _instance;
} _LogParam_Response_default_instance_;
class LogParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogParam>
      _instance;
} _LogParam_default_instance_;
class SetTag_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetTag_Response>
      _instance;
} _SetTag_Response_default_instance_;
class SetTagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetTag>
      _instance;
} _SetTag_default_instance_;
class GetRun_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRun_Response>
      _instance;
} _GetRun_Response_default_instance_;
class GetRunDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRun>
      _instance;
} _GetRun_default_instance_;
class GetMetric_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMetric_Response>
      _instance;
} _GetMetric_Response_default_instance_;
class GetMetricDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMetric>
      _instance;
} _GetMetric_default_instance_;
class GetParam_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetParam_Response>
      _instance;
} _GetParam_Response_default_instance_;
class GetParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetParam>
      _instance;
} _GetParam_default_instance_;
class SearchExpressionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchExpression>
      _instance;
  const ::mlflow::MetricSearchExpression* metric_;
  const ::mlflow::ParameterSearchExpression* parameter_;
} _SearchExpression_default_instance_;
class MetricSearchExpressionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetricSearchExpression>
      _instance;
  const ::mlflow::FloatClause* float__;
  const ::mlflow::DoubleClause* double__;
} _MetricSearchExpression_default_instance_;
class ParameterSearchExpressionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParameterSearchExpression>
      _instance;
  const ::mlflow::StringClause* string_;
} _ParameterSearchExpression_default_instance_;
class StringClauseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringClause>
      _instance;
} _StringClause_default_instance_;
class FloatClauseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FloatClause>
      _instance;
} _FloatClause_default_instance_;
class DoubleClauseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DoubleClause>
      _instance;
} _DoubleClause_default_instance_;
class SearchRuns_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchRuns_Response>
      _instance;
} _SearchRuns_Response_default_instance_;
class SearchRunsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchRuns>
      _instance;
} _SearchRuns_default_instance_;
class ListArtifacts_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListArtifacts_Response>
      _instance;
} _ListArtifacts_Response_default_instance_;
class ListArtifactsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListArtifacts>
      _instance;
} _ListArtifacts_default_instance_;
class FileInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileInfo>
      _instance;
} _FileInfo_default_instance_;
class GetArtifact_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetArtifact_Response>
      _instance;
} _GetArtifact_Response_default_instance_;
class GetArtifactDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetArtifact>
      _instance;
} _GetArtifact_default_instance_;
class GetMetricHistory_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMetricHistory_Response>
      _instance;
} _GetMetricHistory_Response_default_instance_;
class GetMetricHistoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMetricHistory>
      _instance;
} _GetMetricHistory_default_instance_;
}  // namespace mlflow
namespace protobuf_service_2eproto {
static void InitDefaultsMetric() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_Metric_default_instance_;
    new (ptr) ::mlflow::Metric();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::Metric::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Metric =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetric}, {}};

static void InitDefaultsParam() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_Param_default_instance_;
    new (ptr) ::mlflow::Param();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::Param::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Param =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsParam}, {}};

static void InitDefaultsRun() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_Run_default_instance_;
    new (ptr) ::mlflow::Run();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::Run::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Run =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRun}, {
      &protobuf_service_2eproto::scc_info_RunInfo.base,
      &protobuf_service_2eproto::scc_info_RunData.base,}};

static void InitDefaultsRunData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_RunData_default_instance_;
    new (ptr) ::mlflow::RunData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::RunData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_RunData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsRunData}, {
      &protobuf_service_2eproto::scc_info_Metric.base,
      &protobuf_service_2eproto::scc_info_Param.base,
      &protobuf_service_2eproto::scc_info_RunTag.base,}};

static void InitDefaultsRunTag() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_RunTag_default_instance_;
    new (ptr) ::mlflow::RunTag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::RunTag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RunTag =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRunTag}, {}};

static void InitDefaultsRunInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_RunInfo_default_instance_;
    new (ptr) ::mlflow::RunInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::RunInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RunInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRunInfo}, {}};

static void InitDefaultsExperiment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_Experiment_default_instance_;
    new (ptr) ::mlflow::Experiment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::Experiment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Experiment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExperiment}, {}};

static void InitDefaultsCreateExperiment_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_CreateExperiment_Response_default_instance_;
    new (ptr) ::mlflow::CreateExperiment_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::CreateExperiment_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateExperiment_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateExperiment_Response}, {}};

static void InitDefaultsCreateExperiment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_CreateExperiment_default_instance_;
    new (ptr) ::mlflow::CreateExperiment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::CreateExperiment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateExperiment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateExperiment}, {}};

static void InitDefaultsListExperiments_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_ListExperiments_Response_default_instance_;
    new (ptr) ::mlflow::ListExperiments_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::ListExperiments_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListExperiments_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListExperiments_Response}, {
      &protobuf_service_2eproto::scc_info_Experiment.base,}};

static void InitDefaultsListExperiments() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_ListExperiments_default_instance_;
    new (ptr) ::mlflow::ListExperiments();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::ListExperiments::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListExperiments =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListExperiments}, {}};

static void InitDefaultsGetExperiment_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_GetExperiment_Response_default_instance_;
    new (ptr) ::mlflow::GetExperiment_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::GetExperiment_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GetExperiment_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGetExperiment_Response}, {
      &protobuf_service_2eproto::scc_info_Experiment.base,
      &protobuf_service_2eproto::scc_info_RunInfo.base,}};

static void InitDefaultsGetExperiment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_GetExperiment_default_instance_;
    new (ptr) ::mlflow::GetExperiment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::GetExperiment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetExperiment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetExperiment}, {}};

static void InitDefaultsDeleteExperiment_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_DeleteExperiment_Response_default_instance_;
    new (ptr) ::mlflow::DeleteExperiment_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::DeleteExperiment_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteExperiment_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteExperiment_Response}, {}};

static void InitDefaultsDeleteExperiment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_DeleteExperiment_default_instance_;
    new (ptr) ::mlflow::DeleteExperiment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::DeleteExperiment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteExperiment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteExperiment}, {}};

static void InitDefaultsRestoreExperiment_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_RestoreExperiment_Response_default_instance_;
    new (ptr) ::mlflow::RestoreExperiment_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::RestoreExperiment_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RestoreExperiment_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRestoreExperiment_Response}, {}};

static void InitDefaultsRestoreExperiment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_RestoreExperiment_default_instance_;
    new (ptr) ::mlflow::RestoreExperiment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::RestoreExperiment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RestoreExperiment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRestoreExperiment}, {}};

static void InitDefaultsCreateRun_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_CreateRun_Response_default_instance_;
    new (ptr) ::mlflow::CreateRun_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::CreateRun_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateRun_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateRun_Response}, {
      &protobuf_service_2eproto::scc_info_Run.base,}};

static void InitDefaultsCreateRun() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_CreateRun_default_instance_;
    new (ptr) ::mlflow::CreateRun();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::CreateRun::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateRun =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateRun}, {
      &protobuf_service_2eproto::scc_info_RunTag.base,}};

static void InitDefaultsUpdateRun_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_UpdateRun_Response_default_instance_;
    new (ptr) ::mlflow::UpdateRun_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::UpdateRun_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateRun_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateRun_Response}, {
      &protobuf_service_2eproto::scc_info_RunInfo.base,}};

static void InitDefaultsUpdateRun() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_UpdateRun_default_instance_;
    new (ptr) ::mlflow::UpdateRun();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::UpdateRun::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateRun =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateRun}, {}};

static void InitDefaultsDeleteRun_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_DeleteRun_Response_default_instance_;
    new (ptr) ::mlflow::DeleteRun_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::DeleteRun_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteRun_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteRun_Response}, {}};

static void InitDefaultsDeleteRun() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_DeleteRun_default_instance_;
    new (ptr) ::mlflow::DeleteRun();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::DeleteRun::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteRun =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteRun}, {}};

static void InitDefaultsRestoreRun_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_RestoreRun_Response_default_instance_;
    new (ptr) ::mlflow::RestoreRun_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::RestoreRun_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RestoreRun_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRestoreRun_Response}, {}};

static void InitDefaultsRestoreRun() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_RestoreRun_default_instance_;
    new (ptr) ::mlflow::RestoreRun();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::RestoreRun::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RestoreRun =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRestoreRun}, {}};

static void InitDefaultsLogMetric_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_LogMetric_Response_default_instance_;
    new (ptr) ::mlflow::LogMetric_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::LogMetric_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogMetric_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogMetric_Response}, {}};

static void InitDefaultsLogMetric() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_LogMetric_default_instance_;
    new (ptr) ::mlflow::LogMetric();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::LogMetric::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogMetric =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogMetric}, {}};

static void InitDefaultsLogParam_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_LogParam_Response_default_instance_;
    new (ptr) ::mlflow::LogParam_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::LogParam_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogParam_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogParam_Response}, {}};

static void InitDefaultsLogParam() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_LogParam_default_instance_;
    new (ptr) ::mlflow::LogParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::LogParam::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogParam =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogParam}, {}};

static void InitDefaultsSetTag_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_SetTag_Response_default_instance_;
    new (ptr) ::mlflow::SetTag_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::SetTag_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetTag_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetTag_Response}, {}};

static void InitDefaultsSetTag() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_SetTag_default_instance_;
    new (ptr) ::mlflow::SetTag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::SetTag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetTag =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetTag}, {}};

static void InitDefaultsGetRun_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_GetRun_Response_default_instance_;
    new (ptr) ::mlflow::GetRun_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::GetRun_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetRun_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetRun_Response}, {
      &protobuf_service_2eproto::scc_info_Run.base,}};

static void InitDefaultsGetRun() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_GetRun_default_instance_;
    new (ptr) ::mlflow::GetRun();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::GetRun::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetRun =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetRun}, {}};

static void InitDefaultsGetMetric_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_GetMetric_Response_default_instance_;
    new (ptr) ::mlflow::GetMetric_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::GetMetric_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetMetric_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetMetric_Response}, {
      &protobuf_service_2eproto::scc_info_Metric.base,}};

static void InitDefaultsGetMetric() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_GetMetric_default_instance_;
    new (ptr) ::mlflow::GetMetric();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::GetMetric::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMetric =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMetric}, {}};

static void InitDefaultsGetParam_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_GetParam_Response_default_instance_;
    new (ptr) ::mlflow::GetParam_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::GetParam_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetParam_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetParam_Response}, {
      &protobuf_service_2eproto::scc_info_Param.base,}};

static void InitDefaultsGetParam() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_GetParam_default_instance_;
    new (ptr) ::mlflow::GetParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::GetParam::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetParam =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetParam}, {}};

static void InitDefaultsSearchExpression() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_SearchExpression_default_instance_;
    new (ptr) ::mlflow::SearchExpression();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::SearchExpression::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SearchExpression =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSearchExpression}, {
      &protobuf_service_2eproto::scc_info_MetricSearchExpression.base,
      &protobuf_service_2eproto::scc_info_ParameterSearchExpression.base,}};

static void InitDefaultsMetricSearchExpression() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_MetricSearchExpression_default_instance_;
    new (ptr) ::mlflow::MetricSearchExpression();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::MetricSearchExpression::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MetricSearchExpression =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMetricSearchExpression}, {
      &protobuf_service_2eproto::scc_info_FloatClause.base,
      &protobuf_service_2eproto::scc_info_DoubleClause.base,}};

static void InitDefaultsParameterSearchExpression() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_ParameterSearchExpression_default_instance_;
    new (ptr) ::mlflow::ParameterSearchExpression();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::ParameterSearchExpression::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ParameterSearchExpression =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsParameterSearchExpression}, {
      &protobuf_service_2eproto::scc_info_StringClause.base,}};

static void InitDefaultsStringClause() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_StringClause_default_instance_;
    new (ptr) ::mlflow::StringClause();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::StringClause::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StringClause =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStringClause}, {}};

static void InitDefaultsFloatClause() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_FloatClause_default_instance_;
    new (ptr) ::mlflow::FloatClause();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::FloatClause::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FloatClause =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFloatClause}, {}};

static void InitDefaultsDoubleClause() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_DoubleClause_default_instance_;
    new (ptr) ::mlflow::DoubleClause();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::DoubleClause::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DoubleClause =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDoubleClause}, {}};

static void InitDefaultsSearchRuns_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_SearchRuns_Response_default_instance_;
    new (ptr) ::mlflow::SearchRuns_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::SearchRuns_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SearchRuns_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSearchRuns_Response}, {
      &protobuf_service_2eproto::scc_info_Run.base,}};

static void InitDefaultsSearchRuns() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_SearchRuns_default_instance_;
    new (ptr) ::mlflow::SearchRuns();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::SearchRuns::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SearchRuns =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSearchRuns}, {
      &protobuf_service_2eproto::scc_info_SearchExpression.base,}};

static void InitDefaultsListArtifacts_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_ListArtifacts_Response_default_instance_;
    new (ptr) ::mlflow::ListArtifacts_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::ListArtifacts_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListArtifacts_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListArtifacts_Response}, {
      &protobuf_service_2eproto::scc_info_FileInfo.base,}};

static void InitDefaultsListArtifacts() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_ListArtifacts_default_instance_;
    new (ptr) ::mlflow::ListArtifacts();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::ListArtifacts::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListArtifacts =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListArtifacts}, {}};

static void InitDefaultsFileInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_FileInfo_default_instance_;
    new (ptr) ::mlflow::FileInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::FileInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileInfo}, {}};

static void InitDefaultsGetArtifact_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_GetArtifact_Response_default_instance_;
    new (ptr) ::mlflow::GetArtifact_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::GetArtifact_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetArtifact_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetArtifact_Response}, {}};

static void InitDefaultsGetArtifact() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_GetArtifact_default_instance_;
    new (ptr) ::mlflow::GetArtifact();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::GetArtifact::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetArtifact =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetArtifact}, {}};

static void InitDefaultsGetMetricHistory_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_GetMetricHistory_Response_default_instance_;
    new (ptr) ::mlflow::GetMetricHistory_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::GetMetricHistory_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetMetricHistory_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetMetricHistory_Response}, {
      &protobuf_service_2eproto::scc_info_Metric.base,}};

static void InitDefaultsGetMetricHistory() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mlflow::_GetMetricHistory_default_instance_;
    new (ptr) ::mlflow::GetMetricHistory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mlflow::GetMetricHistory::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMetricHistory =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMetricHistory}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Metric.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Param.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Run.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RunData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RunTag.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RunInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Experiment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateExperiment_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateExperiment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListExperiments_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListExperiments.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetExperiment_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetExperiment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteExperiment_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteExperiment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RestoreExperiment_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RestoreExperiment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateRun_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateRun.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateRun_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateRun.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteRun_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteRun.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RestoreRun_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RestoreRun.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogMetric_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogMetric.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogParam_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogParam.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetTag_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetTag.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetRun_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetRun.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMetric_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMetric.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetParam_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetParam.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchExpression.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetricSearchExpression.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParameterSearchExpression.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StringClause.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FloatClause.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DoubleClause.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchRuns_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchRuns.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListArtifacts_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListArtifacts.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetArtifact_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetArtifact.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMetricHistory_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMetricHistory.base);
}

::google::protobuf::Metadata file_level_metadata[52];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Metric, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Metric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Metric, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Metric, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Metric, timestamp_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Param, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Param, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Param, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Run, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Run, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Run, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Run, data_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunData, metrics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunData, params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunData, tags_),
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunTag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunTag, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunTag, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunInfo, run_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunInfo, experiment_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunInfo, source_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunInfo, source_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunInfo, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunInfo, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunInfo, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunInfo, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunInfo, source_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunInfo, entry_point_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunInfo, artifact_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RunInfo, lifecycle_stage_),
  0,
  8,
  1,
  11,
  2,
  3,
  12,
  9,
  10,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Experiment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Experiment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Experiment, experiment_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Experiment, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Experiment, artifact_location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Experiment, lifecycle_stage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Experiment, last_update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::Experiment, creation_time_),
  3,
  0,
  1,
  2,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateExperiment_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateExperiment_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateExperiment_Response, experiment_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateExperiment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateExperiment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateExperiment, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateExperiment, artifact_location_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ListExperiments_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ListExperiments_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ListExperiments_Response, experiments_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ListExperiments, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ListExperiments, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ListExperiments, view_type_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetExperiment_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetExperiment_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetExperiment_Response, experiment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetExperiment_Response, runs_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetExperiment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetExperiment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetExperiment, experiment_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::DeleteExperiment_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::DeleteExperiment_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::DeleteExperiment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::DeleteExperiment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::DeleteExperiment, experiment_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RestoreExperiment_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RestoreExperiment_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RestoreExperiment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RestoreExperiment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RestoreExperiment, experiment_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateRun_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateRun_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateRun_Response, run_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateRun, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateRun, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateRun, experiment_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateRun, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateRun, run_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateRun, source_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateRun, source_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateRun, entry_point_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateRun, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateRun, source_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateRun, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::CreateRun, parent_run_id_),
  6,
  0,
  1,
  8,
  2,
  3,
  7,
  4,
  ~0u,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::UpdateRun_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::UpdateRun_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::UpdateRun_Response, run_info_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::UpdateRun, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::UpdateRun, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::UpdateRun, run_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::UpdateRun, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::UpdateRun, end_time_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::DeleteRun_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::DeleteRun_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::DeleteRun, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::DeleteRun, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::DeleteRun, run_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RestoreRun_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RestoreRun_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RestoreRun, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RestoreRun, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::RestoreRun, run_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::LogMetric_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::LogMetric_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::LogMetric, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::LogMetric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::LogMetric, run_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::LogMetric, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::LogMetric, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::LogMetric, timestamp_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::LogParam_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::LogParam_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::LogParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::LogParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::LogParam, run_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::LogParam, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::LogParam, value_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SetTag_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SetTag_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SetTag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SetTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SetTag, run_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SetTag, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SetTag, value_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetRun_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetRun_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetRun_Response, run_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetRun, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetRun, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetRun, run_uuid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetMetric_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetMetric_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetMetric_Response, metric_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetMetric, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetMetric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetMetric, run_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetMetric, metric_key_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetParam_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetParam_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetParam_Response, parameter_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetParam, run_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetParam, param_name_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SearchExpression, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SearchExpression, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SearchExpression, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::mlflow::SearchExpressionDefaultTypeInternal, metric_),
  offsetof(::mlflow::SearchExpressionDefaultTypeInternal, parameter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SearchExpression, expression_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::MetricSearchExpression, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::MetricSearchExpression, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::MetricSearchExpression, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::MetricSearchExpression, key_),
  offsetof(::mlflow::MetricSearchExpressionDefaultTypeInternal, float__),
  offsetof(::mlflow::MetricSearchExpressionDefaultTypeInternal, double__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::MetricSearchExpression, clause_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ParameterSearchExpression, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ParameterSearchExpression, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ParameterSearchExpression, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ParameterSearchExpression, key_),
  offsetof(::mlflow::ParameterSearchExpressionDefaultTypeInternal, string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ParameterSearchExpression, clause_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::StringClause, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::StringClause, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::StringClause, comparator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::StringClause, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::FloatClause, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::FloatClause, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::FloatClause, comparator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::FloatClause, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::DoubleClause, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::DoubleClause, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::DoubleClause, comparator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::DoubleClause, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SearchRuns_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SearchRuns_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SearchRuns_Response, runs_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SearchRuns, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SearchRuns, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SearchRuns, experiment_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SearchRuns, anded_expressions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::SearchRuns, run_view_type_),
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ListArtifacts_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ListArtifacts_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ListArtifacts_Response, root_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ListArtifacts_Response, files_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ListArtifacts, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ListArtifacts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ListArtifacts, run_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::ListArtifacts, path_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::FileInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::FileInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::FileInfo, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::FileInfo, is_dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::FileInfo, file_size_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetArtifact_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetArtifact_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetArtifact, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetArtifact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetArtifact, run_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetArtifact, path_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetMetricHistory_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetMetricHistory_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetMetricHistory_Response, metrics_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetMetricHistory, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetMetricHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetMetricHistory, run_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mlflow::GetMetricHistory, metric_key_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::mlflow::Metric)},
  { 11, 18, sizeof(::mlflow::Param)},
  { 20, 27, sizeof(::mlflow::Run)},
  { 29, 37, sizeof(::mlflow::RunData)},
  { 40, 47, sizeof(::mlflow::RunTag)},
  { 49, 67, sizeof(::mlflow::RunInfo)},
  { 80, 91, sizeof(::mlflow::Experiment)},
  { 97, 103, sizeof(::mlflow::CreateExperiment_Response)},
  { 104, 111, sizeof(::mlflow::CreateExperiment)},
  { 113, 119, sizeof(::mlflow::ListExperiments_Response)},
  { 120, 126, sizeof(::mlflow::ListExperiments)},
  { 127, 134, sizeof(::mlflow::GetExperiment_Response)},
  { 136, 142, sizeof(::mlflow::GetExperiment)},
  { 143, 148, sizeof(::mlflow::DeleteExperiment_Response)},
  { 148, 154, sizeof(::mlflow::DeleteExperiment)},
  { 155, 160, sizeof(::mlflow::RestoreExperiment_Response)},
  { 160, 166, sizeof(::mlflow::RestoreExperiment)},
  { 167, 173, sizeof(::mlflow::CreateRun_Response)},
  { 174, 189, sizeof(::mlflow::CreateRun)},
  { 199, 205, sizeof(::mlflow::UpdateRun_Response)},
  { 206, 214, sizeof(::mlflow::UpdateRun)},
  { 217, 222, sizeof(::mlflow::DeleteRun_Response)},
  { 222, 228, sizeof(::mlflow::DeleteRun)},
  { 229, 234, sizeof(::mlflow::RestoreRun_Response)},
  { 234, 240, sizeof(::mlflow::RestoreRun)},
  { 241, 246, sizeof(::mlflow::LogMetric_Response)},
  { 246, 255, sizeof(::mlflow::LogMetric)},
  { 259, 264, sizeof(::mlflow::LogParam_Response)},
  { 264, 272, sizeof(::mlflow::LogParam)},
  { 275, 280, sizeof(::mlflow::SetTag_Response)},
  { 280, 288, sizeof(::mlflow::SetTag)},
  { 291, 297, sizeof(::mlflow::GetRun_Response)},
  { 298, 304, sizeof(::mlflow::GetRun)},
  { 305, 311, sizeof(::mlflow::GetMetric_Response)},
  { 312, 319, sizeof(::mlflow::GetMetric)},
  { 321, 327, sizeof(::mlflow::GetParam_Response)},
  { 328, 335, sizeof(::mlflow::GetParam)},
  { 337, 345, sizeof(::mlflow::SearchExpression)},
  { 347, 356, sizeof(::mlflow::MetricSearchExpression)},
  { 359, 367, sizeof(::mlflow::ParameterSearchExpression)},
  { 369, 376, sizeof(::mlflow::StringClause)},
  { 378, 385, sizeof(::mlflow::FloatClause)},
  { 387, 394, sizeof(::mlflow::DoubleClause)},
  { 396, 402, sizeof(::mlflow::SearchRuns_Response)},
  { 403, 411, sizeof(::mlflow::SearchRuns)},
  { 414, 421, sizeof(::mlflow::ListArtifacts_Response)},
  { 423, 430, sizeof(::mlflow::ListArtifacts)},
  { 432, 440, sizeof(::mlflow::FileInfo)},
  { 443, 448, sizeof(::mlflow::GetArtifact_Response)},
  { 448, 455, sizeof(::mlflow::GetArtifact)},
  { 457, 463, sizeof(::mlflow::GetMetricHistory_Response)},
  { 464, 471, sizeof(::mlflow::GetMetricHistory)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_Metric_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_Param_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_Run_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_RunData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_RunTag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_RunInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_Experiment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_CreateExperiment_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_CreateExperiment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_ListExperiments_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_ListExperiments_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_GetExperiment_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_GetExperiment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_DeleteExperiment_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_DeleteExperiment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_RestoreExperiment_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_RestoreExperiment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_CreateRun_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_CreateRun_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_UpdateRun_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_UpdateRun_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_DeleteRun_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_DeleteRun_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_RestoreRun_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_RestoreRun_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_LogMetric_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_LogMetric_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_LogParam_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_LogParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_SetTag_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_SetTag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_GetRun_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_GetRun_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_GetMetric_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_GetMetric_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_GetParam_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_GetParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_SearchExpression_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_MetricSearchExpression_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_ParameterSearchExpression_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_StringClause_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_FloatClause_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_DoubleClause_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_SearchRuns_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_SearchRuns_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_ListArtifacts_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_ListArtifacts_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_FileInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_GetArtifact_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_GetArtifact_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_GetMetricHistory_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mlflow::_GetMetricHistory_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 52);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rservice.proto\022\006mlflow\032\025scalapb/scalapb"
      ".proto\032\020databricks.proto\"7\n\006Metric\022\013\n\003ke"
      "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\001\022\021\n\ttimestamp\030\003 \001("
      "\003\"#\n\005Param\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"C"
      "\n\003Run\022\035\n\004info\030\001 \001(\0132\017.mlflow.RunInfo\022\035\n\004"
      "data\030\002 \001(\0132\017.mlflow.RunData\"g\n\007RunData\022\037"
      "\n\007metrics\030\001 \003(\0132\016.mlflow.Metric\022\035\n\006param"
      "s\030\002 \003(\0132\r.mlflow.Param\022\034\n\004tags\030\003 \003(\0132\016.m"
      "lflow.RunTag\"$\n\006RunTag\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
      "alue\030\002 \001(\t\"\271\002\n\007RunInfo\022\020\n\010run_uuid\030\001 \001(\t"
      "\022\025\n\rexperiment_id\030\002 \001(\003\022\014\n\004name\030\003 \001(\t\022\'\n"
      "\013source_type\030\004 \001(\0162\022.mlflow.SourceType\022\023"
      "\n\013source_name\030\005 \001(\t\022\017\n\007user_id\030\006 \001(\t\022!\n\006"
      "status\030\007 \001(\0162\021.mlflow.RunStatus\022\022\n\nstart"
      "_time\030\010 \001(\003\022\020\n\010end_time\030\t \001(\003\022\026\n\016source_"
      "version\030\n \001(\t\022\030\n\020entry_point_name\030\013 \001(\t\022"
      "\024\n\014artifact_uri\030\r \001(\t\022\027\n\017lifecycle_stage"
      "\030\016 \001(\t\"\226\001\n\nExperiment\022\025\n\rexperiment_id\030\001"
      " \001(\003\022\014\n\004name\030\002 \001(\t\022\031\n\021artifact_location\030"
      "\003 \001(\t\022\027\n\017lifecycle_stage\030\004 \001(\t\022\030\n\020last_u"
      "pdate_time\030\005 \001(\003\022\025\n\rcreation_time\030\006 \001(\003\""
      "\221\001\n\020CreateExperiment\022\022\n\004name\030\001 \001(\tB\004\210\265\030\001"
      "\022\031\n\021artifact_location\030\005 \001(\t\032!\n\010Response\022"
      "\025\n\rexperiment_id\030\001 \001(\003:+\342\?(\n&com.databri"
      "cks.rpc.RPC[$this.Response]\"\230\001\n\017ListExpe"
      "riments\022#\n\tview_type\030\001 \001(\0162\020.mlflow.View"
      "Type\0323\n\010Response\022\'\n\013experiments\030\001 \003(\0132\022."
      "mlflow.Experiment:+\342\?(\n&com.databricks.r"
      "pc.RPC[$this.Response]\"\254\001\n\rGetExperiment"
      "\022\033\n\rexperiment_id\030\001 \001(\003B\004\210\265\030\001\032Q\n\010Respons"
      "e\022&\n\nexperiment\030\001 \001(\0132\022.mlflow.Experimen"
      "t\022\035\n\004runs\030\002 \003(\0132\017.mlflow.RunInfo:+\342\?(\n&c"
      "om.databricks.rpc.RPC[$this.Response]\"h\n"
      "\020DeleteExperiment\022\033\n\rexperiment_id\030\001 \001(\003"
      "B\004\210\265\030\001\032\n\n\010Response:+\342\?(\n&com.databricks."
      "rpc.RPC[$this.Response]\"i\n\021RestoreExperi"
      "ment\022\033\n\rexperiment_id\030\001 \001(\003B\004\210\265\030\001\032\n\n\010Res"
      "ponse:+\342\?(\n&com.databricks.rpc.RPC[$this"
      ".Response]\"\321\002\n\tCreateRun\022\025\n\rexperiment_i"
      "d\030\001 \001(\003\022\017\n\007user_id\030\002 \001(\t\022\020\n\010run_name\030\003 \001"
      "(\t\022\'\n\013source_type\030\004 \001(\0162\022.mlflow.SourceT"
      "ype\022\023\n\013source_name\030\005 \001(\t\022\030\n\020entry_point_"
      "name\030\006 \001(\t\022\022\n\nstart_time\030\007 \001(\003\022\026\n\016source"
      "_version\030\010 \001(\t\022\034\n\004tags\030\t \003(\0132\016.mlflow.Ru"
      "nTag\022\025\n\rparent_run_id\030\n \001(\t\032$\n\010Response\022"
      "\030\n\003run\030\001 \001(\0132\013.mlflow.Run:+\342\?(\n&com.data"
      "bricks.rpc.RPC[$this.Response]\"\264\001\n\tUpdat"
      "eRun\022\026\n\010run_uuid\030\001 \001(\tB\004\210\265\030\001\022!\n\006status\030\002"
      " \001(\0162\021.mlflow.RunStatus\022\020\n\010end_time\030\003 \001("
      "\003\032-\n\010Response\022!\n\010run_info\030\001 \001(\0132\017.mlflow"
      ".RunInfo:+\342\?(\n&com.databricks.rpc.RPC[$t"
      "his.Response]\"Z\n\tDeleteRun\022\024\n\006run_id\030\001 \001"
      "(\tB\004\210\265\030\001\032\n\n\010Response:+\342\?(\n&com.databrick"
      "s.rpc.RPC[$this.Response]\"[\n\nRestoreRun\022"
      "\024\n\006run_id\030\001 \001(\tB\004\210\265\030\001\032\n\n\010Response:+\342\?(\n&"
      "com.databricks.rpc.RPC[$this.Response]\"\235"
      "\001\n\tLogMetric\022\026\n\010run_uuid\030\001 \001(\tB\004\210\265\030\001\022\021\n\003"
      "key\030\002 \001(\tB\004\210\265\030\001\022\023\n\005value\030\003 \001(\001B\004\210\265\030\001\022\027\n\t"
      "timestamp\030\004 \001(\003B\004\210\265\030\001\032\n\n\010Response:+\342\?(\n&"
      "com.databricks.rpc.RPC[$this.Response]\"\203"
      "\001\n\010LogParam\022\026\n\010run_uuid\030\001 \001(\tB\004\210\265\030\001\022\021\n\003k"
      "ey\030\002 \001(\tB\004\210\265\030\001\022\023\n\005value\030\003 \001(\tB\004\210\265\030\001\032\n\n\010R"
      "esponse:+\342\?(\n&com.databricks.rpc.RPC[$th"
      "is.Response]\"\201\001\n\006SetTag\022\026\n\010run_uuid\030\001 \001("
      "\tB\004\210\265\030\001\022\021\n\003key\030\002 \001(\tB\004\210\265\030\001\022\023\n\005value\030\003 \001("
      "\tB\004\210\265\030\001\032\n\n\010Response:+\342\?(\n&com.databricks"
      ".rpc.RPC[$this.Response]\"s\n\006GetRun\022\026\n\010ru"
      "n_uuid\030\001 \001(\tB\004\210\265\030\001\032$\n\010Response\022\030\n\003run\030\001 "
      "\001(\0132\013.mlflow.Run:+\342\?(\n&com.databricks.rp"
      "c.RPC[$this.Response]\"\226\001\n\tGetMetric\022\026\n\010r"
      "un_uuid\030\001 \001(\tB\004\210\265\030\001\022\030\n\nmetric_key\030\002 \001(\tB"
      "\004\210\265\030\001\032*\n\010Response\022\036\n\006metric\030\001 \001(\0132\016.mlfl"
      "ow.Metric:+\342\?(\n&com.databricks.rpc.RPC[$"
      "this.Response]\"\227\001\n\010GetParam\022\026\n\010run_uuid\030"
      "\001 \001(\tB\004\210\265\030\001\022\030\n\nparam_name\030\002 \001(\tB\004\210\265\030\001\032,\n"
      "\010Response\022 \n\tparameter\030\001 \001(\0132\r.mlflow.Pa"
      "ram:+\342\?(\n&com.databricks.rpc.RPC[$this.R"
      "esponse]\"\212\001\n\020SearchExpression\0220\n\006metric\030"
      "\001 \001(\0132\036.mlflow.MetricSearchExpressionH\000\022"
      "6\n\tparameter\030\002 \001(\0132!.mlflow.ParameterSea"
      "rchExpressionH\000B\014\n\nexpression\"}\n\026MetricS"
      "earchExpression\022\013\n\003key\030\001 \001(\t\022$\n\005float\030\002 "
      "\001(\0132\023.mlflow.FloatClauseH\000\022&\n\006double\030\003 \001"
      "(\0132\024.mlflow.DoubleClauseH\000B\010\n\006clause\"Z\n\031"
      "ParameterSearchExpression\022\013\n\003key\030\001 \001(\t\022&"
      "\n\006string\030\002 \001(\0132\024.mlflow.StringClauseH\000B\010"
      "\n\006clause\"1\n\014StringClause\022\022\n\ncomparator\030\001"
      " \001(\t\022\r\n\005value\030\002 \001(\t\"0\n\013FloatClause\022\022\n\nco"
      "mparator\030\001 \001(\t\022\r\n\005value\030\002 \001(\002\"1\n\014DoubleC"
      "lause\022\022\n\ncomparator\030\001 \001(\t\022\r\n\005value\030\002 \001(\001"
      "\"\343\001\n\nSearchRuns\022\026\n\016experiment_ids\030\001 \003(\003\022"
      "3\n\021anded_expressions\030\002 \003(\0132\030.mlflow.Sear"
      "chExpression\0224\n\rrun_view_type\030\003 \001(\0162\020.ml"
      "flow.ViewType:\013ACTIVE_ONLY\032%\n\010Response\022\031"
      "\n\004runs\030\001 \003(\0132\013.mlflow.Run:+\342\?(\n&com.data"
      "bricks.rpc.RPC[$this.Response]\"\233\001\n\rListA"
      "rtifacts\022\020\n\010run_uuid\030\001 \001(\t\022\014\n\004path\030\002 \001(\t"
      "\032=\n\010Response\022\020\n\010root_uri\030\001 \001(\t\022\037\n\005files\030"
      "\002 \003(\0132\020.mlflow.FileInfo:+\342\?(\n&com.databr"
      "icks.rpc.RPC[$this.Response]\";\n\010FileInfo"
      "\022\014\n\004path\030\001 \001(\t\022\016\n\006is_dir\030\002 \001(\010\022\021\n\tfile_s"
      "ize\030\003 \001(\003\"f\n\013GetArtifact\022\020\n\010run_uuid\030\001 \001"
      "(\t\022\014\n\004path\030\002 \001(\t\032\n\n\010Response:+\342\?(\n&com.d"
      "atabricks.rpc.RPC[$this.Response]\"\236\001\n\020Ge"
      "tMetricHistory\022\026\n\010run_uuid\030\001 \001(\tB\004\210\265\030\001\022\030"
      "\n\nmetric_key\030\002 \001(\tB\004\210\265\030\001\032+\n\010Response\022\037\n\007"
      "metrics\030\001 \003(\0132\016.mlflow.Metric:+\342\?(\n&com."
      "databricks.rpc.RPC[$this.Response]*6\n\010Vi"
      "ewType\022\017\n\013ACTIVE_ONLY\020\001\022\020\n\014DELETED_ONLY\020"
      "\002\022\007\n\003ALL\020\003*I\n\nSourceType\022\014\n\010NOTEBOOK\020\001\022\007"
      "\n\003JOB\020\002\022\013\n\007PROJECT\020\003\022\t\n\005LOCAL\020\004\022\014\n\007UNKNO"
      "WN\020\350\007*M\n\tRunStatus\022\013\n\007RUNNING\020\001\022\r\n\tSCHED"
      "ULED\020\002\022\014\n\010FINISHED\020\003\022\n\n\006FAILED\020\004\022\n\n\006KILL"
      "ED\020\0052\217\023\n\rMlflowService\022\234\001\n\020createExperim"
      "ent\022\030.mlflow.CreateExperiment\032!.mlflow.C"
      "reateExperiment.Response\"K\202\265\030G\n0\n\004POST\022\""
      "/preview/mlflow/experiments/create\032\004\010\002\020\000"
      "\020\001*\021Create Experiment\022\225\001\n\017listExperiment"
      "s\022\027.mlflow.ListExperiments\032 .mlflow.List"
      "Experiments.Response\"G\202\265\030C\n-\n\003GET\022 /prev"
      "iew/mlflow/experiments/list\032\004\010\002\020\000\020\001*\020Lis"
      "t Experiments\022\214\001\n\rgetExperiment\022\025.mlflow"
      ".GetExperiment\032\036.mlflow.GetExperiment.Re"
      "sponse\"D\202\265\030@\n,\n\003GET\022\037/preview/mlflow/exp"
      "eriments/get\032\004\010\002\020\000\020\001*\016Get Experiment\022\234\001\n"
      "\020deleteExperiment\022\030.mlflow.DeleteExperim"
      "ent\032!.mlflow.DeleteExperiment.Response\"K"
      "\202\265\030G\n0\n\004POST\022\"/preview/mlflow/experiment"
      "s/delete\032\004\010\002\020\000\020\001*\021Delete Experiment\022\241\001\n\021"
      "restoreExperiment\022\031.mlflow.RestoreExperi"
      "ment\032\".mlflow.RestoreExperiment.Response"
      "\"M\202\265\030I\n1\n\004POST\022#/preview/mlflow/experime"
      "nts/restore\032\004\010\002\020\000\020\001*\022Restore Experiment\022"
      "y\n\tcreateRun\022\021.mlflow.CreateRun\032\032.mlflow"
      ".CreateRun.Response\"=\202\265\0309\n)\n\004POST\022\033/prev"
      "iew/mlflow/runs/create\032\004\010\002\020\000\020\001*\nCreate R"
      "un\022y\n\tupdateRun\022\021.mlflow.UpdateRun\032\032.mlf"
      "low.UpdateRun.Response\"=\202\265\0309\n)\n\004POST\022\033/p"
      "review/mlflow/runs/update\032\004\010\002\020\000\020\001*\nUpdat"
      "e Run\022m\n\tdeleteRun\022\021.mlflow.DeleteRun\032\032."
      "mlflow.DeleteRun.Response\"1\202\265\030-\n)\n\004POST\022"
      "\033/preview/mlflow/runs/delete\032\004\010\002\020\000\020\001\022q\n\n"
      "restoreRun\022\022.mlflow.RestoreRun\032\033.mlflow."
      "RestoreRun.Response\"2\202\265\030.\n*\n\004POST\022\034/prev"
      "iew/mlflow/runs/restore\032\004\010\002\020\000\020\001\022}\n\tlogMe"
      "tric\022\021.mlflow.LogMetric\032\032.mlflow.LogMetr"
      "ic.Response\"A\202\265\030=\n-\n\004POST\022\037/preview/mlfl"
      "ow/runs/log-metric\032\004\010\002\020\000\020\001*\nLog Metric\022|"
      "\n\010logParam\022\020.mlflow.LogParam\032\031.mlflow.Lo"
      "gParam.Response\"C\202\265\030\?\n0\n\004POST\022\"/preview/"
      "mlflow/runs/log-parameter\032\004\010\002\020\000\020\001*\tLog P"
      "aram\022n\n\006setTag\022\016.mlflow.SetTag\032\027.mlflow."
      "SetTag.Response\";\202\265\0307\n*\n\004POST\022\034/preview/"
      "mlflow/runs/set-tag\032\004\010\002\020\000\020\001*\007Set Tag\022i\n\006"
      "getRun\022\016.mlflow.GetRun\032\027.mlflow.GetRun.R"
      "esponse\"6\202\265\0302\n%\n\003GET\022\030/preview/mlflow/ru"
      "ns/get\032\004\010\002\020\000\020\001*\007Get Run\022x\n\tgetMetric\022\021.m"
      "lflow.GetMetric\032\032.mlflow.GetMetric.Respo"
      "nse\"<\202\265\0308\n(\n\003GET\022\033/preview/mlflow/metric"
      "s/get\032\004\010\002\020\000\020\001*\nGet Metric\022s\n\010getParam\022\020."
      "mlflow.GetParam\032\031.mlflow.GetParam.Respon"
      "se\":\202\265\0306\n\'\n\003GET\022\032/preview/mlflow/params/"
      "get\032\004\010\002\020\000\020\001*\tGet Param\022\247\001\n\nsearchRuns\022\022."
      "mlflow.SearchRuns\032\033.mlflow.SearchRuns.Re"
      "sponse\"h\202\265\030d\n)\n\004POST\022\033/preview/mlflow/ru"
      "ns/search\032\004\010\002\020\000\n(\n\003GET\022\033/preview/mlflow/"
      "runs/search\032\004\010\002\020\000\020\001*\013Search Runs\022\213\001\n\rlis"
      "tArtifacts\022\025.mlflow.ListArtifacts\032\036.mlfl"
      "ow.ListArtifacts.Response\"C\202\265\030\?\n+\n\003GET\022\036"
      "/preview/mlflow/artifacts/list\032\004\010\002\020\000\020\001*\016"
      "List Artifacts\022\235\001\n\020getMetricHistory\022\030.ml"
      "flow.GetMetricHistory\032!.mlflow.GetMetric"
      "History.Response\"L\202\265\030H\n0\n\003GET\022#/preview/"
      "mlflow/metrics/get-history\032\004\010\002\020\000\020\001*\022Get "
      "Metric HistoryB\036\n\024org.mlflow.api.proto\220\001"
      "\001\342\?\002\020\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7006);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "service.proto", &protobuf_RegisterTypes);
  ::protobuf_scalapb_2fscalapb_2eproto::AddDescriptors();
  ::protobuf_databricks_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_service_2eproto
namespace mlflow {
const ::google::protobuf::EnumDescriptor* ViewType_descriptor() {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_enum_descriptors[0];
}
bool ViewType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SourceType_descriptor() {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_enum_descriptors[1];
}
bool SourceType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 1000:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RunStatus_descriptor() {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2eproto::file_level_enum_descriptors[2];
}
bool RunStatus_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Metric::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Metric::kKeyFieldNumber;
const int Metric::kValueFieldNumber;
const int Metric::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Metric::Metric()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_Metric.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.Metric)
}
Metric::Metric(const Metric& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&value_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:mlflow.Metric)
}

void Metric::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&value_)) + sizeof(timestamp_));
}

Metric::~Metric() {
  // @@protoc_insertion_point(destructor:mlflow.Metric)
  SharedDtor();
}

void Metric::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Metric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Metric::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Metric& Metric::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_Metric.base);
  return *internal_default_instance();
}


void Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    key_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_) -
        reinterpret_cast<char*>(&value_)) + sizeof(timestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Metric::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.Metric)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.Metric.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.Metric)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.Metric)
  return false;
#undef DO_
}

void Metric::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.Metric.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional double value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->value(), output);
  }

  // optional int64 timestamp = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.Metric)
}

::google::protobuf::uint8* Metric::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.Metric.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional double value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->value(), target);
  }

  // optional int64 timestamp = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.Metric)
  return target;
}

size_t Metric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.Metric)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional double value = 2;
    if (has_value()) {
      total_size += 1 + 8;
    }

    // optional int64 timestamp = 3;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timestamp());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Metric::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.Metric)
  GOOGLE_DCHECK_NE(&from, this);
  const Metric* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Metric>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.Metric)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.Metric)
    MergeFrom(*source);
  }
}

void Metric::MergeFrom(const Metric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.Metric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000004u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Metric::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metric::CopyFrom(const Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metric::IsInitialized() const {
  return true;
}

void Metric::Swap(Metric* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Metric::InternalSwap(Metric* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Metric::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Param::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Param::kKeyFieldNumber;
const int Param::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Param::Param()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_Param.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.Param)
}
Param::Param(const Param& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.Param)
}

void Param::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Param::~Param() {
  // @@protoc_insertion_point(destructor:mlflow.Param)
  SharedDtor();
}

void Param::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Param::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Param& Param::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_Param.base);
  return *internal_default_instance();
}


void Param::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.Param)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Param::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.Param)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.Param.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.Param.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.Param)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.Param)
  return false;
#undef DO_
}

void Param::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.Param)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.Param.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.Param.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.Param)
}

::google::protobuf::uint8* Param::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.Param)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.Param.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.Param.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.Param)
  return target;
}

size_t Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.Param)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Param::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const Param* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Param>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.Param)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.Param)
    MergeFrom(*source);
  }
}

void Param::MergeFrom(const Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void Param::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Param::CopyFrom(const Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Param::IsInitialized() const {
  return true;
}

void Param::Swap(Param* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Param::InternalSwap(Param* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Param::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Run::InitAsDefaultInstance() {
  ::mlflow::_Run_default_instance_._instance.get_mutable()->info_ = const_cast< ::mlflow::RunInfo*>(
      ::mlflow::RunInfo::internal_default_instance());
  ::mlflow::_Run_default_instance_._instance.get_mutable()->data_ = const_cast< ::mlflow::RunData*>(
      ::mlflow::RunData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Run::kInfoFieldNumber;
const int Run::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Run::Run()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_Run.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.Run)
}
Run::Run(const Run& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::mlflow::RunInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  if (from.has_data()) {
    data_ = new ::mlflow::RunData(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.Run)
}

void Run::SharedCtor() {
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&info_)) + sizeof(data_));
}

Run::~Run() {
  // @@protoc_insertion_point(destructor:mlflow.Run)
  SharedDtor();
}

void Run::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
  if (this != internal_default_instance()) delete data_;
}

void Run::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Run::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Run& Run::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_Run.base);
  return *internal_default_instance();
}


void Run::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.Run)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(info_ != NULL);
      info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(data_ != NULL);
      data_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Run::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.Run)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mlflow.RunInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mlflow.RunData data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.Run)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.Run)
  return false;
#undef DO_
}

void Run::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.Run)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mlflow.RunInfo info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_info(), output);
  }

  // optional .mlflow.RunData data = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.Run)
}

::google::protobuf::uint8* Run::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.Run)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mlflow.RunInfo info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_info(), deterministic, target);
  }

  // optional .mlflow.RunData data = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_data(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.Run)
  return target;
}

size_t Run::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.Run)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .mlflow.RunInfo info = 1;
    if (has_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *info_);
    }

    // optional .mlflow.RunData data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Run::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.Run)
  GOOGLE_DCHECK_NE(&from, this);
  const Run* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Run>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.Run)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.Run)
    MergeFrom(*source);
  }
}

void Run::MergeFrom(const Run& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.Run)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_info()->::mlflow::RunInfo::MergeFrom(from.info());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_data()->::mlflow::RunData::MergeFrom(from.data());
    }
  }
}

void Run::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.Run)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Run::CopyFrom(const Run& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.Run)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Run::IsInitialized() const {
  return true;
}

void Run::Swap(Run* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Run::InternalSwap(Run* other) {
  using std::swap;
  swap(info_, other->info_);
  swap(data_, other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Run::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RunData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunData::kMetricsFieldNumber;
const int RunData::kParamsFieldNumber;
const int RunData::kTagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunData::RunData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_RunData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.RunData)
}
RunData::RunData(const RunData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      metrics_(from.metrics_),
      params_(from.params_),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mlflow.RunData)
}

void RunData::SharedCtor() {
}

RunData::~RunData() {
  // @@protoc_insertion_point(destructor:mlflow.RunData)
  SharedDtor();
}

void RunData::SharedDtor() {
}

void RunData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RunData::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunData& RunData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_RunData.base);
  return *internal_default_instance();
}


void RunData::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.RunData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metrics_.Clear();
  params_.Clear();
  tags_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RunData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.RunData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mlflow.Metric metrics = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .mlflow.Param params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .mlflow.RunTag tags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.RunData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.RunData)
  return false;
#undef DO_
}

void RunData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.RunData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mlflow.Metric metrics = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->metrics(static_cast<int>(i)),
      output);
  }

  // repeated .mlflow.Param params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->params(static_cast<int>(i)),
      output);
  }

  // repeated .mlflow.RunTag tags = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->tags(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.RunData)
}

::google::protobuf::uint8* RunData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.RunData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mlflow.Metric metrics = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->metrics(static_cast<int>(i)), deterministic, target);
  }

  // repeated .mlflow.Param params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->params(static_cast<int>(i)), deterministic, target);
  }

  // repeated .mlflow.RunTag tags = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->tags(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.RunData)
  return target;
}

size_t RunData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.RunData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .mlflow.Metric metrics = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->metrics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metrics(static_cast<int>(i)));
    }
  }

  // repeated .mlflow.Param params = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->params(static_cast<int>(i)));
    }
  }

  // repeated .mlflow.RunTag tags = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->tags_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tags(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RunData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.RunData)
  GOOGLE_DCHECK_NE(&from, this);
  const RunData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.RunData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.RunData)
    MergeFrom(*source);
  }
}

void RunData::MergeFrom(const RunData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.RunData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metrics_.MergeFrom(from.metrics_);
  params_.MergeFrom(from.params_);
  tags_.MergeFrom(from.tags_);
}

void RunData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.RunData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunData::CopyFrom(const RunData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.RunData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunData::IsInitialized() const {
  return true;
}

void RunData::Swap(RunData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunData::InternalSwap(RunData* other) {
  using std::swap;
  CastToBase(&metrics_)->InternalSwap(CastToBase(&other->metrics_));
  CastToBase(&params_)->InternalSwap(CastToBase(&other->params_));
  CastToBase(&tags_)->InternalSwap(CastToBase(&other->tags_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RunData::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RunTag::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunTag::kKeyFieldNumber;
const int RunTag::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunTag::RunTag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_RunTag.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.RunTag)
}
RunTag::RunTag(const RunTag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.RunTag)
}

void RunTag::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RunTag::~RunTag() {
  // @@protoc_insertion_point(destructor:mlflow.RunTag)
  SharedDtor();
}

void RunTag::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RunTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RunTag::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunTag& RunTag::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_RunTag.base);
  return *internal_default_instance();
}


void RunTag::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.RunTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RunTag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.RunTag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.RunTag.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.RunTag.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.RunTag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.RunTag)
  return false;
#undef DO_
}

void RunTag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.RunTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunTag.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunTag.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.RunTag)
}

::google::protobuf::uint8* RunTag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.RunTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunTag.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunTag.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.RunTag)
  return target;
}

size_t RunTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.RunTag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RunTag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.RunTag)
  GOOGLE_DCHECK_NE(&from, this);
  const RunTag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunTag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.RunTag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.RunTag)
    MergeFrom(*source);
  }
}

void RunTag::MergeFrom(const RunTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.RunTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void RunTag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.RunTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunTag::CopyFrom(const RunTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.RunTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunTag::IsInitialized() const {
  return true;
}

void RunTag::Swap(RunTag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunTag::InternalSwap(RunTag* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RunTag::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RunInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunInfo::kRunUuidFieldNumber;
const int RunInfo::kExperimentIdFieldNumber;
const int RunInfo::kNameFieldNumber;
const int RunInfo::kSourceTypeFieldNumber;
const int RunInfo::kSourceNameFieldNumber;
const int RunInfo::kUserIdFieldNumber;
const int RunInfo::kStatusFieldNumber;
const int RunInfo::kStartTimeFieldNumber;
const int RunInfo::kEndTimeFieldNumber;
const int RunInfo::kSourceVersionFieldNumber;
const int RunInfo::kEntryPointNameFieldNumber;
const int RunInfo::kArtifactUriFieldNumber;
const int RunInfo::kLifecycleStageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunInfo::RunInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_RunInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.RunInfo)
}
RunInfo::RunInfo(const RunInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_run_uuid()) {
    run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  source_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_name()) {
    source_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_name_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_id()) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  source_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_version()) {
    source_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_version_);
  }
  entry_point_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_entry_point_name()) {
    entry_point_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entry_point_name_);
  }
  artifact_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_artifact_uri()) {
    artifact_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.artifact_uri_);
  }
  lifecycle_stage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lifecycle_stage()) {
    lifecycle_stage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lifecycle_stage_);
  }
  ::memcpy(&experiment_id_, &from.experiment_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&experiment_id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:mlflow.RunInfo)
}

void RunInfo::SharedCtor() {
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entry_point_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  artifact_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lifecycle_stage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&experiment_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&experiment_id_)) + sizeof(end_time_));
  source_type_ = 1;
  status_ = 1;
}

RunInfo::~RunInfo() {
  // @@protoc_insertion_point(destructor:mlflow.RunInfo)
  SharedDtor();
}

void RunInfo::SharedDtor() {
  run_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entry_point_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  artifact_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lifecycle_stage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RunInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RunInfo::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunInfo& RunInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_RunInfo.base);
  return *internal_default_instance();
}


void RunInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.RunInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      run_uuid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      source_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      user_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      source_version_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      entry_point_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      artifact_uri_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      lifecycle_stage_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 7936u) {
    ::memset(&experiment_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&end_time_) -
        reinterpret_cast<char*>(&experiment_id_)) + sizeof(end_time_));
    source_type_ = 1;
    status_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RunInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.RunInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string run_uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.RunInfo.run_uuid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 experiment_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_experiment_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &experiment_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.RunInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mlflow.SourceType source_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::mlflow::SourceType_IsValid(value)) {
            set_source_type(static_cast< ::mlflow::SourceType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string source_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_name().data(), static_cast<int>(this->source_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.RunInfo.source_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string user_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.RunInfo.user_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mlflow.RunStatus status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::mlflow::RunStatus_IsValid(value)) {
            set_status(static_cast< ::mlflow::RunStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 start_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_start_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 end_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_end_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string source_version = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_version().data(), static_cast<int>(this->source_version().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.RunInfo.source_version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string entry_point_name = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entry_point_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->entry_point_name().data(), static_cast<int>(this->entry_point_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.RunInfo.entry_point_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string artifact_uri = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_artifact_uri()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->artifact_uri().data(), static_cast<int>(this->artifact_uri().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.RunInfo.artifact_uri");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string lifecycle_stage = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lifecycle_stage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lifecycle_stage().data(), static_cast<int>(this->lifecycle_stage().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.RunInfo.lifecycle_stage");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.RunInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.RunInfo)
  return false;
#undef DO_
}

void RunInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.RunInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunInfo.run_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->run_uuid(), output);
  }

  // optional int64 experiment_id = 2;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->experiment_id(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional .mlflow.SourceType source_type = 4;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->source_type(), output);
  }

  // optional string source_name = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_name().data(), static_cast<int>(this->source_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunInfo.source_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->source_name(), output);
  }

  // optional string user_id = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunInfo.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->user_id(), output);
  }

  // optional .mlflow.RunStatus status = 7;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->status(), output);
  }

  // optional int64 start_time = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->start_time(), output);
  }

  // optional int64 end_time = 9;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->end_time(), output);
  }

  // optional string source_version = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_version().data(), static_cast<int>(this->source_version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunInfo.source_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->source_version(), output);
  }

  // optional string entry_point_name = 11;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->entry_point_name().data(), static_cast<int>(this->entry_point_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunInfo.entry_point_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->entry_point_name(), output);
  }

  // optional string artifact_uri = 13;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->artifact_uri().data(), static_cast<int>(this->artifact_uri().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunInfo.artifact_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->artifact_uri(), output);
  }

  // optional string lifecycle_stage = 14;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lifecycle_stage().data(), static_cast<int>(this->lifecycle_stage().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunInfo.lifecycle_stage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->lifecycle_stage(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.RunInfo)
}

::google::protobuf::uint8* RunInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.RunInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunInfo.run_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->run_uuid(), target);
  }

  // optional int64 experiment_id = 2;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->experiment_id(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional .mlflow.SourceType source_type = 4;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->source_type(), target);
  }

  // optional string source_name = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_name().data(), static_cast<int>(this->source_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunInfo.source_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->source_name(), target);
  }

  // optional string user_id = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunInfo.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->user_id(), target);
  }

  // optional .mlflow.RunStatus status = 7;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->status(), target);
  }

  // optional int64 start_time = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->start_time(), target);
  }

  // optional int64 end_time = 9;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->end_time(), target);
  }

  // optional string source_version = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_version().data(), static_cast<int>(this->source_version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunInfo.source_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->source_version(), target);
  }

  // optional string entry_point_name = 11;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->entry_point_name().data(), static_cast<int>(this->entry_point_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunInfo.entry_point_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->entry_point_name(), target);
  }

  // optional string artifact_uri = 13;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->artifact_uri().data(), static_cast<int>(this->artifact_uri().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunInfo.artifact_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->artifact_uri(), target);
  }

  // optional string lifecycle_stage = 14;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lifecycle_stage().data(), static_cast<int>(this->lifecycle_stage().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RunInfo.lifecycle_stage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->lifecycle_stage(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.RunInfo)
  return target;
}

size_t RunInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.RunInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string run_uuid = 1;
    if (has_run_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->run_uuid());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string source_name = 5;
    if (has_source_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_name());
    }

    // optional string user_id = 6;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional string source_version = 10;
    if (has_source_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_version());
    }

    // optional string entry_point_name = 11;
    if (has_entry_point_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entry_point_name());
    }

    // optional string artifact_uri = 13;
    if (has_artifact_uri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->artifact_uri());
    }

    // optional string lifecycle_stage = 14;
    if (has_lifecycle_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lifecycle_stage());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional int64 experiment_id = 2;
    if (has_experiment_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->experiment_id());
    }

    // optional int64 start_time = 8;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 9;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional .mlflow.SourceType source_type = 4;
    if (has_source_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->source_type());
    }

    // optional .mlflow.RunStatus status = 7;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RunInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.RunInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RunInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.RunInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.RunInfo)
    MergeFrom(*source);
  }
}

void RunInfo::MergeFrom(const RunInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.RunInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_run_uuid();
      run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_source_name();
      source_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_source_version();
      source_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_version_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_entry_point_name();
      entry_point_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entry_point_name_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_artifact_uri();
      artifact_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.artifact_uri_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_lifecycle_stage();
      lifecycle_stage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lifecycle_stage_);
    }
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      experiment_id_ = from.experiment_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      start_time_ = from.start_time_;
    }
    if (cached_has_bits & 0x00000400u) {
      end_time_ = from.end_time_;
    }
    if (cached_has_bits & 0x00000800u) {
      source_type_ = from.source_type_;
    }
    if (cached_has_bits & 0x00001000u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RunInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.RunInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunInfo::CopyFrom(const RunInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.RunInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunInfo::IsInitialized() const {
  return true;
}

void RunInfo::Swap(RunInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunInfo::InternalSwap(RunInfo* other) {
  using std::swap;
  run_uuid_.Swap(&other->run_uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  source_name_.Swap(&other->source_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  source_version_.Swap(&other->source_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  entry_point_name_.Swap(&other->entry_point_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  artifact_uri_.Swap(&other->artifact_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  lifecycle_stage_.Swap(&other->lifecycle_stage_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(experiment_id_, other->experiment_id_);
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  swap(source_type_, other->source_type_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RunInfo::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Experiment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Experiment::kExperimentIdFieldNumber;
const int Experiment::kNameFieldNumber;
const int Experiment::kArtifactLocationFieldNumber;
const int Experiment::kLifecycleStageFieldNumber;
const int Experiment::kLastUpdateTimeFieldNumber;
const int Experiment::kCreationTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Experiment::Experiment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_Experiment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.Experiment)
}
Experiment::Experiment(const Experiment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  artifact_location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_artifact_location()) {
    artifact_location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.artifact_location_);
  }
  lifecycle_stage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lifecycle_stage()) {
    lifecycle_stage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lifecycle_stage_);
  }
  ::memcpy(&experiment_id_, &from.experiment_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&creation_time_) -
    reinterpret_cast<char*>(&experiment_id_)) + sizeof(creation_time_));
  // @@protoc_insertion_point(copy_constructor:mlflow.Experiment)
}

void Experiment::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  artifact_location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lifecycle_stage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&experiment_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&creation_time_) -
      reinterpret_cast<char*>(&experiment_id_)) + sizeof(creation_time_));
}

Experiment::~Experiment() {
  // @@protoc_insertion_point(destructor:mlflow.Experiment)
  SharedDtor();
}

void Experiment::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  artifact_location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lifecycle_stage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Experiment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Experiment::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Experiment& Experiment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_Experiment.base);
  return *internal_default_instance();
}


void Experiment::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.Experiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      artifact_location_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      lifecycle_stage_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&experiment_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&creation_time_) -
        reinterpret_cast<char*>(&experiment_id_)) + sizeof(creation_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Experiment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.Experiment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 experiment_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_experiment_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &experiment_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.Experiment.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string artifact_location = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_artifact_location()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->artifact_location().data(), static_cast<int>(this->artifact_location().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.Experiment.artifact_location");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string lifecycle_stage = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lifecycle_stage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lifecycle_stage().data(), static_cast<int>(this->lifecycle_stage().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.Experiment.lifecycle_stage");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_update_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_last_update_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 creation_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_creation_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &creation_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.Experiment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.Experiment)
  return false;
#undef DO_
}

void Experiment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.Experiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 experiment_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->experiment_id(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.Experiment.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string artifact_location = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->artifact_location().data(), static_cast<int>(this->artifact_location().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.Experiment.artifact_location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->artifact_location(), output);
  }

  // optional string lifecycle_stage = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lifecycle_stage().data(), static_cast<int>(this->lifecycle_stage().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.Experiment.lifecycle_stage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->lifecycle_stage(), output);
  }

  // optional int64 last_update_time = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->last_update_time(), output);
  }

  // optional int64 creation_time = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->creation_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.Experiment)
}

::google::protobuf::uint8* Experiment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.Experiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 experiment_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->experiment_id(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.Experiment.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string artifact_location = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->artifact_location().data(), static_cast<int>(this->artifact_location().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.Experiment.artifact_location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->artifact_location(), target);
  }

  // optional string lifecycle_stage = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lifecycle_stage().data(), static_cast<int>(this->lifecycle_stage().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.Experiment.lifecycle_stage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->lifecycle_stage(), target);
  }

  // optional int64 last_update_time = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->last_update_time(), target);
  }

  // optional int64 creation_time = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->creation_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.Experiment)
  return target;
}

size_t Experiment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.Experiment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string artifact_location = 3;
    if (has_artifact_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->artifact_location());
    }

    // optional string lifecycle_stage = 4;
    if (has_lifecycle_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lifecycle_stage());
    }

    // optional int64 experiment_id = 1;
    if (has_experiment_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->experiment_id());
    }

    // optional int64 last_update_time = 5;
    if (has_last_update_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->last_update_time());
    }

    // optional int64 creation_time = 6;
    if (has_creation_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->creation_time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Experiment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.Experiment)
  GOOGLE_DCHECK_NE(&from, this);
  const Experiment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Experiment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.Experiment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.Experiment)
    MergeFrom(*source);
  }
}

void Experiment::MergeFrom(const Experiment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.Experiment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_artifact_location();
      artifact_location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.artifact_location_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_lifecycle_stage();
      lifecycle_stage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lifecycle_stage_);
    }
    if (cached_has_bits & 0x00000008u) {
      experiment_id_ = from.experiment_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      last_update_time_ = from.last_update_time_;
    }
    if (cached_has_bits & 0x00000020u) {
      creation_time_ = from.creation_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Experiment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.Experiment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Experiment::CopyFrom(const Experiment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.Experiment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Experiment::IsInitialized() const {
  return true;
}

void Experiment::Swap(Experiment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Experiment::InternalSwap(Experiment* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  artifact_location_.Swap(&other->artifact_location_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  lifecycle_stage_.Swap(&other->lifecycle_stage_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(experiment_id_, other->experiment_id_);
  swap(last_update_time_, other->last_update_time_);
  swap(creation_time_, other->creation_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Experiment::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateExperiment_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateExperiment_Response::kExperimentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateExperiment_Response::CreateExperiment_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_CreateExperiment_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.CreateExperiment.Response)
}
CreateExperiment_Response::CreateExperiment_Response(const CreateExperiment_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  experiment_id_ = from.experiment_id_;
  // @@protoc_insertion_point(copy_constructor:mlflow.CreateExperiment.Response)
}

void CreateExperiment_Response::SharedCtor() {
  experiment_id_ = GOOGLE_LONGLONG(0);
}

CreateExperiment_Response::~CreateExperiment_Response() {
  // @@protoc_insertion_point(destructor:mlflow.CreateExperiment.Response)
  SharedDtor();
}

void CreateExperiment_Response::SharedDtor() {
}

void CreateExperiment_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateExperiment_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateExperiment_Response& CreateExperiment_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_CreateExperiment_Response.base);
  return *internal_default_instance();
}


void CreateExperiment_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.CreateExperiment.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  experiment_id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateExperiment_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.CreateExperiment.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 experiment_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_experiment_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &experiment_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.CreateExperiment.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.CreateExperiment.Response)
  return false;
#undef DO_
}

void CreateExperiment_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.CreateExperiment.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 experiment_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->experiment_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.CreateExperiment.Response)
}

::google::protobuf::uint8* CreateExperiment_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.CreateExperiment.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 experiment_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->experiment_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.CreateExperiment.Response)
  return target;
}

size_t CreateExperiment_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.CreateExperiment.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int64 experiment_id = 1;
  if (has_experiment_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->experiment_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateExperiment_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.CreateExperiment.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateExperiment_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateExperiment_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.CreateExperiment.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.CreateExperiment.Response)
    MergeFrom(*source);
  }
}

void CreateExperiment_Response::MergeFrom(const CreateExperiment_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.CreateExperiment.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_experiment_id()) {
    set_experiment_id(from.experiment_id());
  }
}

void CreateExperiment_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.CreateExperiment.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateExperiment_Response::CopyFrom(const CreateExperiment_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.CreateExperiment.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateExperiment_Response::IsInitialized() const {
  return true;
}

void CreateExperiment_Response::Swap(CreateExperiment_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateExperiment_Response::InternalSwap(CreateExperiment_Response* other) {
  using std::swap;
  swap(experiment_id_, other->experiment_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateExperiment_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateExperiment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateExperiment::kNameFieldNumber;
const int CreateExperiment::kArtifactLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateExperiment::CreateExperiment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_CreateExperiment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.CreateExperiment)
}
CreateExperiment::CreateExperiment(const CreateExperiment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  artifact_location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_artifact_location()) {
    artifact_location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.artifact_location_);
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.CreateExperiment)
}

void CreateExperiment::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  artifact_location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateExperiment::~CreateExperiment() {
  // @@protoc_insertion_point(destructor:mlflow.CreateExperiment)
  SharedDtor();
}

void CreateExperiment::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  artifact_location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateExperiment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateExperiment::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateExperiment& CreateExperiment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_CreateExperiment.base);
  return *internal_default_instance();
}


void CreateExperiment::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.CreateExperiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      artifact_location_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateExperiment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.CreateExperiment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1 [(.validate_required) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.CreateExperiment.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string artifact_location = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_artifact_location()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->artifact_location().data(), static_cast<int>(this->artifact_location().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.CreateExperiment.artifact_location");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.CreateExperiment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.CreateExperiment)
  return false;
#undef DO_
}

void CreateExperiment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.CreateExperiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.CreateExperiment.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string artifact_location = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->artifact_location().data(), static_cast<int>(this->artifact_location().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.CreateExperiment.artifact_location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->artifact_location(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.CreateExperiment)
}

::google::protobuf::uint8* CreateExperiment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.CreateExperiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.CreateExperiment.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string artifact_location = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->artifact_location().data(), static_cast<int>(this->artifact_location().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.CreateExperiment.artifact_location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->artifact_location(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.CreateExperiment)
  return target;
}

size_t CreateExperiment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.CreateExperiment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1 [(.validate_required) = true];
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string artifact_location = 5;
    if (has_artifact_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->artifact_location());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateExperiment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.CreateExperiment)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateExperiment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateExperiment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.CreateExperiment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.CreateExperiment)
    MergeFrom(*source);
  }
}

void CreateExperiment::MergeFrom(const CreateExperiment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.CreateExperiment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_artifact_location();
      artifact_location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.artifact_location_);
    }
  }
}

void CreateExperiment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.CreateExperiment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateExperiment::CopyFrom(const CreateExperiment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.CreateExperiment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateExperiment::IsInitialized() const {
  return true;
}

void CreateExperiment::Swap(CreateExperiment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateExperiment::InternalSwap(CreateExperiment* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  artifact_location_.Swap(&other->artifact_location_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateExperiment::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListExperiments_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListExperiments_Response::kExperimentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListExperiments_Response::ListExperiments_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_ListExperiments_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.ListExperiments.Response)
}
ListExperiments_Response::ListExperiments_Response(const ListExperiments_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      experiments_(from.experiments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mlflow.ListExperiments.Response)
}

void ListExperiments_Response::SharedCtor() {
}

ListExperiments_Response::~ListExperiments_Response() {
  // @@protoc_insertion_point(destructor:mlflow.ListExperiments.Response)
  SharedDtor();
}

void ListExperiments_Response::SharedDtor() {
}

void ListExperiments_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListExperiments_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListExperiments_Response& ListExperiments_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_ListExperiments_Response.base);
  return *internal_default_instance();
}


void ListExperiments_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.ListExperiments.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  experiments_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ListExperiments_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.ListExperiments.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mlflow.Experiment experiments = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_experiments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.ListExperiments.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.ListExperiments.Response)
  return false;
#undef DO_
}

void ListExperiments_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.ListExperiments.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mlflow.Experiment experiments = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->experiments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->experiments(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.ListExperiments.Response)
}

::google::protobuf::uint8* ListExperiments_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.ListExperiments.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mlflow.Experiment experiments = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->experiments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->experiments(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.ListExperiments.Response)
  return target;
}

size_t ListExperiments_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.ListExperiments.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .mlflow.Experiment experiments = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->experiments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->experiments(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListExperiments_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.ListExperiments.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const ListExperiments_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListExperiments_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.ListExperiments.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.ListExperiments.Response)
    MergeFrom(*source);
  }
}

void ListExperiments_Response::MergeFrom(const ListExperiments_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.ListExperiments.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  experiments_.MergeFrom(from.experiments_);
}

void ListExperiments_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.ListExperiments.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListExperiments_Response::CopyFrom(const ListExperiments_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.ListExperiments.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListExperiments_Response::IsInitialized() const {
  return true;
}

void ListExperiments_Response::Swap(ListExperiments_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListExperiments_Response::InternalSwap(ListExperiments_Response* other) {
  using std::swap;
  CastToBase(&experiments_)->InternalSwap(CastToBase(&other->experiments_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListExperiments_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListExperiments::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListExperiments::kViewTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListExperiments::ListExperiments()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_ListExperiments.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.ListExperiments)
}
ListExperiments::ListExperiments(const ListExperiments& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  view_type_ = from.view_type_;
  // @@protoc_insertion_point(copy_constructor:mlflow.ListExperiments)
}

void ListExperiments::SharedCtor() {
  view_type_ = 1;
}

ListExperiments::~ListExperiments() {
  // @@protoc_insertion_point(destructor:mlflow.ListExperiments)
  SharedDtor();
}

void ListExperiments::SharedDtor() {
}

void ListExperiments::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListExperiments::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListExperiments& ListExperiments::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_ListExperiments.base);
  return *internal_default_instance();
}


void ListExperiments::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.ListExperiments)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  view_type_ = 1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ListExperiments::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.ListExperiments)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mlflow.ViewType view_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::mlflow::ViewType_IsValid(value)) {
            set_view_type(static_cast< ::mlflow::ViewType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.ListExperiments)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.ListExperiments)
  return false;
#undef DO_
}

void ListExperiments::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.ListExperiments)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mlflow.ViewType view_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->view_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.ListExperiments)
}

::google::protobuf::uint8* ListExperiments::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.ListExperiments)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mlflow.ViewType view_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->view_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.ListExperiments)
  return target;
}

size_t ListExperiments::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.ListExperiments)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .mlflow.ViewType view_type = 1;
  if (has_view_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->view_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListExperiments::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.ListExperiments)
  GOOGLE_DCHECK_NE(&from, this);
  const ListExperiments* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListExperiments>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.ListExperiments)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.ListExperiments)
    MergeFrom(*source);
  }
}

void ListExperiments::MergeFrom(const ListExperiments& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.ListExperiments)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_view_type()) {
    set_view_type(from.view_type());
  }
}

void ListExperiments::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.ListExperiments)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListExperiments::CopyFrom(const ListExperiments& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.ListExperiments)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListExperiments::IsInitialized() const {
  return true;
}

void ListExperiments::Swap(ListExperiments* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListExperiments::InternalSwap(ListExperiments* other) {
  using std::swap;
  swap(view_type_, other->view_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListExperiments::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetExperiment_Response::InitAsDefaultInstance() {
  ::mlflow::_GetExperiment_Response_default_instance_._instance.get_mutable()->experiment_ = const_cast< ::mlflow::Experiment*>(
      ::mlflow::Experiment::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetExperiment_Response::kExperimentFieldNumber;
const int GetExperiment_Response::kRunsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetExperiment_Response::GetExperiment_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_GetExperiment_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.GetExperiment.Response)
}
GetExperiment_Response::GetExperiment_Response(const GetExperiment_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      runs_(from.runs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_experiment()) {
    experiment_ = new ::mlflow::Experiment(*from.experiment_);
  } else {
    experiment_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.GetExperiment.Response)
}

void GetExperiment_Response::SharedCtor() {
  experiment_ = NULL;
}

GetExperiment_Response::~GetExperiment_Response() {
  // @@protoc_insertion_point(destructor:mlflow.GetExperiment.Response)
  SharedDtor();
}

void GetExperiment_Response::SharedDtor() {
  if (this != internal_default_instance()) delete experiment_;
}

void GetExperiment_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetExperiment_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetExperiment_Response& GetExperiment_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_GetExperiment_Response.base);
  return *internal_default_instance();
}


void GetExperiment_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.GetExperiment.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  runs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(experiment_ != NULL);
    experiment_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetExperiment_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.GetExperiment.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mlflow.Experiment experiment = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_experiment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .mlflow.RunInfo runs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_runs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.GetExperiment.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.GetExperiment.Response)
  return false;
#undef DO_
}

void GetExperiment_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.GetExperiment.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mlflow.Experiment experiment = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_experiment(), output);
  }

  // repeated .mlflow.RunInfo runs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->runs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->runs(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.GetExperiment.Response)
}

::google::protobuf::uint8* GetExperiment_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.GetExperiment.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mlflow.Experiment experiment = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_experiment(), deterministic, target);
  }

  // repeated .mlflow.RunInfo runs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->runs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->runs(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.GetExperiment.Response)
  return target;
}

size_t GetExperiment_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.GetExperiment.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .mlflow.RunInfo runs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->runs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->runs(static_cast<int>(i)));
    }
  }

  // optional .mlflow.Experiment experiment = 1;
  if (has_experiment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *experiment_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetExperiment_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.GetExperiment.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const GetExperiment_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetExperiment_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.GetExperiment.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.GetExperiment.Response)
    MergeFrom(*source);
  }
}

void GetExperiment_Response::MergeFrom(const GetExperiment_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.GetExperiment.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  runs_.MergeFrom(from.runs_);
  if (from.has_experiment()) {
    mutable_experiment()->::mlflow::Experiment::MergeFrom(from.experiment());
  }
}

void GetExperiment_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.GetExperiment.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetExperiment_Response::CopyFrom(const GetExperiment_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.GetExperiment.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExperiment_Response::IsInitialized() const {
  return true;
}

void GetExperiment_Response::Swap(GetExperiment_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetExperiment_Response::InternalSwap(GetExperiment_Response* other) {
  using std::swap;
  CastToBase(&runs_)->InternalSwap(CastToBase(&other->runs_));
  swap(experiment_, other->experiment_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetExperiment_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetExperiment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetExperiment::kExperimentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetExperiment::GetExperiment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_GetExperiment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.GetExperiment)
}
GetExperiment::GetExperiment(const GetExperiment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  experiment_id_ = from.experiment_id_;
  // @@protoc_insertion_point(copy_constructor:mlflow.GetExperiment)
}

void GetExperiment::SharedCtor() {
  experiment_id_ = GOOGLE_LONGLONG(0);
}

GetExperiment::~GetExperiment() {
  // @@protoc_insertion_point(destructor:mlflow.GetExperiment)
  SharedDtor();
}

void GetExperiment::SharedDtor() {
}

void GetExperiment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetExperiment::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetExperiment& GetExperiment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_GetExperiment.base);
  return *internal_default_instance();
}


void GetExperiment::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.GetExperiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  experiment_id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetExperiment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.GetExperiment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 experiment_id = 1 [(.validate_required) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_experiment_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &experiment_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.GetExperiment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.GetExperiment)
  return false;
#undef DO_
}

void GetExperiment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.GetExperiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 experiment_id = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->experiment_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.GetExperiment)
}

::google::protobuf::uint8* GetExperiment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.GetExperiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 experiment_id = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->experiment_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.GetExperiment)
  return target;
}

size_t GetExperiment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.GetExperiment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int64 experiment_id = 1 [(.validate_required) = true];
  if (has_experiment_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->experiment_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetExperiment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.GetExperiment)
  GOOGLE_DCHECK_NE(&from, this);
  const GetExperiment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetExperiment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.GetExperiment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.GetExperiment)
    MergeFrom(*source);
  }
}

void GetExperiment::MergeFrom(const GetExperiment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.GetExperiment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_experiment_id()) {
    set_experiment_id(from.experiment_id());
  }
}

void GetExperiment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.GetExperiment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetExperiment::CopyFrom(const GetExperiment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.GetExperiment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExperiment::IsInitialized() const {
  return true;
}

void GetExperiment::Swap(GetExperiment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetExperiment::InternalSwap(GetExperiment* other) {
  using std::swap;
  swap(experiment_id_, other->experiment_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetExperiment::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteExperiment_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteExperiment_Response::DeleteExperiment_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_DeleteExperiment_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.DeleteExperiment.Response)
}
DeleteExperiment_Response::DeleteExperiment_Response(const DeleteExperiment_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mlflow.DeleteExperiment.Response)
}

void DeleteExperiment_Response::SharedCtor() {
}

DeleteExperiment_Response::~DeleteExperiment_Response() {
  // @@protoc_insertion_point(destructor:mlflow.DeleteExperiment.Response)
  SharedDtor();
}

void DeleteExperiment_Response::SharedDtor() {
}

void DeleteExperiment_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteExperiment_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteExperiment_Response& DeleteExperiment_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_DeleteExperiment_Response.base);
  return *internal_default_instance();
}


void DeleteExperiment_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.DeleteExperiment.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeleteExperiment_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.DeleteExperiment.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.DeleteExperiment.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.DeleteExperiment.Response)
  return false;
#undef DO_
}

void DeleteExperiment_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.DeleteExperiment.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.DeleteExperiment.Response)
}

::google::protobuf::uint8* DeleteExperiment_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.DeleteExperiment.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.DeleteExperiment.Response)
  return target;
}

size_t DeleteExperiment_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.DeleteExperiment.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteExperiment_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.DeleteExperiment.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteExperiment_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteExperiment_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.DeleteExperiment.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.DeleteExperiment.Response)
    MergeFrom(*source);
  }
}

void DeleteExperiment_Response::MergeFrom(const DeleteExperiment_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.DeleteExperiment.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteExperiment_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.DeleteExperiment.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteExperiment_Response::CopyFrom(const DeleteExperiment_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.DeleteExperiment.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteExperiment_Response::IsInitialized() const {
  return true;
}

void DeleteExperiment_Response::Swap(DeleteExperiment_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteExperiment_Response::InternalSwap(DeleteExperiment_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteExperiment_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteExperiment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteExperiment::kExperimentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteExperiment::DeleteExperiment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_DeleteExperiment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.DeleteExperiment)
}
DeleteExperiment::DeleteExperiment(const DeleteExperiment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  experiment_id_ = from.experiment_id_;
  // @@protoc_insertion_point(copy_constructor:mlflow.DeleteExperiment)
}

void DeleteExperiment::SharedCtor() {
  experiment_id_ = GOOGLE_LONGLONG(0);
}

DeleteExperiment::~DeleteExperiment() {
  // @@protoc_insertion_point(destructor:mlflow.DeleteExperiment)
  SharedDtor();
}

void DeleteExperiment::SharedDtor() {
}

void DeleteExperiment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteExperiment::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteExperiment& DeleteExperiment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_DeleteExperiment.base);
  return *internal_default_instance();
}


void DeleteExperiment::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.DeleteExperiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  experiment_id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeleteExperiment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.DeleteExperiment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 experiment_id = 1 [(.validate_required) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_experiment_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &experiment_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.DeleteExperiment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.DeleteExperiment)
  return false;
#undef DO_
}

void DeleteExperiment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.DeleteExperiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 experiment_id = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->experiment_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.DeleteExperiment)
}

::google::protobuf::uint8* DeleteExperiment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.DeleteExperiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 experiment_id = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->experiment_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.DeleteExperiment)
  return target;
}

size_t DeleteExperiment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.DeleteExperiment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int64 experiment_id = 1 [(.validate_required) = true];
  if (has_experiment_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->experiment_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteExperiment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.DeleteExperiment)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteExperiment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteExperiment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.DeleteExperiment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.DeleteExperiment)
    MergeFrom(*source);
  }
}

void DeleteExperiment::MergeFrom(const DeleteExperiment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.DeleteExperiment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_experiment_id()) {
    set_experiment_id(from.experiment_id());
  }
}

void DeleteExperiment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.DeleteExperiment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteExperiment::CopyFrom(const DeleteExperiment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.DeleteExperiment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteExperiment::IsInitialized() const {
  return true;
}

void DeleteExperiment::Swap(DeleteExperiment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteExperiment::InternalSwap(DeleteExperiment* other) {
  using std::swap;
  swap(experiment_id_, other->experiment_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteExperiment::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RestoreExperiment_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RestoreExperiment_Response::RestoreExperiment_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_RestoreExperiment_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.RestoreExperiment.Response)
}
RestoreExperiment_Response::RestoreExperiment_Response(const RestoreExperiment_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mlflow.RestoreExperiment.Response)
}

void RestoreExperiment_Response::SharedCtor() {
}

RestoreExperiment_Response::~RestoreExperiment_Response() {
  // @@protoc_insertion_point(destructor:mlflow.RestoreExperiment.Response)
  SharedDtor();
}

void RestoreExperiment_Response::SharedDtor() {
}

void RestoreExperiment_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RestoreExperiment_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RestoreExperiment_Response& RestoreExperiment_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_RestoreExperiment_Response.base);
  return *internal_default_instance();
}


void RestoreExperiment_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.RestoreExperiment.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RestoreExperiment_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.RestoreExperiment.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.RestoreExperiment.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.RestoreExperiment.Response)
  return false;
#undef DO_
}

void RestoreExperiment_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.RestoreExperiment.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.RestoreExperiment.Response)
}

::google::protobuf::uint8* RestoreExperiment_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.RestoreExperiment.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.RestoreExperiment.Response)
  return target;
}

size_t RestoreExperiment_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.RestoreExperiment.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RestoreExperiment_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.RestoreExperiment.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const RestoreExperiment_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RestoreExperiment_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.RestoreExperiment.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.RestoreExperiment.Response)
    MergeFrom(*source);
  }
}

void RestoreExperiment_Response::MergeFrom(const RestoreExperiment_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.RestoreExperiment.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RestoreExperiment_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.RestoreExperiment.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RestoreExperiment_Response::CopyFrom(const RestoreExperiment_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.RestoreExperiment.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestoreExperiment_Response::IsInitialized() const {
  return true;
}

void RestoreExperiment_Response::Swap(RestoreExperiment_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RestoreExperiment_Response::InternalSwap(RestoreExperiment_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RestoreExperiment_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RestoreExperiment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RestoreExperiment::kExperimentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RestoreExperiment::RestoreExperiment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_RestoreExperiment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.RestoreExperiment)
}
RestoreExperiment::RestoreExperiment(const RestoreExperiment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  experiment_id_ = from.experiment_id_;
  // @@protoc_insertion_point(copy_constructor:mlflow.RestoreExperiment)
}

void RestoreExperiment::SharedCtor() {
  experiment_id_ = GOOGLE_LONGLONG(0);
}

RestoreExperiment::~RestoreExperiment() {
  // @@protoc_insertion_point(destructor:mlflow.RestoreExperiment)
  SharedDtor();
}

void RestoreExperiment::SharedDtor() {
}

void RestoreExperiment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RestoreExperiment::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RestoreExperiment& RestoreExperiment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_RestoreExperiment.base);
  return *internal_default_instance();
}


void RestoreExperiment::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.RestoreExperiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  experiment_id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RestoreExperiment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.RestoreExperiment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 experiment_id = 1 [(.validate_required) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_experiment_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &experiment_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.RestoreExperiment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.RestoreExperiment)
  return false;
#undef DO_
}

void RestoreExperiment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.RestoreExperiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 experiment_id = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->experiment_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.RestoreExperiment)
}

::google::protobuf::uint8* RestoreExperiment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.RestoreExperiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 experiment_id = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->experiment_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.RestoreExperiment)
  return target;
}

size_t RestoreExperiment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.RestoreExperiment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int64 experiment_id = 1 [(.validate_required) = true];
  if (has_experiment_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->experiment_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RestoreExperiment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.RestoreExperiment)
  GOOGLE_DCHECK_NE(&from, this);
  const RestoreExperiment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RestoreExperiment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.RestoreExperiment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.RestoreExperiment)
    MergeFrom(*source);
  }
}

void RestoreExperiment::MergeFrom(const RestoreExperiment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.RestoreExperiment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_experiment_id()) {
    set_experiment_id(from.experiment_id());
  }
}

void RestoreExperiment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.RestoreExperiment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RestoreExperiment::CopyFrom(const RestoreExperiment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.RestoreExperiment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestoreExperiment::IsInitialized() const {
  return true;
}

void RestoreExperiment::Swap(RestoreExperiment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RestoreExperiment::InternalSwap(RestoreExperiment* other) {
  using std::swap;
  swap(experiment_id_, other->experiment_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RestoreExperiment::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateRun_Response::InitAsDefaultInstance() {
  ::mlflow::_CreateRun_Response_default_instance_._instance.get_mutable()->run_ = const_cast< ::mlflow::Run*>(
      ::mlflow::Run::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRun_Response::kRunFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRun_Response::CreateRun_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_CreateRun_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.CreateRun.Response)
}
CreateRun_Response::CreateRun_Response(const CreateRun_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_run()) {
    run_ = new ::mlflow::Run(*from.run_);
  } else {
    run_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.CreateRun.Response)
}

void CreateRun_Response::SharedCtor() {
  run_ = NULL;
}

CreateRun_Response::~CreateRun_Response() {
  // @@protoc_insertion_point(destructor:mlflow.CreateRun.Response)
  SharedDtor();
}

void CreateRun_Response::SharedDtor() {
  if (this != internal_default_instance()) delete run_;
}

void CreateRun_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateRun_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRun_Response& CreateRun_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_CreateRun_Response.base);
  return *internal_default_instance();
}


void CreateRun_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.CreateRun.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(run_ != NULL);
    run_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateRun_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.CreateRun.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mlflow.Run run = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_run()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.CreateRun.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.CreateRun.Response)
  return false;
#undef DO_
}

void CreateRun_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.CreateRun.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mlflow.Run run = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_run(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.CreateRun.Response)
}

::google::protobuf::uint8* CreateRun_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.CreateRun.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mlflow.Run run = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_run(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.CreateRun.Response)
  return target;
}

size_t CreateRun_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.CreateRun.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .mlflow.Run run = 1;
  if (has_run()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *run_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateRun_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.CreateRun.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRun_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRun_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.CreateRun.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.CreateRun.Response)
    MergeFrom(*source);
  }
}

void CreateRun_Response::MergeFrom(const CreateRun_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.CreateRun.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_run()) {
    mutable_run()->::mlflow::Run::MergeFrom(from.run());
  }
}

void CreateRun_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.CreateRun.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRun_Response::CopyFrom(const CreateRun_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.CreateRun.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRun_Response::IsInitialized() const {
  return true;
}

void CreateRun_Response::Swap(CreateRun_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRun_Response::InternalSwap(CreateRun_Response* other) {
  using std::swap;
  swap(run_, other->run_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateRun_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateRun::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRun::kExperimentIdFieldNumber;
const int CreateRun::kUserIdFieldNumber;
const int CreateRun::kRunNameFieldNumber;
const int CreateRun::kSourceTypeFieldNumber;
const int CreateRun::kSourceNameFieldNumber;
const int CreateRun::kEntryPointNameFieldNumber;
const int CreateRun::kStartTimeFieldNumber;
const int CreateRun::kSourceVersionFieldNumber;
const int CreateRun::kTagsFieldNumber;
const int CreateRun::kParentRunIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRun::CreateRun()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_CreateRun.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.CreateRun)
}
CreateRun::CreateRun(const CreateRun& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_id()) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  run_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_run_name()) {
    run_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_name_);
  }
  source_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_name()) {
    source_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_name_);
  }
  entry_point_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_entry_point_name()) {
    entry_point_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entry_point_name_);
  }
  source_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_version()) {
    source_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_version_);
  }
  parent_run_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_parent_run_id()) {
    parent_run_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_run_id_);
  }
  ::memcpy(&experiment_id_, &from.experiment_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&source_type_) -
    reinterpret_cast<char*>(&experiment_id_)) + sizeof(source_type_));
  // @@protoc_insertion_point(copy_constructor:mlflow.CreateRun)
}

void CreateRun::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  run_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entry_point_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_run_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&experiment_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_time_) -
      reinterpret_cast<char*>(&experiment_id_)) + sizeof(start_time_));
  source_type_ = 1;
}

CreateRun::~CreateRun() {
  // @@protoc_insertion_point(destructor:mlflow.CreateRun)
  SharedDtor();
}

void CreateRun::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  run_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entry_point_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_run_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateRun::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateRun::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRun& CreateRun::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_CreateRun.base);
  return *internal_default_instance();
}


void CreateRun::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.CreateRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      user_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      run_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      source_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      entry_point_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      source_version_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      parent_run_id_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&experiment_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&start_time_) -
        reinterpret_cast<char*>(&experiment_id_)) + sizeof(start_time_));
  }
  source_type_ = 1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateRun::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.CreateRun)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 experiment_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_experiment_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &experiment_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.CreateRun.user_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string run_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_name().data(), static_cast<int>(this->run_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.CreateRun.run_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mlflow.SourceType source_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::mlflow::SourceType_IsValid(value)) {
            set_source_type(static_cast< ::mlflow::SourceType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string source_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_name().data(), static_cast<int>(this->source_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.CreateRun.source_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string entry_point_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entry_point_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->entry_point_name().data(), static_cast<int>(this->entry_point_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.CreateRun.entry_point_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 start_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_start_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string source_version = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_version().data(), static_cast<int>(this->source_version().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.CreateRun.source_version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .mlflow.RunTag tags = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string parent_run_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent_run_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->parent_run_id().data(), static_cast<int>(this->parent_run_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.CreateRun.parent_run_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.CreateRun)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.CreateRun)
  return false;
#undef DO_
}

void CreateRun::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.CreateRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 experiment_id = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->experiment_id(), output);
  }

  // optional string user_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.CreateRun.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  // optional string run_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_name().data(), static_cast<int>(this->run_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.CreateRun.run_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->run_name(), output);
  }

  // optional .mlflow.SourceType source_type = 4;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->source_type(), output);
  }

  // optional string source_name = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_name().data(), static_cast<int>(this->source_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.CreateRun.source_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->source_name(), output);
  }

  // optional string entry_point_name = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->entry_point_name().data(), static_cast<int>(this->entry_point_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.CreateRun.entry_point_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->entry_point_name(), output);
  }

  // optional int64 start_time = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->start_time(), output);
  }

  // optional string source_version = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_version().data(), static_cast<int>(this->source_version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.CreateRun.source_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->source_version(), output);
  }

  // repeated .mlflow.RunTag tags = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->tags(static_cast<int>(i)),
      output);
  }

  // optional string parent_run_id = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parent_run_id().data(), static_cast<int>(this->parent_run_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.CreateRun.parent_run_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->parent_run_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.CreateRun)
}

::google::protobuf::uint8* CreateRun::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.CreateRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 experiment_id = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->experiment_id(), target);
  }

  // optional string user_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.CreateRun.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  // optional string run_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_name().data(), static_cast<int>(this->run_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.CreateRun.run_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->run_name(), target);
  }

  // optional .mlflow.SourceType source_type = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->source_type(), target);
  }

  // optional string source_name = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_name().data(), static_cast<int>(this->source_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.CreateRun.source_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->source_name(), target);
  }

  // optional string entry_point_name = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->entry_point_name().data(), static_cast<int>(this->entry_point_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.CreateRun.entry_point_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->entry_point_name(), target);
  }

  // optional int64 start_time = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->start_time(), target);
  }

  // optional string source_version = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_version().data(), static_cast<int>(this->source_version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.CreateRun.source_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->source_version(), target);
  }

  // repeated .mlflow.RunTag tags = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->tags(static_cast<int>(i)), deterministic, target);
  }

  // optional string parent_run_id = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parent_run_id().data(), static_cast<int>(this->parent_run_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.CreateRun.parent_run_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->parent_run_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.CreateRun)
  return target;
}

size_t CreateRun::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.CreateRun)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .mlflow.RunTag tags = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->tags_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tags(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string user_id = 2;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional string run_name = 3;
    if (has_run_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->run_name());
    }

    // optional string source_name = 5;
    if (has_source_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_name());
    }

    // optional string entry_point_name = 6;
    if (has_entry_point_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entry_point_name());
    }

    // optional string source_version = 8;
    if (has_source_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_version());
    }

    // optional string parent_run_id = 10;
    if (has_parent_run_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->parent_run_id());
    }

    // optional int64 experiment_id = 1;
    if (has_experiment_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->experiment_id());
    }

    // optional int64 start_time = 7;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

  }
  // optional .mlflow.SourceType source_type = 4;
  if (has_source_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->source_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateRun::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.CreateRun)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRun* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRun>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.CreateRun)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.CreateRun)
    MergeFrom(*source);
  }
}

void CreateRun::MergeFrom(const CreateRun& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.CreateRun)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_run_name();
      run_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_source_name();
      source_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_entry_point_name();
      entry_point_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entry_point_name_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_source_version();
      source_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_version_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_parent_run_id();
      parent_run_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_run_id_);
    }
    if (cached_has_bits & 0x00000040u) {
      experiment_id_ = from.experiment_id_;
    }
    if (cached_has_bits & 0x00000080u) {
      start_time_ = from.start_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_source_type(from.source_type());
  }
}

void CreateRun::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.CreateRun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRun::CopyFrom(const CreateRun& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.CreateRun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRun::IsInitialized() const {
  return true;
}

void CreateRun::Swap(CreateRun* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRun::InternalSwap(CreateRun* other) {
  using std::swap;
  CastToBase(&tags_)->InternalSwap(CastToBase(&other->tags_));
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  run_name_.Swap(&other->run_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  source_name_.Swap(&other->source_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  entry_point_name_.Swap(&other->entry_point_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  source_version_.Swap(&other->source_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_run_id_.Swap(&other->parent_run_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(experiment_id_, other->experiment_id_);
  swap(start_time_, other->start_time_);
  swap(source_type_, other->source_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateRun::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateRun_Response::InitAsDefaultInstance() {
  ::mlflow::_UpdateRun_Response_default_instance_._instance.get_mutable()->run_info_ = const_cast< ::mlflow::RunInfo*>(
      ::mlflow::RunInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateRun_Response::kRunInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateRun_Response::UpdateRun_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_UpdateRun_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.UpdateRun.Response)
}
UpdateRun_Response::UpdateRun_Response(const UpdateRun_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_run_info()) {
    run_info_ = new ::mlflow::RunInfo(*from.run_info_);
  } else {
    run_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.UpdateRun.Response)
}

void UpdateRun_Response::SharedCtor() {
  run_info_ = NULL;
}

UpdateRun_Response::~UpdateRun_Response() {
  // @@protoc_insertion_point(destructor:mlflow.UpdateRun.Response)
  SharedDtor();
}

void UpdateRun_Response::SharedDtor() {
  if (this != internal_default_instance()) delete run_info_;
}

void UpdateRun_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateRun_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateRun_Response& UpdateRun_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_UpdateRun_Response.base);
  return *internal_default_instance();
}


void UpdateRun_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.UpdateRun.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(run_info_ != NULL);
    run_info_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateRun_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.UpdateRun.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mlflow.RunInfo run_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_run_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.UpdateRun.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.UpdateRun.Response)
  return false;
#undef DO_
}

void UpdateRun_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.UpdateRun.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mlflow.RunInfo run_info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_run_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.UpdateRun.Response)
}

::google::protobuf::uint8* UpdateRun_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.UpdateRun.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mlflow.RunInfo run_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_run_info(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.UpdateRun.Response)
  return target;
}

size_t UpdateRun_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.UpdateRun.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .mlflow.RunInfo run_info = 1;
  if (has_run_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *run_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateRun_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.UpdateRun.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateRun_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateRun_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.UpdateRun.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.UpdateRun.Response)
    MergeFrom(*source);
  }
}

void UpdateRun_Response::MergeFrom(const UpdateRun_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.UpdateRun.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_run_info()) {
    mutable_run_info()->::mlflow::RunInfo::MergeFrom(from.run_info());
  }
}

void UpdateRun_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.UpdateRun.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRun_Response::CopyFrom(const UpdateRun_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.UpdateRun.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRun_Response::IsInitialized() const {
  return true;
}

void UpdateRun_Response::Swap(UpdateRun_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateRun_Response::InternalSwap(UpdateRun_Response* other) {
  using std::swap;
  swap(run_info_, other->run_info_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateRun_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateRun::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateRun::kRunUuidFieldNumber;
const int UpdateRun::kStatusFieldNumber;
const int UpdateRun::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateRun::UpdateRun()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_UpdateRun.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.UpdateRun)
}
UpdateRun::UpdateRun(const UpdateRun& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_run_uuid()) {
    run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
  }
  ::memcpy(&end_time_, &from.end_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&end_time_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:mlflow.UpdateRun)
}

void UpdateRun::SharedCtor() {
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_time_ = GOOGLE_LONGLONG(0);
  status_ = 1;
}

UpdateRun::~UpdateRun() {
  // @@protoc_insertion_point(destructor:mlflow.UpdateRun)
  SharedDtor();
}

void UpdateRun::SharedDtor() {
  run_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateRun::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateRun::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateRun& UpdateRun::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_UpdateRun.base);
  return *internal_default_instance();
}


void UpdateRun::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.UpdateRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    run_uuid_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    end_time_ = GOOGLE_LONGLONG(0);
    status_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateRun::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.UpdateRun)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string run_uuid = 1 [(.validate_required) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.UpdateRun.run_uuid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mlflow.RunStatus status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::mlflow::RunStatus_IsValid(value)) {
            set_status(static_cast< ::mlflow::RunStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 end_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_end_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.UpdateRun)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.UpdateRun)
  return false;
#undef DO_
}

void UpdateRun::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.UpdateRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.UpdateRun.run_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->run_uuid(), output);
  }

  // optional .mlflow.RunStatus status = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // optional int64 end_time = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->end_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.UpdateRun)
}

::google::protobuf::uint8* UpdateRun::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.UpdateRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.UpdateRun.run_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->run_uuid(), target);
  }

  // optional .mlflow.RunStatus status = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // optional int64 end_time = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->end_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.UpdateRun)
  return target;
}

size_t UpdateRun::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.UpdateRun)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string run_uuid = 1 [(.validate_required) = true];
    if (has_run_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->run_uuid());
    }

    // optional int64 end_time = 3;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional .mlflow.RunStatus status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateRun::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.UpdateRun)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateRun* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateRun>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.UpdateRun)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.UpdateRun)
    MergeFrom(*source);
  }
}

void UpdateRun::MergeFrom(const UpdateRun& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.UpdateRun)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_run_uuid();
      run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
    }
    if (cached_has_bits & 0x00000002u) {
      end_time_ = from.end_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UpdateRun::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.UpdateRun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRun::CopyFrom(const UpdateRun& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.UpdateRun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRun::IsInitialized() const {
  return true;
}

void UpdateRun::Swap(UpdateRun* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateRun::InternalSwap(UpdateRun* other) {
  using std::swap;
  run_uuid_.Swap(&other->run_uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(end_time_, other->end_time_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateRun::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteRun_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteRun_Response::DeleteRun_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_DeleteRun_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.DeleteRun.Response)
}
DeleteRun_Response::DeleteRun_Response(const DeleteRun_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mlflow.DeleteRun.Response)
}

void DeleteRun_Response::SharedCtor() {
}

DeleteRun_Response::~DeleteRun_Response() {
  // @@protoc_insertion_point(destructor:mlflow.DeleteRun.Response)
  SharedDtor();
}

void DeleteRun_Response::SharedDtor() {
}

void DeleteRun_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteRun_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteRun_Response& DeleteRun_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_DeleteRun_Response.base);
  return *internal_default_instance();
}


void DeleteRun_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.DeleteRun.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeleteRun_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.DeleteRun.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.DeleteRun.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.DeleteRun.Response)
  return false;
#undef DO_
}

void DeleteRun_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.DeleteRun.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.DeleteRun.Response)
}

::google::protobuf::uint8* DeleteRun_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.DeleteRun.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.DeleteRun.Response)
  return target;
}

size_t DeleteRun_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.DeleteRun.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRun_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.DeleteRun.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRun_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteRun_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.DeleteRun.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.DeleteRun.Response)
    MergeFrom(*source);
  }
}

void DeleteRun_Response::MergeFrom(const DeleteRun_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.DeleteRun.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteRun_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.DeleteRun.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRun_Response::CopyFrom(const DeleteRun_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.DeleteRun.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRun_Response::IsInitialized() const {
  return true;
}

void DeleteRun_Response::Swap(DeleteRun_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteRun_Response::InternalSwap(DeleteRun_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteRun_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteRun::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteRun::kRunIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteRun::DeleteRun()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_DeleteRun.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.DeleteRun)
}
DeleteRun::DeleteRun(const DeleteRun& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  run_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_run_id()) {
    run_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_id_);
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.DeleteRun)
}

void DeleteRun::SharedCtor() {
  run_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteRun::~DeleteRun() {
  // @@protoc_insertion_point(destructor:mlflow.DeleteRun)
  SharedDtor();
}

void DeleteRun::SharedDtor() {
  run_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteRun::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteRun::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteRun& DeleteRun::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_DeleteRun.base);
  return *internal_default_instance();
}


void DeleteRun::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.DeleteRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    run_id_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeleteRun::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.DeleteRun)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string run_id = 1 [(.validate_required) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_id().data(), static_cast<int>(this->run_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.DeleteRun.run_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.DeleteRun)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.DeleteRun)
  return false;
#undef DO_
}

void DeleteRun::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.DeleteRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_id = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_id().data(), static_cast<int>(this->run_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.DeleteRun.run_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->run_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.DeleteRun)
}

::google::protobuf::uint8* DeleteRun::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.DeleteRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_id = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_id().data(), static_cast<int>(this->run_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.DeleteRun.run_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->run_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.DeleteRun)
  return target;
}

size_t DeleteRun::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.DeleteRun)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string run_id = 1 [(.validate_required) = true];
  if (has_run_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->run_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRun::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.DeleteRun)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRun* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteRun>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.DeleteRun)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.DeleteRun)
    MergeFrom(*source);
  }
}

void DeleteRun::MergeFrom(const DeleteRun& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.DeleteRun)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_run_id()) {
    set_has_run_id();
    run_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_id_);
  }
}

void DeleteRun::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.DeleteRun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRun::CopyFrom(const DeleteRun& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.DeleteRun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRun::IsInitialized() const {
  return true;
}

void DeleteRun::Swap(DeleteRun* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteRun::InternalSwap(DeleteRun* other) {
  using std::swap;
  run_id_.Swap(&other->run_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteRun::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RestoreRun_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RestoreRun_Response::RestoreRun_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_RestoreRun_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.RestoreRun.Response)
}
RestoreRun_Response::RestoreRun_Response(const RestoreRun_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mlflow.RestoreRun.Response)
}

void RestoreRun_Response::SharedCtor() {
}

RestoreRun_Response::~RestoreRun_Response() {
  // @@protoc_insertion_point(destructor:mlflow.RestoreRun.Response)
  SharedDtor();
}

void RestoreRun_Response::SharedDtor() {
}

void RestoreRun_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RestoreRun_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RestoreRun_Response& RestoreRun_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_RestoreRun_Response.base);
  return *internal_default_instance();
}


void RestoreRun_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.RestoreRun.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RestoreRun_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.RestoreRun.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.RestoreRun.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.RestoreRun.Response)
  return false;
#undef DO_
}

void RestoreRun_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.RestoreRun.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.RestoreRun.Response)
}

::google::protobuf::uint8* RestoreRun_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.RestoreRun.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.RestoreRun.Response)
  return target;
}

size_t RestoreRun_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.RestoreRun.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RestoreRun_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.RestoreRun.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const RestoreRun_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RestoreRun_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.RestoreRun.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.RestoreRun.Response)
    MergeFrom(*source);
  }
}

void RestoreRun_Response::MergeFrom(const RestoreRun_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.RestoreRun.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RestoreRun_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.RestoreRun.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RestoreRun_Response::CopyFrom(const RestoreRun_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.RestoreRun.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestoreRun_Response::IsInitialized() const {
  return true;
}

void RestoreRun_Response::Swap(RestoreRun_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RestoreRun_Response::InternalSwap(RestoreRun_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RestoreRun_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RestoreRun::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RestoreRun::kRunIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RestoreRun::RestoreRun()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_RestoreRun.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.RestoreRun)
}
RestoreRun::RestoreRun(const RestoreRun& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  run_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_run_id()) {
    run_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_id_);
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.RestoreRun)
}

void RestoreRun::SharedCtor() {
  run_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RestoreRun::~RestoreRun() {
  // @@protoc_insertion_point(destructor:mlflow.RestoreRun)
  SharedDtor();
}

void RestoreRun::SharedDtor() {
  run_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RestoreRun::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RestoreRun::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RestoreRun& RestoreRun::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_RestoreRun.base);
  return *internal_default_instance();
}


void RestoreRun::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.RestoreRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    run_id_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RestoreRun::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.RestoreRun)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string run_id = 1 [(.validate_required) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_id().data(), static_cast<int>(this->run_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.RestoreRun.run_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.RestoreRun)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.RestoreRun)
  return false;
#undef DO_
}

void RestoreRun::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.RestoreRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_id = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_id().data(), static_cast<int>(this->run_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RestoreRun.run_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->run_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.RestoreRun)
}

::google::protobuf::uint8* RestoreRun::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.RestoreRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_id = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_id().data(), static_cast<int>(this->run_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.RestoreRun.run_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->run_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.RestoreRun)
  return target;
}

size_t RestoreRun::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.RestoreRun)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string run_id = 1 [(.validate_required) = true];
  if (has_run_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->run_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RestoreRun::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.RestoreRun)
  GOOGLE_DCHECK_NE(&from, this);
  const RestoreRun* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RestoreRun>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.RestoreRun)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.RestoreRun)
    MergeFrom(*source);
  }
}

void RestoreRun::MergeFrom(const RestoreRun& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.RestoreRun)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_run_id()) {
    set_has_run_id();
    run_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_id_);
  }
}

void RestoreRun::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.RestoreRun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RestoreRun::CopyFrom(const RestoreRun& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.RestoreRun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestoreRun::IsInitialized() const {
  return true;
}

void RestoreRun::Swap(RestoreRun* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RestoreRun::InternalSwap(RestoreRun* other) {
  using std::swap;
  run_id_.Swap(&other->run_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RestoreRun::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogMetric_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogMetric_Response::LogMetric_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_LogMetric_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.LogMetric.Response)
}
LogMetric_Response::LogMetric_Response(const LogMetric_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mlflow.LogMetric.Response)
}

void LogMetric_Response::SharedCtor() {
}

LogMetric_Response::~LogMetric_Response() {
  // @@protoc_insertion_point(destructor:mlflow.LogMetric.Response)
  SharedDtor();
}

void LogMetric_Response::SharedDtor() {
}

void LogMetric_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogMetric_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogMetric_Response& LogMetric_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_LogMetric_Response.base);
  return *internal_default_instance();
}


void LogMetric_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.LogMetric.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LogMetric_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.LogMetric.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.LogMetric.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.LogMetric.Response)
  return false;
#undef DO_
}

void LogMetric_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.LogMetric.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.LogMetric.Response)
}

::google::protobuf::uint8* LogMetric_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.LogMetric.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.LogMetric.Response)
  return target;
}

size_t LogMetric_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.LogMetric.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogMetric_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.LogMetric.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const LogMetric_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogMetric_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.LogMetric.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.LogMetric.Response)
    MergeFrom(*source);
  }
}

void LogMetric_Response::MergeFrom(const LogMetric_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.LogMetric.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LogMetric_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.LogMetric.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogMetric_Response::CopyFrom(const LogMetric_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.LogMetric.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogMetric_Response::IsInitialized() const {
  return true;
}

void LogMetric_Response::Swap(LogMetric_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogMetric_Response::InternalSwap(LogMetric_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogMetric_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogMetric::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogMetric::kRunUuidFieldNumber;
const int LogMetric::kKeyFieldNumber;
const int LogMetric::kValueFieldNumber;
const int LogMetric::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogMetric::LogMetric()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_LogMetric.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.LogMetric)
}
LogMetric::LogMetric(const LogMetric& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_run_uuid()) {
    run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&value_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:mlflow.LogMetric)
}

void LogMetric::SharedCtor() {
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&value_)) + sizeof(timestamp_));
}

LogMetric::~LogMetric() {
  // @@protoc_insertion_point(destructor:mlflow.LogMetric)
  SharedDtor();
}

void LogMetric::SharedDtor() {
  run_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogMetric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogMetric::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogMetric& LogMetric::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_LogMetric.base);
  return *internal_default_instance();
}


void LogMetric::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.LogMetric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      run_uuid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_) -
        reinterpret_cast<char*>(&value_)) + sizeof(timestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LogMetric::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.LogMetric)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string run_uuid = 1 [(.validate_required) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.LogMetric.run_uuid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string key = 2 [(.validate_required) = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.LogMetric.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double value = 3 [(.validate_required) = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 timestamp = 4 [(.validate_required) = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.LogMetric)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.LogMetric)
  return false;
#undef DO_
}

void LogMetric::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.LogMetric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.LogMetric.run_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->run_uuid(), output);
  }

  // optional string key = 2 [(.validate_required) = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.LogMetric.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // optional double value = 3 [(.validate_required) = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->value(), output);
  }

  // optional int64 timestamp = 4 [(.validate_required) = true];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.LogMetric)
}

::google::protobuf::uint8* LogMetric::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.LogMetric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.LogMetric.run_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->run_uuid(), target);
  }

  // optional string key = 2 [(.validate_required) = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.LogMetric.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // optional double value = 3 [(.validate_required) = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->value(), target);
  }

  // optional int64 timestamp = 4 [(.validate_required) = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.LogMetric)
  return target;
}

size_t LogMetric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.LogMetric)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string run_uuid = 1 [(.validate_required) = true];
    if (has_run_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->run_uuid());
    }

    // optional string key = 2 [(.validate_required) = true];
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional double value = 3 [(.validate_required) = true];
    if (has_value()) {
      total_size += 1 + 8;
    }

    // optional int64 timestamp = 4 [(.validate_required) = true];
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timestamp());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogMetric::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.LogMetric)
  GOOGLE_DCHECK_NE(&from, this);
  const LogMetric* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogMetric>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.LogMetric)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.LogMetric)
    MergeFrom(*source);
  }
}

void LogMetric::MergeFrom(const LogMetric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.LogMetric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_run_uuid();
      run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000004u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LogMetric::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.LogMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogMetric::CopyFrom(const LogMetric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.LogMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogMetric::IsInitialized() const {
  return true;
}

void LogMetric::Swap(LogMetric* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogMetric::InternalSwap(LogMetric* other) {
  using std::swap;
  run_uuid_.Swap(&other->run_uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogMetric::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogParam_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogParam_Response::LogParam_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_LogParam_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.LogParam.Response)
}
LogParam_Response::LogParam_Response(const LogParam_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mlflow.LogParam.Response)
}

void LogParam_Response::SharedCtor() {
}

LogParam_Response::~LogParam_Response() {
  // @@protoc_insertion_point(destructor:mlflow.LogParam.Response)
  SharedDtor();
}

void LogParam_Response::SharedDtor() {
}

void LogParam_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogParam_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogParam_Response& LogParam_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_LogParam_Response.base);
  return *internal_default_instance();
}


void LogParam_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.LogParam.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LogParam_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.LogParam.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.LogParam.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.LogParam.Response)
  return false;
#undef DO_
}

void LogParam_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.LogParam.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.LogParam.Response)
}

::google::protobuf::uint8* LogParam_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.LogParam.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.LogParam.Response)
  return target;
}

size_t LogParam_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.LogParam.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogParam_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.LogParam.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const LogParam_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogParam_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.LogParam.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.LogParam.Response)
    MergeFrom(*source);
  }
}

void LogParam_Response::MergeFrom(const LogParam_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.LogParam.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LogParam_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.LogParam.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogParam_Response::CopyFrom(const LogParam_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.LogParam.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogParam_Response::IsInitialized() const {
  return true;
}

void LogParam_Response::Swap(LogParam_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogParam_Response::InternalSwap(LogParam_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogParam_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogParam::kRunUuidFieldNumber;
const int LogParam::kKeyFieldNumber;
const int LogParam::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogParam::LogParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_LogParam.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.LogParam)
}
LogParam::LogParam(const LogParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_run_uuid()) {
    run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.LogParam)
}

void LogParam::SharedCtor() {
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LogParam::~LogParam() {
  // @@protoc_insertion_point(destructor:mlflow.LogParam)
  SharedDtor();
}

void LogParam::SharedDtor() {
  run_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogParam::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogParam& LogParam::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_LogParam.base);
  return *internal_default_instance();
}


void LogParam::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.LogParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      run_uuid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LogParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.LogParam)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string run_uuid = 1 [(.validate_required) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.LogParam.run_uuid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string key = 2 [(.validate_required) = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.LogParam.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 3 [(.validate_required) = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.LogParam.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.LogParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.LogParam)
  return false;
#undef DO_
}

void LogParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.LogParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.LogParam.run_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->run_uuid(), output);
  }

  // optional string key = 2 [(.validate_required) = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.LogParam.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // optional string value = 3 [(.validate_required) = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.LogParam.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.LogParam)
}

::google::protobuf::uint8* LogParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.LogParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.LogParam.run_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->run_uuid(), target);
  }

  // optional string key = 2 [(.validate_required) = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.LogParam.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // optional string value = 3 [(.validate_required) = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.LogParam.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.LogParam)
  return target;
}

size_t LogParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.LogParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string run_uuid = 1 [(.validate_required) = true];
    if (has_run_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->run_uuid());
    }

    // optional string key = 2 [(.validate_required) = true];
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 3 [(.validate_required) = true];
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.LogParam)
  GOOGLE_DCHECK_NE(&from, this);
  const LogParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.LogParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.LogParam)
    MergeFrom(*source);
  }
}

void LogParam::MergeFrom(const LogParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.LogParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_run_uuid();
      run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void LogParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.LogParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogParam::CopyFrom(const LogParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.LogParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogParam::IsInitialized() const {
  return true;
}

void LogParam::Swap(LogParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogParam::InternalSwap(LogParam* other) {
  using std::swap;
  run_uuid_.Swap(&other->run_uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogParam::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetTag_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetTag_Response::SetTag_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_SetTag_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.SetTag.Response)
}
SetTag_Response::SetTag_Response(const SetTag_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mlflow.SetTag.Response)
}

void SetTag_Response::SharedCtor() {
}

SetTag_Response::~SetTag_Response() {
  // @@protoc_insertion_point(destructor:mlflow.SetTag.Response)
  SharedDtor();
}

void SetTag_Response::SharedDtor() {
}

void SetTag_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetTag_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetTag_Response& SetTag_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_SetTag_Response.base);
  return *internal_default_instance();
}


void SetTag_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.SetTag.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetTag_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.SetTag.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.SetTag.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.SetTag.Response)
  return false;
#undef DO_
}

void SetTag_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.SetTag.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.SetTag.Response)
}

::google::protobuf::uint8* SetTag_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.SetTag.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.SetTag.Response)
  return target;
}

size_t SetTag_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.SetTag.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetTag_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.SetTag.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const SetTag_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetTag_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.SetTag.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.SetTag.Response)
    MergeFrom(*source);
  }
}

void SetTag_Response::MergeFrom(const SetTag_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.SetTag.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetTag_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.SetTag.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetTag_Response::CopyFrom(const SetTag_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.SetTag.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTag_Response::IsInitialized() const {
  return true;
}

void SetTag_Response::Swap(SetTag_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetTag_Response::InternalSwap(SetTag_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetTag_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetTag::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetTag::kRunUuidFieldNumber;
const int SetTag::kKeyFieldNumber;
const int SetTag::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetTag::SetTag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_SetTag.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.SetTag)
}
SetTag::SetTag(const SetTag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_run_uuid()) {
    run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.SetTag)
}

void SetTag::SharedCtor() {
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetTag::~SetTag() {
  // @@protoc_insertion_point(destructor:mlflow.SetTag)
  SharedDtor();
}

void SetTag::SharedDtor() {
  run_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetTag::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetTag& SetTag::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_SetTag.base);
  return *internal_default_instance();
}


void SetTag::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.SetTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      run_uuid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetTag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.SetTag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string run_uuid = 1 [(.validate_required) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.SetTag.run_uuid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string key = 2 [(.validate_required) = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.SetTag.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 3 [(.validate_required) = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.SetTag.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.SetTag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.SetTag)
  return false;
#undef DO_
}

void SetTag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.SetTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.SetTag.run_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->run_uuid(), output);
  }

  // optional string key = 2 [(.validate_required) = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.SetTag.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // optional string value = 3 [(.validate_required) = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.SetTag.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.SetTag)
}

::google::protobuf::uint8* SetTag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.SetTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.SetTag.run_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->run_uuid(), target);
  }

  // optional string key = 2 [(.validate_required) = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.SetTag.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // optional string value = 3 [(.validate_required) = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.SetTag.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.SetTag)
  return target;
}

size_t SetTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.SetTag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string run_uuid = 1 [(.validate_required) = true];
    if (has_run_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->run_uuid());
    }

    // optional string key = 2 [(.validate_required) = true];
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 3 [(.validate_required) = true];
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetTag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.SetTag)
  GOOGLE_DCHECK_NE(&from, this);
  const SetTag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetTag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.SetTag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.SetTag)
    MergeFrom(*source);
  }
}

void SetTag::MergeFrom(const SetTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.SetTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_run_uuid();
      run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void SetTag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.SetTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetTag::CopyFrom(const SetTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.SetTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTag::IsInitialized() const {
  return true;
}

void SetTag::Swap(SetTag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetTag::InternalSwap(SetTag* other) {
  using std::swap;
  run_uuid_.Swap(&other->run_uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetTag::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetRun_Response::InitAsDefaultInstance() {
  ::mlflow::_GetRun_Response_default_instance_._instance.get_mutable()->run_ = const_cast< ::mlflow::Run*>(
      ::mlflow::Run::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRun_Response::kRunFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRun_Response::GetRun_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_GetRun_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.GetRun.Response)
}
GetRun_Response::GetRun_Response(const GetRun_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_run()) {
    run_ = new ::mlflow::Run(*from.run_);
  } else {
    run_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.GetRun.Response)
}

void GetRun_Response::SharedCtor() {
  run_ = NULL;
}

GetRun_Response::~GetRun_Response() {
  // @@protoc_insertion_point(destructor:mlflow.GetRun.Response)
  SharedDtor();
}

void GetRun_Response::SharedDtor() {
  if (this != internal_default_instance()) delete run_;
}

void GetRun_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetRun_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRun_Response& GetRun_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_GetRun_Response.base);
  return *internal_default_instance();
}


void GetRun_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.GetRun.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(run_ != NULL);
    run_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetRun_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.GetRun.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mlflow.Run run = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_run()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.GetRun.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.GetRun.Response)
  return false;
#undef DO_
}

void GetRun_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.GetRun.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mlflow.Run run = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_run(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.GetRun.Response)
}

::google::protobuf::uint8* GetRun_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.GetRun.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mlflow.Run run = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_run(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.GetRun.Response)
  return target;
}

size_t GetRun_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.GetRun.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .mlflow.Run run = 1;
  if (has_run()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *run_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRun_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.GetRun.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRun_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRun_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.GetRun.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.GetRun.Response)
    MergeFrom(*source);
  }
}

void GetRun_Response::MergeFrom(const GetRun_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.GetRun.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_run()) {
    mutable_run()->::mlflow::Run::MergeFrom(from.run());
  }
}

void GetRun_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.GetRun.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRun_Response::CopyFrom(const GetRun_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.GetRun.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRun_Response::IsInitialized() const {
  return true;
}

void GetRun_Response::Swap(GetRun_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRun_Response::InternalSwap(GetRun_Response* other) {
  using std::swap;
  swap(run_, other->run_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetRun_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetRun::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRun::kRunUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRun::GetRun()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_GetRun.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.GetRun)
}
GetRun::GetRun(const GetRun& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_run_uuid()) {
    run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.GetRun)
}

void GetRun::SharedCtor() {
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetRun::~GetRun() {
  // @@protoc_insertion_point(destructor:mlflow.GetRun)
  SharedDtor();
}

void GetRun::SharedDtor() {
  run_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetRun::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetRun::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRun& GetRun::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_GetRun.base);
  return *internal_default_instance();
}


void GetRun::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.GetRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    run_uuid_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetRun::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.GetRun)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string run_uuid = 1 [(.validate_required) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.GetRun.run_uuid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.GetRun)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.GetRun)
  return false;
#undef DO_
}

void GetRun::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.GetRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.GetRun.run_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->run_uuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.GetRun)
}

::google::protobuf::uint8* GetRun::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.GetRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.GetRun.run_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->run_uuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.GetRun)
  return target;
}

size_t GetRun::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.GetRun)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string run_uuid = 1 [(.validate_required) = true];
  if (has_run_uuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->run_uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRun::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.GetRun)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRun* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRun>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.GetRun)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.GetRun)
    MergeFrom(*source);
  }
}

void GetRun::MergeFrom(const GetRun& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.GetRun)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_run_uuid()) {
    set_has_run_uuid();
    run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
  }
}

void GetRun::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.GetRun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRun::CopyFrom(const GetRun& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.GetRun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRun::IsInitialized() const {
  return true;
}

void GetRun::Swap(GetRun* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRun::InternalSwap(GetRun* other) {
  using std::swap;
  run_uuid_.Swap(&other->run_uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetRun::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMetric_Response::InitAsDefaultInstance() {
  ::mlflow::_GetMetric_Response_default_instance_._instance.get_mutable()->metric_ = const_cast< ::mlflow::Metric*>(
      ::mlflow::Metric::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMetric_Response::kMetricFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMetric_Response::GetMetric_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_GetMetric_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.GetMetric.Response)
}
GetMetric_Response::GetMetric_Response(const GetMetric_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_metric()) {
    metric_ = new ::mlflow::Metric(*from.metric_);
  } else {
    metric_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.GetMetric.Response)
}

void GetMetric_Response::SharedCtor() {
  metric_ = NULL;
}

GetMetric_Response::~GetMetric_Response() {
  // @@protoc_insertion_point(destructor:mlflow.GetMetric.Response)
  SharedDtor();
}

void GetMetric_Response::SharedDtor() {
  if (this != internal_default_instance()) delete metric_;
}

void GetMetric_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMetric_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMetric_Response& GetMetric_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_GetMetric_Response.base);
  return *internal_default_instance();
}


void GetMetric_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.GetMetric.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(metric_ != NULL);
    metric_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetMetric_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.GetMetric.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mlflow.Metric metric = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metric()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.GetMetric.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.GetMetric.Response)
  return false;
#undef DO_
}

void GetMetric_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.GetMetric.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mlflow.Metric metric = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_metric(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.GetMetric.Response)
}

::google::protobuf::uint8* GetMetric_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.GetMetric.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mlflow.Metric metric = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_metric(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.GetMetric.Response)
  return target;
}

size_t GetMetric_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.GetMetric.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .mlflow.Metric metric = 1;
  if (has_metric()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *metric_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMetric_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.GetMetric.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMetric_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMetric_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.GetMetric.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.GetMetric.Response)
    MergeFrom(*source);
  }
}

void GetMetric_Response::MergeFrom(const GetMetric_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.GetMetric.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_metric()) {
    mutable_metric()->::mlflow::Metric::MergeFrom(from.metric());
  }
}

void GetMetric_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.GetMetric.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMetric_Response::CopyFrom(const GetMetric_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.GetMetric.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMetric_Response::IsInitialized() const {
  return true;
}

void GetMetric_Response::Swap(GetMetric_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMetric_Response::InternalSwap(GetMetric_Response* other) {
  using std::swap;
  swap(metric_, other->metric_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMetric_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMetric::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMetric::kRunUuidFieldNumber;
const int GetMetric::kMetricKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMetric::GetMetric()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_GetMetric.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.GetMetric)
}
GetMetric::GetMetric(const GetMetric& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_run_uuid()) {
    run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
  }
  metric_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_metric_key()) {
    metric_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metric_key_);
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.GetMetric)
}

void GetMetric::SharedCtor() {
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metric_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetMetric::~GetMetric() {
  // @@protoc_insertion_point(destructor:mlflow.GetMetric)
  SharedDtor();
}

void GetMetric::SharedDtor() {
  run_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metric_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetMetric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMetric::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMetric& GetMetric::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_GetMetric.base);
  return *internal_default_instance();
}


void GetMetric::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.GetMetric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      run_uuid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      metric_key_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetMetric::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.GetMetric)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string run_uuid = 1 [(.validate_required) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.GetMetric.run_uuid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string metric_key = 2 [(.validate_required) = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metric_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->metric_key().data(), static_cast<int>(this->metric_key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.GetMetric.metric_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.GetMetric)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.GetMetric)
  return false;
#undef DO_
}

void GetMetric::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.GetMetric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.GetMetric.run_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->run_uuid(), output);
  }

  // optional string metric_key = 2 [(.validate_required) = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->metric_key().data(), static_cast<int>(this->metric_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.GetMetric.metric_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->metric_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.GetMetric)
}

::google::protobuf::uint8* GetMetric::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.GetMetric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.GetMetric.run_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->run_uuid(), target);
  }

  // optional string metric_key = 2 [(.validate_required) = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->metric_key().data(), static_cast<int>(this->metric_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.GetMetric.metric_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->metric_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.GetMetric)
  return target;
}

size_t GetMetric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.GetMetric)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string run_uuid = 1 [(.validate_required) = true];
    if (has_run_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->run_uuid());
    }

    // optional string metric_key = 2 [(.validate_required) = true];
    if (has_metric_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->metric_key());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMetric::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.GetMetric)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMetric* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMetric>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.GetMetric)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.GetMetric)
    MergeFrom(*source);
  }
}

void GetMetric::MergeFrom(const GetMetric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.GetMetric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_run_uuid();
      run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_metric_key();
      metric_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metric_key_);
    }
  }
}

void GetMetric::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.GetMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMetric::CopyFrom(const GetMetric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.GetMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMetric::IsInitialized() const {
  return true;
}

void GetMetric::Swap(GetMetric* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMetric::InternalSwap(GetMetric* other) {
  using std::swap;
  run_uuid_.Swap(&other->run_uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  metric_key_.Swap(&other->metric_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMetric::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetParam_Response::InitAsDefaultInstance() {
  ::mlflow::_GetParam_Response_default_instance_._instance.get_mutable()->parameter_ = const_cast< ::mlflow::Param*>(
      ::mlflow::Param::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetParam_Response::kParameterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetParam_Response::GetParam_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_GetParam_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.GetParam.Response)
}
GetParam_Response::GetParam_Response(const GetParam_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_parameter()) {
    parameter_ = new ::mlflow::Param(*from.parameter_);
  } else {
    parameter_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.GetParam.Response)
}

void GetParam_Response::SharedCtor() {
  parameter_ = NULL;
}

GetParam_Response::~GetParam_Response() {
  // @@protoc_insertion_point(destructor:mlflow.GetParam.Response)
  SharedDtor();
}

void GetParam_Response::SharedDtor() {
  if (this != internal_default_instance()) delete parameter_;
}

void GetParam_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetParam_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetParam_Response& GetParam_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_GetParam_Response.base);
  return *internal_default_instance();
}


void GetParam_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.GetParam.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(parameter_ != NULL);
    parameter_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetParam_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.GetParam.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mlflow.Param parameter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parameter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.GetParam.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.GetParam.Response)
  return false;
#undef DO_
}

void GetParam_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.GetParam.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mlflow.Param parameter = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_parameter(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.GetParam.Response)
}

::google::protobuf::uint8* GetParam_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.GetParam.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mlflow.Param parameter = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_parameter(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.GetParam.Response)
  return target;
}

size_t GetParam_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.GetParam.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .mlflow.Param parameter = 1;
  if (has_parameter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parameter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetParam_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.GetParam.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const GetParam_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetParam_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.GetParam.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.GetParam.Response)
    MergeFrom(*source);
  }
}

void GetParam_Response::MergeFrom(const GetParam_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.GetParam.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_parameter()) {
    mutable_parameter()->::mlflow::Param::MergeFrom(from.parameter());
  }
}

void GetParam_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.GetParam.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetParam_Response::CopyFrom(const GetParam_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.GetParam.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetParam_Response::IsInitialized() const {
  return true;
}

void GetParam_Response::Swap(GetParam_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetParam_Response::InternalSwap(GetParam_Response* other) {
  using std::swap;
  swap(parameter_, other->parameter_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetParam_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetParam::kRunUuidFieldNumber;
const int GetParam::kParamNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetParam::GetParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_GetParam.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.GetParam)
}
GetParam::GetParam(const GetParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_run_uuid()) {
    run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
  }
  param_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_param_name()) {
    param_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_name_);
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.GetParam)
}

void GetParam::SharedCtor() {
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetParam::~GetParam() {
  // @@protoc_insertion_point(destructor:mlflow.GetParam)
  SharedDtor();
}

void GetParam::SharedDtor() {
  run_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetParam::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetParam& GetParam::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_GetParam.base);
  return *internal_default_instance();
}


void GetParam::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.GetParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      run_uuid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      param_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.GetParam)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string run_uuid = 1 [(.validate_required) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.GetParam.run_uuid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string param_name = 2 [(.validate_required) = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param_name().data(), static_cast<int>(this->param_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.GetParam.param_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.GetParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.GetParam)
  return false;
#undef DO_
}

void GetParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.GetParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.GetParam.run_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->run_uuid(), output);
  }

  // optional string param_name = 2 [(.validate_required) = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param_name().data(), static_cast<int>(this->param_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.GetParam.param_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->param_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.GetParam)
}

::google::protobuf::uint8* GetParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.GetParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.GetParam.run_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->run_uuid(), target);
  }

  // optional string param_name = 2 [(.validate_required) = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param_name().data(), static_cast<int>(this->param_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.GetParam.param_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->param_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.GetParam)
  return target;
}

size_t GetParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.GetParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string run_uuid = 1 [(.validate_required) = true];
    if (has_run_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->run_uuid());
    }

    // optional string param_name = 2 [(.validate_required) = true];
    if (has_param_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param_name());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.GetParam)
  GOOGLE_DCHECK_NE(&from, this);
  const GetParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.GetParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.GetParam)
    MergeFrom(*source);
  }
}

void GetParam::MergeFrom(const GetParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.GetParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_run_uuid();
      run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_param_name();
      param_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_name_);
    }
  }
}

void GetParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.GetParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetParam::CopyFrom(const GetParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.GetParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetParam::IsInitialized() const {
  return true;
}

void GetParam::Swap(GetParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetParam::InternalSwap(GetParam* other) {
  using std::swap;
  run_uuid_.Swap(&other->run_uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  param_name_.Swap(&other->param_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetParam::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchExpression::InitAsDefaultInstance() {
  ::mlflow::_SearchExpression_default_instance_.metric_ = const_cast< ::mlflow::MetricSearchExpression*>(
      ::mlflow::MetricSearchExpression::internal_default_instance());
  ::mlflow::_SearchExpression_default_instance_.parameter_ = const_cast< ::mlflow::ParameterSearchExpression*>(
      ::mlflow::ParameterSearchExpression::internal_default_instance());
}
void SearchExpression::set_allocated_metric(::mlflow::MetricSearchExpression* metric) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_expression();
  if (metric) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      metric = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metric, submessage_arena);
    }
    set_has_metric();
    expression_.metric_ = metric;
  }
  // @@protoc_insertion_point(field_set_allocated:mlflow.SearchExpression.metric)
}
void SearchExpression::set_allocated_parameter(::mlflow::ParameterSearchExpression* parameter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_expression();
  if (parameter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      parameter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, parameter, submessage_arena);
    }
    set_has_parameter();
    expression_.parameter_ = parameter;
  }
  // @@protoc_insertion_point(field_set_allocated:mlflow.SearchExpression.parameter)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchExpression::kMetricFieldNumber;
const int SearchExpression::kParameterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchExpression::SearchExpression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_SearchExpression.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.SearchExpression)
}
SearchExpression::SearchExpression(const SearchExpression& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_expression();
  switch (from.expression_case()) {
    case kMetric: {
      mutable_metric()->::mlflow::MetricSearchExpression::MergeFrom(from.metric());
      break;
    }
    case kParameter: {
      mutable_parameter()->::mlflow::ParameterSearchExpression::MergeFrom(from.parameter());
      break;
    }
    case EXPRESSION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.SearchExpression)
}

void SearchExpression::SharedCtor() {
  clear_has_expression();
}

SearchExpression::~SearchExpression() {
  // @@protoc_insertion_point(destructor:mlflow.SearchExpression)
  SharedDtor();
}

void SearchExpression::SharedDtor() {
  if (has_expression()) {
    clear_expression();
  }
}

void SearchExpression::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchExpression::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchExpression& SearchExpression::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_SearchExpression.base);
  return *internal_default_instance();
}


void SearchExpression::clear_expression() {
// @@protoc_insertion_point(one_of_clear_start:mlflow.SearchExpression)
  switch (expression_case()) {
    case kMetric: {
      delete expression_.metric_;
      break;
    }
    case kParameter: {
      delete expression_.parameter_;
      break;
    }
    case EXPRESSION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EXPRESSION_NOT_SET;
}


void SearchExpression::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.SearchExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_expression();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SearchExpression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.SearchExpression)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mlflow.MetricSearchExpression metric = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metric()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mlflow.ParameterSearchExpression parameter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parameter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.SearchExpression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.SearchExpression)
  return false;
#undef DO_
}

void SearchExpression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.SearchExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (expression_case()) {
    case kMetric:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_metric(), output);
      break;
    case kParameter:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_parameter(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.SearchExpression)
}

::google::protobuf::uint8* SearchExpression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.SearchExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (expression_case()) {
    case kMetric:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, this->_internal_metric(), deterministic, target);
      break;
    case kParameter:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_parameter(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.SearchExpression)
  return target;
}

size_t SearchExpression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.SearchExpression)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (expression_case()) {
    // optional .mlflow.MetricSearchExpression metric = 1;
    case kMetric: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *expression_.metric_);
      break;
    }
    // optional .mlflow.ParameterSearchExpression parameter = 2;
    case kParameter: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *expression_.parameter_);
      break;
    }
    case EXPRESSION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchExpression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.SearchExpression)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchExpression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchExpression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.SearchExpression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.SearchExpression)
    MergeFrom(*source);
  }
}

void SearchExpression::MergeFrom(const SearchExpression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.SearchExpression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.expression_case()) {
    case kMetric: {
      mutable_metric()->::mlflow::MetricSearchExpression::MergeFrom(from.metric());
      break;
    }
    case kParameter: {
      mutable_parameter()->::mlflow::ParameterSearchExpression::MergeFrom(from.parameter());
      break;
    }
    case EXPRESSION_NOT_SET: {
      break;
    }
  }
}

void SearchExpression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.SearchExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchExpression::CopyFrom(const SearchExpression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.SearchExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchExpression::IsInitialized() const {
  return true;
}

void SearchExpression::Swap(SearchExpression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchExpression::InternalSwap(SearchExpression* other) {
  using std::swap;
  swap(expression_, other->expression_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchExpression::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MetricSearchExpression::InitAsDefaultInstance() {
  ::mlflow::_MetricSearchExpression_default_instance_.float__ = const_cast< ::mlflow::FloatClause*>(
      ::mlflow::FloatClause::internal_default_instance());
  ::mlflow::_MetricSearchExpression_default_instance_.double__ = const_cast< ::mlflow::DoubleClause*>(
      ::mlflow::DoubleClause::internal_default_instance());
}
void MetricSearchExpression::set_allocated_float_(::mlflow::FloatClause* float_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_clause();
  if (float_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      float_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, float_, submessage_arena);
    }
    set_has_float_();
    clause_.float__ = float_;
  }
  // @@protoc_insertion_point(field_set_allocated:mlflow.MetricSearchExpression.float)
}
void MetricSearchExpression::set_allocated_double_(::mlflow::DoubleClause* double_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_clause();
  if (double_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      double_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, double_, submessage_arena);
    }
    set_has_double_();
    clause_.double__ = double_;
  }
  // @@protoc_insertion_point(field_set_allocated:mlflow.MetricSearchExpression.double)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetricSearchExpression::kKeyFieldNumber;
const int MetricSearchExpression::kFloatFieldNumber;
const int MetricSearchExpression::kDoubleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetricSearchExpression::MetricSearchExpression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_MetricSearchExpression.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.MetricSearchExpression)
}
MetricSearchExpression::MetricSearchExpression(const MetricSearchExpression& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  clear_has_clause();
  switch (from.clause_case()) {
    case kFloat: {
      mutable_float_()->::mlflow::FloatClause::MergeFrom(from.float_());
      break;
    }
    case kDouble: {
      mutable_double_()->::mlflow::DoubleClause::MergeFrom(from.double_());
      break;
    }
    case CLAUSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.MetricSearchExpression)
}

void MetricSearchExpression::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clause();
}

MetricSearchExpression::~MetricSearchExpression() {
  // @@protoc_insertion_point(destructor:mlflow.MetricSearchExpression)
  SharedDtor();
}

void MetricSearchExpression::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_clause()) {
    clear_clause();
  }
}

void MetricSearchExpression::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MetricSearchExpression::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetricSearchExpression& MetricSearchExpression::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_MetricSearchExpression.base);
  return *internal_default_instance();
}


void MetricSearchExpression::clear_clause() {
// @@protoc_insertion_point(one_of_clear_start:mlflow.MetricSearchExpression)
  switch (clause_case()) {
    case kFloat: {
      delete clause_.float__;
      break;
    }
    case kDouble: {
      delete clause_.double__;
      break;
    }
    case CLAUSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CLAUSE_NOT_SET;
}


void MetricSearchExpression::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.MetricSearchExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    key_.ClearNonDefaultToEmptyNoArena();
  }
  clear_clause();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetricSearchExpression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.MetricSearchExpression)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.MetricSearchExpression.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mlflow.FloatClause float = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_float_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mlflow.DoubleClause double = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_double_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.MetricSearchExpression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.MetricSearchExpression)
  return false;
#undef DO_
}

void MetricSearchExpression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.MetricSearchExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.MetricSearchExpression.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  switch (clause_case()) {
    case kFloat:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_float_(), output);
      break;
    case kDouble:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_double_(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.MetricSearchExpression)
}

::google::protobuf::uint8* MetricSearchExpression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.MetricSearchExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.MetricSearchExpression.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  switch (clause_case()) {
    case kFloat:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_float_(), deterministic, target);
      break;
    case kDouble:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_double_(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.MetricSearchExpression)
  return target;
}

size_t MetricSearchExpression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.MetricSearchExpression)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string key = 1;
  if (has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  switch (clause_case()) {
    // optional .mlflow.FloatClause float = 2;
    case kFloat: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *clause_.float__);
      break;
    }
    // optional .mlflow.DoubleClause double = 3;
    case kDouble: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *clause_.double__);
      break;
    }
    case CLAUSE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetricSearchExpression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.MetricSearchExpression)
  GOOGLE_DCHECK_NE(&from, this);
  const MetricSearchExpression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetricSearchExpression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.MetricSearchExpression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.MetricSearchExpression)
    MergeFrom(*source);
  }
}

void MetricSearchExpression::MergeFrom(const MetricSearchExpression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.MetricSearchExpression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    set_has_key();
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  switch (from.clause_case()) {
    case kFloat: {
      mutable_float_()->::mlflow::FloatClause::MergeFrom(from.float_());
      break;
    }
    case kDouble: {
      mutable_double_()->::mlflow::DoubleClause::MergeFrom(from.double_());
      break;
    }
    case CLAUSE_NOT_SET: {
      break;
    }
  }
}

void MetricSearchExpression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.MetricSearchExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetricSearchExpression::CopyFrom(const MetricSearchExpression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.MetricSearchExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetricSearchExpression::IsInitialized() const {
  return true;
}

void MetricSearchExpression::Swap(MetricSearchExpression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetricSearchExpression::InternalSwap(MetricSearchExpression* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clause_, other->clause_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MetricSearchExpression::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ParameterSearchExpression::InitAsDefaultInstance() {
  ::mlflow::_ParameterSearchExpression_default_instance_.string_ = const_cast< ::mlflow::StringClause*>(
      ::mlflow::StringClause::internal_default_instance());
}
void ParameterSearchExpression::set_allocated_string(::mlflow::StringClause* string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_clause();
  if (string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string, submessage_arena);
    }
    set_has_string();
    clause_.string_ = string;
  }
  // @@protoc_insertion_point(field_set_allocated:mlflow.ParameterSearchExpression.string)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParameterSearchExpression::kKeyFieldNumber;
const int ParameterSearchExpression::kStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParameterSearchExpression::ParameterSearchExpression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_ParameterSearchExpression.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.ParameterSearchExpression)
}
ParameterSearchExpression::ParameterSearchExpression(const ParameterSearchExpression& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  clear_has_clause();
  switch (from.clause_case()) {
    case kString: {
      mutable_string()->::mlflow::StringClause::MergeFrom(from.string());
      break;
    }
    case CLAUSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.ParameterSearchExpression)
}

void ParameterSearchExpression::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clause();
}

ParameterSearchExpression::~ParameterSearchExpression() {
  // @@protoc_insertion_point(destructor:mlflow.ParameterSearchExpression)
  SharedDtor();
}

void ParameterSearchExpression::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_clause()) {
    clear_clause();
  }
}

void ParameterSearchExpression::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ParameterSearchExpression::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParameterSearchExpression& ParameterSearchExpression::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_ParameterSearchExpression.base);
  return *internal_default_instance();
}


void ParameterSearchExpression::clear_clause() {
// @@protoc_insertion_point(one_of_clear_start:mlflow.ParameterSearchExpression)
  switch (clause_case()) {
    case kString: {
      delete clause_.string_;
      break;
    }
    case CLAUSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CLAUSE_NOT_SET;
}


void ParameterSearchExpression::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.ParameterSearchExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    key_.ClearNonDefaultToEmptyNoArena();
  }
  clear_clause();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ParameterSearchExpression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.ParameterSearchExpression)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.ParameterSearchExpression.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mlflow.StringClause string = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.ParameterSearchExpression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.ParameterSearchExpression)
  return false;
#undef DO_
}

void ParameterSearchExpression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.ParameterSearchExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.ParameterSearchExpression.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional .mlflow.StringClause string = 2;
  if (has_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.ParameterSearchExpression)
}

::google::protobuf::uint8* ParameterSearchExpression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.ParameterSearchExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.ParameterSearchExpression.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional .mlflow.StringClause string = 2;
  if (has_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_string(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.ParameterSearchExpression)
  return target;
}

size_t ParameterSearchExpression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.ParameterSearchExpression)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string key = 1;
  if (has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  switch (clause_case()) {
    // optional .mlflow.StringClause string = 2;
    case kString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *clause_.string_);
      break;
    }
    case CLAUSE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParameterSearchExpression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.ParameterSearchExpression)
  GOOGLE_DCHECK_NE(&from, this);
  const ParameterSearchExpression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParameterSearchExpression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.ParameterSearchExpression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.ParameterSearchExpression)
    MergeFrom(*source);
  }
}

void ParameterSearchExpression::MergeFrom(const ParameterSearchExpression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.ParameterSearchExpression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    set_has_key();
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  switch (from.clause_case()) {
    case kString: {
      mutable_string()->::mlflow::StringClause::MergeFrom(from.string());
      break;
    }
    case CLAUSE_NOT_SET: {
      break;
    }
  }
}

void ParameterSearchExpression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.ParameterSearchExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParameterSearchExpression::CopyFrom(const ParameterSearchExpression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.ParameterSearchExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterSearchExpression::IsInitialized() const {
  return true;
}

void ParameterSearchExpression::Swap(ParameterSearchExpression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParameterSearchExpression::InternalSwap(ParameterSearchExpression* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clause_, other->clause_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ParameterSearchExpression::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StringClause::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringClause::kComparatorFieldNumber;
const int StringClause::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringClause::StringClause()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_StringClause.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.StringClause)
}
StringClause::StringClause(const StringClause& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  comparator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_comparator()) {
    comparator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comparator_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.StringClause)
}

void StringClause::SharedCtor() {
  comparator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StringClause::~StringClause() {
  // @@protoc_insertion_point(destructor:mlflow.StringClause)
  SharedDtor();
}

void StringClause::SharedDtor() {
  comparator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StringClause::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StringClause::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringClause& StringClause::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_StringClause.base);
  return *internal_default_instance();
}


void StringClause::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.StringClause)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      comparator_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StringClause::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.StringClause)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string comparator = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comparator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->comparator().data(), static_cast<int>(this->comparator().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.StringClause.comparator");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.StringClause.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.StringClause)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.StringClause)
  return false;
#undef DO_
}

void StringClause::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.StringClause)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string comparator = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comparator().data(), static_cast<int>(this->comparator().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.StringClause.comparator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->comparator(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.StringClause.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.StringClause)
}

::google::protobuf::uint8* StringClause::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.StringClause)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string comparator = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comparator().data(), static_cast<int>(this->comparator().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.StringClause.comparator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->comparator(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.StringClause.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.StringClause)
  return target;
}

size_t StringClause::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.StringClause)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string comparator = 1;
    if (has_comparator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->comparator());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringClause::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.StringClause)
  GOOGLE_DCHECK_NE(&from, this);
  const StringClause* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringClause>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.StringClause)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.StringClause)
    MergeFrom(*source);
  }
}

void StringClause::MergeFrom(const StringClause& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.StringClause)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_comparator();
      comparator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comparator_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void StringClause::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.StringClause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringClause::CopyFrom(const StringClause& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.StringClause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringClause::IsInitialized() const {
  return true;
}

void StringClause::Swap(StringClause* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringClause::InternalSwap(StringClause* other) {
  using std::swap;
  comparator_.Swap(&other->comparator_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StringClause::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FloatClause::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FloatClause::kComparatorFieldNumber;
const int FloatClause::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FloatClause::FloatClause()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_FloatClause.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.FloatClause)
}
FloatClause::FloatClause(const FloatClause& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  comparator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_comparator()) {
    comparator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comparator_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:mlflow.FloatClause)
}

void FloatClause::SharedCtor() {
  comparator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
}

FloatClause::~FloatClause() {
  // @@protoc_insertion_point(destructor:mlflow.FloatClause)
  SharedDtor();
}

void FloatClause::SharedDtor() {
  comparator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FloatClause::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FloatClause::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FloatClause& FloatClause::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_FloatClause.base);
  return *internal_default_instance();
}


void FloatClause::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.FloatClause)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    comparator_.ClearNonDefaultToEmptyNoArena();
  }
  value_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FloatClause::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.FloatClause)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string comparator = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comparator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->comparator().data(), static_cast<int>(this->comparator().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.FloatClause.comparator");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.FloatClause)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.FloatClause)
  return false;
#undef DO_
}

void FloatClause::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.FloatClause)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string comparator = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comparator().data(), static_cast<int>(this->comparator().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.FloatClause.comparator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->comparator(), output);
  }

  // optional float value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.FloatClause)
}

::google::protobuf::uint8* FloatClause::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.FloatClause)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string comparator = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comparator().data(), static_cast<int>(this->comparator().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.FloatClause.comparator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->comparator(), target);
  }

  // optional float value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.FloatClause)
  return target;
}

size_t FloatClause::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.FloatClause)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string comparator = 1;
    if (has_comparator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->comparator());
    }

    // optional float value = 2;
    if (has_value()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FloatClause::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.FloatClause)
  GOOGLE_DCHECK_NE(&from, this);
  const FloatClause* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FloatClause>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.FloatClause)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.FloatClause)
    MergeFrom(*source);
  }
}

void FloatClause::MergeFrom(const FloatClause& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.FloatClause)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_comparator();
      comparator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comparator_);
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FloatClause::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.FloatClause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FloatClause::CopyFrom(const FloatClause& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.FloatClause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatClause::IsInitialized() const {
  return true;
}

void FloatClause::Swap(FloatClause* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FloatClause::InternalSwap(FloatClause* other) {
  using std::swap;
  comparator_.Swap(&other->comparator_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FloatClause::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DoubleClause::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DoubleClause::kComparatorFieldNumber;
const int DoubleClause::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DoubleClause::DoubleClause()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_DoubleClause.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.DoubleClause)
}
DoubleClause::DoubleClause(const DoubleClause& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  comparator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_comparator()) {
    comparator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comparator_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:mlflow.DoubleClause)
}

void DoubleClause::SharedCtor() {
  comparator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
}

DoubleClause::~DoubleClause() {
  // @@protoc_insertion_point(destructor:mlflow.DoubleClause)
  SharedDtor();
}

void DoubleClause::SharedDtor() {
  comparator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DoubleClause::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DoubleClause::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DoubleClause& DoubleClause::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_DoubleClause.base);
  return *internal_default_instance();
}


void DoubleClause::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.DoubleClause)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    comparator_.ClearNonDefaultToEmptyNoArena();
  }
  value_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DoubleClause::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.DoubleClause)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string comparator = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comparator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->comparator().data(), static_cast<int>(this->comparator().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.DoubleClause.comparator");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.DoubleClause)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.DoubleClause)
  return false;
#undef DO_
}

void DoubleClause::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.DoubleClause)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string comparator = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comparator().data(), static_cast<int>(this->comparator().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.DoubleClause.comparator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->comparator(), output);
  }

  // optional double value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.DoubleClause)
}

::google::protobuf::uint8* DoubleClause::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.DoubleClause)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string comparator = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comparator().data(), static_cast<int>(this->comparator().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.DoubleClause.comparator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->comparator(), target);
  }

  // optional double value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.DoubleClause)
  return target;
}

size_t DoubleClause::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.DoubleClause)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string comparator = 1;
    if (has_comparator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->comparator());
    }

    // optional double value = 2;
    if (has_value()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DoubleClause::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.DoubleClause)
  GOOGLE_DCHECK_NE(&from, this);
  const DoubleClause* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DoubleClause>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.DoubleClause)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.DoubleClause)
    MergeFrom(*source);
  }
}

void DoubleClause::MergeFrom(const DoubleClause& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.DoubleClause)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_comparator();
      comparator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comparator_);
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DoubleClause::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.DoubleClause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoubleClause::CopyFrom(const DoubleClause& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.DoubleClause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoubleClause::IsInitialized() const {
  return true;
}

void DoubleClause::Swap(DoubleClause* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DoubleClause::InternalSwap(DoubleClause* other) {
  using std::swap;
  comparator_.Swap(&other->comparator_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DoubleClause::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchRuns_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchRuns_Response::kRunsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchRuns_Response::SearchRuns_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_SearchRuns_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.SearchRuns.Response)
}
SearchRuns_Response::SearchRuns_Response(const SearchRuns_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      runs_(from.runs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mlflow.SearchRuns.Response)
}

void SearchRuns_Response::SharedCtor() {
}

SearchRuns_Response::~SearchRuns_Response() {
  // @@protoc_insertion_point(destructor:mlflow.SearchRuns.Response)
  SharedDtor();
}

void SearchRuns_Response::SharedDtor() {
}

void SearchRuns_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchRuns_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchRuns_Response& SearchRuns_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_SearchRuns_Response.base);
  return *internal_default_instance();
}


void SearchRuns_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.SearchRuns.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  runs_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SearchRuns_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.SearchRuns.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mlflow.Run runs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_runs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.SearchRuns.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.SearchRuns.Response)
  return false;
#undef DO_
}

void SearchRuns_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.SearchRuns.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mlflow.Run runs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->runs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->runs(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.SearchRuns.Response)
}

::google::protobuf::uint8* SearchRuns_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.SearchRuns.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mlflow.Run runs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->runs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->runs(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.SearchRuns.Response)
  return target;
}

size_t SearchRuns_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.SearchRuns.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .mlflow.Run runs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->runs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->runs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchRuns_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.SearchRuns.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchRuns_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchRuns_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.SearchRuns.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.SearchRuns.Response)
    MergeFrom(*source);
  }
}

void SearchRuns_Response::MergeFrom(const SearchRuns_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.SearchRuns.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  runs_.MergeFrom(from.runs_);
}

void SearchRuns_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.SearchRuns.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchRuns_Response::CopyFrom(const SearchRuns_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.SearchRuns.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchRuns_Response::IsInitialized() const {
  return true;
}

void SearchRuns_Response::Swap(SearchRuns_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchRuns_Response::InternalSwap(SearchRuns_Response* other) {
  using std::swap;
  CastToBase(&runs_)->InternalSwap(CastToBase(&other->runs_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchRuns_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchRuns::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchRuns::kExperimentIdsFieldNumber;
const int SearchRuns::kAndedExpressionsFieldNumber;
const int SearchRuns::kRunViewTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchRuns::SearchRuns()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_SearchRuns.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.SearchRuns)
}
SearchRuns::SearchRuns(const SearchRuns& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      experiment_ids_(from.experiment_ids_),
      anded_expressions_(from.anded_expressions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  run_view_type_ = from.run_view_type_;
  // @@protoc_insertion_point(copy_constructor:mlflow.SearchRuns)
}

void SearchRuns::SharedCtor() {
  run_view_type_ = 1;
}

SearchRuns::~SearchRuns() {
  // @@protoc_insertion_point(destructor:mlflow.SearchRuns)
  SharedDtor();
}

void SearchRuns::SharedDtor() {
}

void SearchRuns::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchRuns::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchRuns& SearchRuns::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_SearchRuns.base);
  return *internal_default_instance();
}


void SearchRuns::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.SearchRuns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  experiment_ids_.Clear();
  anded_expressions_.Clear();
  run_view_type_ = 1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SearchRuns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.SearchRuns)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 experiment_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8u, input, this->mutable_experiment_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_experiment_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .mlflow.SearchExpression anded_expressions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_anded_expressions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mlflow.ViewType run_view_type = 3 [default = ACTIVE_ONLY];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::mlflow::ViewType_IsValid(value)) {
            set_run_view_type(static_cast< ::mlflow::ViewType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.SearchRuns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.SearchRuns)
  return false;
#undef DO_
}

void SearchRuns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.SearchRuns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 experiment_ids = 1;
  for (int i = 0, n = this->experiment_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->experiment_ids(i), output);
  }

  // repeated .mlflow.SearchExpression anded_expressions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->anded_expressions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->anded_expressions(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .mlflow.ViewType run_view_type = 3 [default = ACTIVE_ONLY];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->run_view_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.SearchRuns)
}

::google::protobuf::uint8* SearchRuns::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.SearchRuns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 experiment_ids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(1, this->experiment_ids_, target);

  // repeated .mlflow.SearchExpression anded_expressions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->anded_expressions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->anded_expressions(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .mlflow.ViewType run_view_type = 3 [default = ACTIVE_ONLY];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->run_view_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.SearchRuns)
  return target;
}

size_t SearchRuns::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.SearchRuns)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int64 experiment_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->experiment_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->experiment_ids_size());
    total_size += data_size;
  }

  // repeated .mlflow.SearchExpression anded_expressions = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->anded_expressions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->anded_expressions(static_cast<int>(i)));
    }
  }

  // optional .mlflow.ViewType run_view_type = 3 [default = ACTIVE_ONLY];
  if (has_run_view_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->run_view_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchRuns::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.SearchRuns)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchRuns* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchRuns>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.SearchRuns)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.SearchRuns)
    MergeFrom(*source);
  }
}

void SearchRuns::MergeFrom(const SearchRuns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.SearchRuns)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  experiment_ids_.MergeFrom(from.experiment_ids_);
  anded_expressions_.MergeFrom(from.anded_expressions_);
  if (from.has_run_view_type()) {
    set_run_view_type(from.run_view_type());
  }
}

void SearchRuns::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.SearchRuns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchRuns::CopyFrom(const SearchRuns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.SearchRuns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchRuns::IsInitialized() const {
  return true;
}

void SearchRuns::Swap(SearchRuns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchRuns::InternalSwap(SearchRuns* other) {
  using std::swap;
  experiment_ids_.InternalSwap(&other->experiment_ids_);
  CastToBase(&anded_expressions_)->InternalSwap(CastToBase(&other->anded_expressions_));
  swap(run_view_type_, other->run_view_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchRuns::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListArtifacts_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListArtifacts_Response::kRootUriFieldNumber;
const int ListArtifacts_Response::kFilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListArtifacts_Response::ListArtifacts_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_ListArtifacts_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.ListArtifacts.Response)
}
ListArtifacts_Response::ListArtifacts_Response(const ListArtifacts_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      files_(from.files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  root_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_root_uri()) {
    root_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.root_uri_);
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.ListArtifacts.Response)
}

void ListArtifacts_Response::SharedCtor() {
  root_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListArtifacts_Response::~ListArtifacts_Response() {
  // @@protoc_insertion_point(destructor:mlflow.ListArtifacts.Response)
  SharedDtor();
}

void ListArtifacts_Response::SharedDtor() {
  root_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListArtifacts_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListArtifacts_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListArtifacts_Response& ListArtifacts_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_ListArtifacts_Response.base);
  return *internal_default_instance();
}


void ListArtifacts_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.ListArtifacts.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    root_uri_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ListArtifacts_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.ListArtifacts.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string root_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_root_uri()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->root_uri().data(), static_cast<int>(this->root_uri().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.ListArtifacts.Response.root_uri");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .mlflow.FileInfo files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.ListArtifacts.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.ListArtifacts.Response)
  return false;
#undef DO_
}

void ListArtifacts_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.ListArtifacts.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string root_uri = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->root_uri().data(), static_cast<int>(this->root_uri().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.ListArtifacts.Response.root_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->root_uri(), output);
  }

  // repeated .mlflow.FileInfo files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->files(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.ListArtifacts.Response)
}

::google::protobuf::uint8* ListArtifacts_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.ListArtifacts.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string root_uri = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->root_uri().data(), static_cast<int>(this->root_uri().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.ListArtifacts.Response.root_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->root_uri(), target);
  }

  // repeated .mlflow.FileInfo files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->files(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.ListArtifacts.Response)
  return target;
}

size_t ListArtifacts_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.ListArtifacts.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .mlflow.FileInfo files = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->files(static_cast<int>(i)));
    }
  }

  // optional string root_uri = 1;
  if (has_root_uri()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->root_uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListArtifacts_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.ListArtifacts.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const ListArtifacts_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListArtifacts_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.ListArtifacts.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.ListArtifacts.Response)
    MergeFrom(*source);
  }
}

void ListArtifacts_Response::MergeFrom(const ListArtifacts_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.ListArtifacts.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  files_.MergeFrom(from.files_);
  if (from.has_root_uri()) {
    set_has_root_uri();
    root_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.root_uri_);
  }
}

void ListArtifacts_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.ListArtifacts.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListArtifacts_Response::CopyFrom(const ListArtifacts_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.ListArtifacts.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListArtifacts_Response::IsInitialized() const {
  return true;
}

void ListArtifacts_Response::Swap(ListArtifacts_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListArtifacts_Response::InternalSwap(ListArtifacts_Response* other) {
  using std::swap;
  CastToBase(&files_)->InternalSwap(CastToBase(&other->files_));
  root_uri_.Swap(&other->root_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListArtifacts_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListArtifacts::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListArtifacts::kRunUuidFieldNumber;
const int ListArtifacts::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListArtifacts::ListArtifacts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_ListArtifacts.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.ListArtifacts)
}
ListArtifacts::ListArtifacts(const ListArtifacts& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_run_uuid()) {
    run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.ListArtifacts)
}

void ListArtifacts::SharedCtor() {
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListArtifacts::~ListArtifacts() {
  // @@protoc_insertion_point(destructor:mlflow.ListArtifacts)
  SharedDtor();
}

void ListArtifacts::SharedDtor() {
  run_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListArtifacts::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListArtifacts::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListArtifacts& ListArtifacts::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_ListArtifacts.base);
  return *internal_default_instance();
}


void ListArtifacts::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.ListArtifacts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      run_uuid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ListArtifacts::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.ListArtifacts)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string run_uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.ListArtifacts.run_uuid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.ListArtifacts.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.ListArtifacts)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.ListArtifacts)
  return false;
#undef DO_
}

void ListArtifacts::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.ListArtifacts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.ListArtifacts.run_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->run_uuid(), output);
  }

  // optional string path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.ListArtifacts.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.ListArtifacts)
}

::google::protobuf::uint8* ListArtifacts::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.ListArtifacts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.ListArtifacts.run_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->run_uuid(), target);
  }

  // optional string path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.ListArtifacts.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.ListArtifacts)
  return target;
}

size_t ListArtifacts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.ListArtifacts)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string run_uuid = 1;
    if (has_run_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->run_uuid());
    }

    // optional string path = 2;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListArtifacts::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.ListArtifacts)
  GOOGLE_DCHECK_NE(&from, this);
  const ListArtifacts* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListArtifacts>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.ListArtifacts)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.ListArtifacts)
    MergeFrom(*source);
  }
}

void ListArtifacts::MergeFrom(const ListArtifacts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.ListArtifacts)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_run_uuid();
      run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
  }
}

void ListArtifacts::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.ListArtifacts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListArtifacts::CopyFrom(const ListArtifacts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.ListArtifacts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListArtifacts::IsInitialized() const {
  return true;
}

void ListArtifacts::Swap(ListArtifacts* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListArtifacts::InternalSwap(ListArtifacts* other) {
  using std::swap;
  run_uuid_.Swap(&other->run_uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListArtifacts::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileInfo::kPathFieldNumber;
const int FileInfo::kIsDirFieldNumber;
const int FileInfo::kFileSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileInfo::FileInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_FileInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.FileInfo)
}
FileInfo::FileInfo(const FileInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  ::memcpy(&file_size_, &from.file_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_dir_) -
    reinterpret_cast<char*>(&file_size_)) + sizeof(is_dir_));
  // @@protoc_insertion_point(copy_constructor:mlflow.FileInfo)
}

void FileInfo::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_dir_) -
      reinterpret_cast<char*>(&file_size_)) + sizeof(is_dir_));
}

FileInfo::~FileInfo() {
  // @@protoc_insertion_point(destructor:mlflow.FileInfo)
  SharedDtor();
}

void FileInfo::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileInfo::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileInfo& FileInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_FileInfo.base);
  return *internal_default_instance();
}


void FileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.FileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    path_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&file_size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_dir_) -
        reinterpret_cast<char*>(&file_size_)) + sizeof(is_dir_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FileInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.FileInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.FileInfo.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_dir = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_is_dir();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_dir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 file_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.FileInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.FileInfo)
  return false;
#undef DO_
}

void FileInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.FileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.FileInfo.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional bool is_dir = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_dir(), output);
  }

  // optional int64 file_size = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->file_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.FileInfo)
}

::google::protobuf::uint8* FileInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.FileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.FileInfo.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional bool is_dir = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_dir(), target);
  }

  // optional int64 file_size = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->file_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.FileInfo)
  return target;
}

size_t FileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.FileInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // optional int64 file_size = 3;
    if (has_file_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->file_size());
    }

    // optional bool is_dir = 2;
    if (has_is_dir()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.FileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FileInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.FileInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.FileInfo)
    MergeFrom(*source);
  }
}

void FileInfo::MergeFrom(const FileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.FileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_dir_ = from.is_dir_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FileInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.FileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileInfo::CopyFrom(const FileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.FileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileInfo::IsInitialized() const {
  return true;
}

void FileInfo::Swap(FileInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileInfo::InternalSwap(FileInfo* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(file_size_, other->file_size_);
  swap(is_dir_, other->is_dir_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileInfo::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetArtifact_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetArtifact_Response::GetArtifact_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_GetArtifact_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.GetArtifact.Response)
}
GetArtifact_Response::GetArtifact_Response(const GetArtifact_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mlflow.GetArtifact.Response)
}

void GetArtifact_Response::SharedCtor() {
}

GetArtifact_Response::~GetArtifact_Response() {
  // @@protoc_insertion_point(destructor:mlflow.GetArtifact.Response)
  SharedDtor();
}

void GetArtifact_Response::SharedDtor() {
}

void GetArtifact_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetArtifact_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetArtifact_Response& GetArtifact_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_GetArtifact_Response.base);
  return *internal_default_instance();
}


void GetArtifact_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.GetArtifact.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetArtifact_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.GetArtifact.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.GetArtifact.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.GetArtifact.Response)
  return false;
#undef DO_
}

void GetArtifact_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.GetArtifact.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.GetArtifact.Response)
}

::google::protobuf::uint8* GetArtifact_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.GetArtifact.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.GetArtifact.Response)
  return target;
}

size_t GetArtifact_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.GetArtifact.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetArtifact_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.GetArtifact.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const GetArtifact_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetArtifact_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.GetArtifact.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.GetArtifact.Response)
    MergeFrom(*source);
  }
}

void GetArtifact_Response::MergeFrom(const GetArtifact_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.GetArtifact.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetArtifact_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.GetArtifact.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetArtifact_Response::CopyFrom(const GetArtifact_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.GetArtifact.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifact_Response::IsInitialized() const {
  return true;
}

void GetArtifact_Response::Swap(GetArtifact_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetArtifact_Response::InternalSwap(GetArtifact_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetArtifact_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetArtifact::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetArtifact::kRunUuidFieldNumber;
const int GetArtifact::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetArtifact::GetArtifact()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_GetArtifact.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.GetArtifact)
}
GetArtifact::GetArtifact(const GetArtifact& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_run_uuid()) {
    run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.GetArtifact)
}

void GetArtifact::SharedCtor() {
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetArtifact::~GetArtifact() {
  // @@protoc_insertion_point(destructor:mlflow.GetArtifact)
  SharedDtor();
}

void GetArtifact::SharedDtor() {
  run_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetArtifact::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetArtifact::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetArtifact& GetArtifact::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_GetArtifact.base);
  return *internal_default_instance();
}


void GetArtifact::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.GetArtifact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      run_uuid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetArtifact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.GetArtifact)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string run_uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.GetArtifact.run_uuid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.GetArtifact.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.GetArtifact)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.GetArtifact)
  return false;
#undef DO_
}

void GetArtifact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.GetArtifact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.GetArtifact.run_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->run_uuid(), output);
  }

  // optional string path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.GetArtifact.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.GetArtifact)
}

::google::protobuf::uint8* GetArtifact::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.GetArtifact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.GetArtifact.run_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->run_uuid(), target);
  }

  // optional string path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.GetArtifact.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.GetArtifact)
  return target;
}

size_t GetArtifact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.GetArtifact)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string run_uuid = 1;
    if (has_run_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->run_uuid());
    }

    // optional string path = 2;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetArtifact::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.GetArtifact)
  GOOGLE_DCHECK_NE(&from, this);
  const GetArtifact* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetArtifact>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.GetArtifact)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.GetArtifact)
    MergeFrom(*source);
  }
}

void GetArtifact::MergeFrom(const GetArtifact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.GetArtifact)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_run_uuid();
      run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
  }
}

void GetArtifact::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.GetArtifact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetArtifact::CopyFrom(const GetArtifact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.GetArtifact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifact::IsInitialized() const {
  return true;
}

void GetArtifact::Swap(GetArtifact* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetArtifact::InternalSwap(GetArtifact* other) {
  using std::swap;
  run_uuid_.Swap(&other->run_uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetArtifact::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMetricHistory_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMetricHistory_Response::kMetricsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMetricHistory_Response::GetMetricHistory_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_GetMetricHistory_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.GetMetricHistory.Response)
}
GetMetricHistory_Response::GetMetricHistory_Response(const GetMetricHistory_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      metrics_(from.metrics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mlflow.GetMetricHistory.Response)
}

void GetMetricHistory_Response::SharedCtor() {
}

GetMetricHistory_Response::~GetMetricHistory_Response() {
  // @@protoc_insertion_point(destructor:mlflow.GetMetricHistory.Response)
  SharedDtor();
}

void GetMetricHistory_Response::SharedDtor() {
}

void GetMetricHistory_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMetricHistory_Response::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMetricHistory_Response& GetMetricHistory_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_GetMetricHistory_Response.base);
  return *internal_default_instance();
}


void GetMetricHistory_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.GetMetricHistory.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metrics_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetMetricHistory_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.GetMetricHistory.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mlflow.Metric metrics = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.GetMetricHistory.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.GetMetricHistory.Response)
  return false;
#undef DO_
}

void GetMetricHistory_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.GetMetricHistory.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mlflow.Metric metrics = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->metrics(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.GetMetricHistory.Response)
}

::google::protobuf::uint8* GetMetricHistory_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.GetMetricHistory.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mlflow.Metric metrics = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->metrics(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.GetMetricHistory.Response)
  return target;
}

size_t GetMetricHistory_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.GetMetricHistory.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .mlflow.Metric metrics = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->metrics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metrics(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMetricHistory_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.GetMetricHistory.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMetricHistory_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMetricHistory_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.GetMetricHistory.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.GetMetricHistory.Response)
    MergeFrom(*source);
  }
}

void GetMetricHistory_Response::MergeFrom(const GetMetricHistory_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.GetMetricHistory.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metrics_.MergeFrom(from.metrics_);
}

void GetMetricHistory_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.GetMetricHistory.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMetricHistory_Response::CopyFrom(const GetMetricHistory_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.GetMetricHistory.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMetricHistory_Response::IsInitialized() const {
  return true;
}

void GetMetricHistory_Response::Swap(GetMetricHistory_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMetricHistory_Response::InternalSwap(GetMetricHistory_Response* other) {
  using std::swap;
  CastToBase(&metrics_)->InternalSwap(CastToBase(&other->metrics_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMetricHistory_Response::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMetricHistory::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMetricHistory::kRunUuidFieldNumber;
const int GetMetricHistory::kMetricKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMetricHistory::GetMetricHistory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_GetMetricHistory.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mlflow.GetMetricHistory)
}
GetMetricHistory::GetMetricHistory(const GetMetricHistory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_run_uuid()) {
    run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
  }
  metric_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_metric_key()) {
    metric_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metric_key_);
  }
  // @@protoc_insertion_point(copy_constructor:mlflow.GetMetricHistory)
}

void GetMetricHistory::SharedCtor() {
  run_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metric_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetMetricHistory::~GetMetricHistory() {
  // @@protoc_insertion_point(destructor:mlflow.GetMetricHistory)
  SharedDtor();
}

void GetMetricHistory::SharedDtor() {
  run_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metric_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetMetricHistory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMetricHistory::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMetricHistory& GetMetricHistory::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_GetMetricHistory.base);
  return *internal_default_instance();
}


void GetMetricHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:mlflow.GetMetricHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      run_uuid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      metric_key_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetMetricHistory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mlflow.GetMetricHistory)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string run_uuid = 1 [(.validate_required) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.GetMetricHistory.run_uuid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string metric_key = 2 [(.validate_required) = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metric_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->metric_key().data(), static_cast<int>(this->metric_key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mlflow.GetMetricHistory.metric_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mlflow.GetMetricHistory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mlflow.GetMetricHistory)
  return false;
#undef DO_
}

void GetMetricHistory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mlflow.GetMetricHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.GetMetricHistory.run_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->run_uuid(), output);
  }

  // optional string metric_key = 2 [(.validate_required) = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->metric_key().data(), static_cast<int>(this->metric_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.GetMetricHistory.metric_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->metric_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mlflow.GetMetricHistory)
}

::google::protobuf::uint8* GetMetricHistory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mlflow.GetMetricHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string run_uuid = 1 [(.validate_required) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_uuid().data(), static_cast<int>(this->run_uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.GetMetricHistory.run_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->run_uuid(), target);
  }

  // optional string metric_key = 2 [(.validate_required) = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->metric_key().data(), static_cast<int>(this->metric_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mlflow.GetMetricHistory.metric_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->metric_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mlflow.GetMetricHistory)
  return target;
}

size_t GetMetricHistory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mlflow.GetMetricHistory)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string run_uuid = 1 [(.validate_required) = true];
    if (has_run_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->run_uuid());
    }

    // optional string metric_key = 2 [(.validate_required) = true];
    if (has_metric_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->metric_key());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMetricHistory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mlflow.GetMetricHistory)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMetricHistory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMetricHistory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mlflow.GetMetricHistory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mlflow.GetMetricHistory)
    MergeFrom(*source);
  }
}

void GetMetricHistory::MergeFrom(const GetMetricHistory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mlflow.GetMetricHistory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_run_uuid();
      run_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_uuid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_metric_key();
      metric_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metric_key_);
    }
  }
}

void GetMetricHistory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mlflow.GetMetricHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMetricHistory::CopyFrom(const GetMetricHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mlflow.GetMetricHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMetricHistory::IsInitialized() const {
  return true;
}

void GetMetricHistory::Swap(GetMetricHistory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMetricHistory::InternalSwap(GetMetricHistory* other) {
  using std::swap;
  run_uuid_.Swap(&other->run_uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  metric_key_.Swap(&other->metric_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMetricHistory::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mlflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::Metric* Arena::CreateMaybeMessage< ::mlflow::Metric >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::Metric >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::Param* Arena::CreateMaybeMessage< ::mlflow::Param >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::Param >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::Run* Arena::CreateMaybeMessage< ::mlflow::Run >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::Run >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::RunData* Arena::CreateMaybeMessage< ::mlflow::RunData >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::RunData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::RunTag* Arena::CreateMaybeMessage< ::mlflow::RunTag >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::RunTag >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::RunInfo* Arena::CreateMaybeMessage< ::mlflow::RunInfo >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::RunInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::Experiment* Arena::CreateMaybeMessage< ::mlflow::Experiment >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::Experiment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::CreateExperiment_Response* Arena::CreateMaybeMessage< ::mlflow::CreateExperiment_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::CreateExperiment_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::CreateExperiment* Arena::CreateMaybeMessage< ::mlflow::CreateExperiment >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::CreateExperiment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::ListExperiments_Response* Arena::CreateMaybeMessage< ::mlflow::ListExperiments_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::ListExperiments_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::ListExperiments* Arena::CreateMaybeMessage< ::mlflow::ListExperiments >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::ListExperiments >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::GetExperiment_Response* Arena::CreateMaybeMessage< ::mlflow::GetExperiment_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::GetExperiment_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::GetExperiment* Arena::CreateMaybeMessage< ::mlflow::GetExperiment >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::GetExperiment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::DeleteExperiment_Response* Arena::CreateMaybeMessage< ::mlflow::DeleteExperiment_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::DeleteExperiment_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::DeleteExperiment* Arena::CreateMaybeMessage< ::mlflow::DeleteExperiment >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::DeleteExperiment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::RestoreExperiment_Response* Arena::CreateMaybeMessage< ::mlflow::RestoreExperiment_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::RestoreExperiment_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::RestoreExperiment* Arena::CreateMaybeMessage< ::mlflow::RestoreExperiment >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::RestoreExperiment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::CreateRun_Response* Arena::CreateMaybeMessage< ::mlflow::CreateRun_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::CreateRun_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::CreateRun* Arena::CreateMaybeMessage< ::mlflow::CreateRun >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::CreateRun >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::UpdateRun_Response* Arena::CreateMaybeMessage< ::mlflow::UpdateRun_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::UpdateRun_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::UpdateRun* Arena::CreateMaybeMessage< ::mlflow::UpdateRun >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::UpdateRun >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::DeleteRun_Response* Arena::CreateMaybeMessage< ::mlflow::DeleteRun_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::DeleteRun_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::DeleteRun* Arena::CreateMaybeMessage< ::mlflow::DeleteRun >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::DeleteRun >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::RestoreRun_Response* Arena::CreateMaybeMessage< ::mlflow::RestoreRun_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::RestoreRun_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::RestoreRun* Arena::CreateMaybeMessage< ::mlflow::RestoreRun >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::RestoreRun >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::LogMetric_Response* Arena::CreateMaybeMessage< ::mlflow::LogMetric_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::LogMetric_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::LogMetric* Arena::CreateMaybeMessage< ::mlflow::LogMetric >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::LogMetric >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::LogParam_Response* Arena::CreateMaybeMessage< ::mlflow::LogParam_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::LogParam_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::LogParam* Arena::CreateMaybeMessage< ::mlflow::LogParam >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::LogParam >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::SetTag_Response* Arena::CreateMaybeMessage< ::mlflow::SetTag_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::SetTag_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::SetTag* Arena::CreateMaybeMessage< ::mlflow::SetTag >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::SetTag >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::GetRun_Response* Arena::CreateMaybeMessage< ::mlflow::GetRun_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::GetRun_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::GetRun* Arena::CreateMaybeMessage< ::mlflow::GetRun >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::GetRun >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::GetMetric_Response* Arena::CreateMaybeMessage< ::mlflow::GetMetric_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::GetMetric_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::GetMetric* Arena::CreateMaybeMessage< ::mlflow::GetMetric >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::GetMetric >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::GetParam_Response* Arena::CreateMaybeMessage< ::mlflow::GetParam_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::GetParam_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::GetParam* Arena::CreateMaybeMessage< ::mlflow::GetParam >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::GetParam >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::SearchExpression* Arena::CreateMaybeMessage< ::mlflow::SearchExpression >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::SearchExpression >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::MetricSearchExpression* Arena::CreateMaybeMessage< ::mlflow::MetricSearchExpression >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::MetricSearchExpression >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::ParameterSearchExpression* Arena::CreateMaybeMessage< ::mlflow::ParameterSearchExpression >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::ParameterSearchExpression >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::StringClause* Arena::CreateMaybeMessage< ::mlflow::StringClause >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::StringClause >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::FloatClause* Arena::CreateMaybeMessage< ::mlflow::FloatClause >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::FloatClause >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::DoubleClause* Arena::CreateMaybeMessage< ::mlflow::DoubleClause >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::DoubleClause >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::SearchRuns_Response* Arena::CreateMaybeMessage< ::mlflow::SearchRuns_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::SearchRuns_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::SearchRuns* Arena::CreateMaybeMessage< ::mlflow::SearchRuns >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::SearchRuns >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::ListArtifacts_Response* Arena::CreateMaybeMessage< ::mlflow::ListArtifacts_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::ListArtifacts_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::ListArtifacts* Arena::CreateMaybeMessage< ::mlflow::ListArtifacts >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::ListArtifacts >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::FileInfo* Arena::CreateMaybeMessage< ::mlflow::FileInfo >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::FileInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::GetArtifact_Response* Arena::CreateMaybeMessage< ::mlflow::GetArtifact_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::GetArtifact_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::GetArtifact* Arena::CreateMaybeMessage< ::mlflow::GetArtifact >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::GetArtifact >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::GetMetricHistory_Response* Arena::CreateMaybeMessage< ::mlflow::GetMetricHistory_Response >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::GetMetricHistory_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mlflow::GetMetricHistory* Arena::CreateMaybeMessage< ::mlflow::GetMetricHistory >(Arena* arena) {
  return Arena::CreateInternal< ::mlflow::GetMetricHistory >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
