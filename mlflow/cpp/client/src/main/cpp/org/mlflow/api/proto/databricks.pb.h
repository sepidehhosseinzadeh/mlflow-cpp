// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: databricks.proto

#ifndef PROTOBUF_INCLUDED_databricks_2eproto
#define PROTOBUF_INCLUDED_databricks_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
#include "scalapb/scalapb.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_databricks_2eproto 

namespace protobuf_databricks_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_databricks_2eproto
class ApiVersion;
class ApiVersionDefaultTypeInternal;
extern ApiVersionDefaultTypeInternal _ApiVersion_default_instance_;
class DatabricksRpcOptions;
class DatabricksRpcOptionsDefaultTypeInternal;
extern DatabricksRpcOptionsDefaultTypeInternal _DatabricksRpcOptions_default_instance_;
class DatabricksServiceExceptionProto;
class DatabricksServiceExceptionProtoDefaultTypeInternal;
extern DatabricksServiceExceptionProtoDefaultTypeInternal _DatabricksServiceExceptionProto_default_instance_;
class DocumentationMetadata;
class DocumentationMetadataDefaultTypeInternal;
extern DocumentationMetadataDefaultTypeInternal _DocumentationMetadata_default_instance_;
class HttpEndpoint;
class HttpEndpointDefaultTypeInternal;
extern HttpEndpointDefaultTypeInternal _HttpEndpoint_default_instance_;
class RateLimit;
class RateLimitDefaultTypeInternal;
extern RateLimitDefaultTypeInternal _RateLimit_default_instance_;
namespace google {
namespace protobuf {
template<> ::ApiVersion* Arena::CreateMaybeMessage<::ApiVersion>(Arena*);
template<> ::DatabricksRpcOptions* Arena::CreateMaybeMessage<::DatabricksRpcOptions>(Arena*);
template<> ::DatabricksServiceExceptionProto* Arena::CreateMaybeMessage<::DatabricksServiceExceptionProto>(Arena*);
template<> ::DocumentationMetadata* Arena::CreateMaybeMessage<::DocumentationMetadata>(Arena*);
template<> ::HttpEndpoint* Arena::CreateMaybeMessage<::HttpEndpoint>(Arena*);
template<> ::RateLimit* Arena::CreateMaybeMessage<::RateLimit>(Arena*);
}  // namespace protobuf
}  // namespace google

enum Visibility {
  PUBLIC = 1,
  INTERNAL = 2,
  PUBLIC_UNDOCUMENTED = 3
};
bool Visibility_IsValid(int value);
const Visibility Visibility_MIN = PUBLIC;
const Visibility Visibility_MAX = PUBLIC_UNDOCUMENTED;
const int Visibility_ARRAYSIZE = Visibility_MAX + 1;

const ::google::protobuf::EnumDescriptor* Visibility_descriptor();
inline const ::std::string& Visibility_Name(Visibility value) {
  return ::google::protobuf::internal::NameOfEnum(
    Visibility_descriptor(), value);
}
inline bool Visibility_Parse(
    const ::std::string& name, Visibility* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Visibility>(
    Visibility_descriptor(), name, value);
}
enum ErrorCode {
  INTERNAL_ERROR = 1,
  TEMPORARILY_UNAVAILABLE = 2,
  IO_ERROR = 3,
  BAD_REQUEST = 4,
  INVALID_PARAMETER_VALUE = 1000,
  ENDPOINT_NOT_FOUND = 1001,
  MALFORMED_REQUEST = 1002,
  INVALID_STATE = 1003,
  PERMISSION_DENIED = 1004,
  FEATURE_DISABLED = 1005,
  CUSTOMER_UNAUTHORIZED = 1006,
  REQUEST_LIMIT_EXCEEDED = 1007,
  INVALID_STATE_TRANSITION = 2001,
  COULD_NOT_ACQUIRE_LOCK = 2002,
  RESOURCE_ALREADY_EXISTS = 3001,
  RESOURCE_DOES_NOT_EXIST = 3002,
  QUOTA_EXCEEDED = 4001,
  MAX_BLOCK_SIZE_EXCEEDED = 4002,
  MAX_READ_SIZE_EXCEEDED = 4003,
  DRY_RUN_FAILED = 5001,
  RESOURCE_LIMIT_EXCEEDED = 5002,
  DIRECTORY_NOT_EMPTY = 6001,
  DIRECTORY_PROTECTED = 6002,
  MAX_NOTEBOOK_SIZE_EXCEEDED = 6003
};
bool ErrorCode_IsValid(int value);
const ErrorCode ErrorCode_MIN = INTERNAL_ERROR;
const ErrorCode ErrorCode_MAX = MAX_NOTEBOOK_SIZE_EXCEEDED;
const int ErrorCode_ARRAYSIZE = ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor();
inline const ::std::string& ErrorCode_Name(ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorCode_descriptor(), value);
}
inline bool ErrorCode_Parse(
    const ::std::string& name, ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCode>(
    ErrorCode_descriptor(), name, value);
}
// ===================================================================

class DatabricksRpcOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DatabricksRpcOptions) */ {
 public:
  DatabricksRpcOptions();
  virtual ~DatabricksRpcOptions();

  DatabricksRpcOptions(const DatabricksRpcOptions& from);

  inline DatabricksRpcOptions& operator=(const DatabricksRpcOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DatabricksRpcOptions(DatabricksRpcOptions&& from) noexcept
    : DatabricksRpcOptions() {
    *this = ::std::move(from);
  }

  inline DatabricksRpcOptions& operator=(DatabricksRpcOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DatabricksRpcOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DatabricksRpcOptions* internal_default_instance() {
    return reinterpret_cast<const DatabricksRpcOptions*>(
               &_DatabricksRpcOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(DatabricksRpcOptions* other);
  friend void swap(DatabricksRpcOptions& a, DatabricksRpcOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DatabricksRpcOptions* New() const final {
    return CreateMaybeMessage<DatabricksRpcOptions>(NULL);
  }

  DatabricksRpcOptions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DatabricksRpcOptions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DatabricksRpcOptions& from);
  void MergeFrom(const DatabricksRpcOptions& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DatabricksRpcOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HttpEndpoint endpoints = 1;
  int endpoints_size() const;
  void clear_endpoints();
  static const int kEndpointsFieldNumber = 1;
  ::HttpEndpoint* mutable_endpoints(int index);
  ::google::protobuf::RepeatedPtrField< ::HttpEndpoint >*
      mutable_endpoints();
  const ::HttpEndpoint& endpoints(int index) const;
  ::HttpEndpoint* add_endpoints();
  const ::google::protobuf::RepeatedPtrField< ::HttpEndpoint >&
      endpoints() const;

  // repeated .ErrorCode error_codes = 3;
  int error_codes_size() const;
  void clear_error_codes();
  static const int kErrorCodesFieldNumber = 3;
  ::ErrorCode error_codes(int index) const;
  void set_error_codes(int index, ::ErrorCode value);
  void add_error_codes(::ErrorCode value);
  const ::google::protobuf::RepeatedField<int>& error_codes() const;
  ::google::protobuf::RepeatedField<int>* mutable_error_codes();

  // optional string rpc_doc_title = 5;
  bool has_rpc_doc_title() const;
  void clear_rpc_doc_title();
  static const int kRpcDocTitleFieldNumber = 5;
  const ::std::string& rpc_doc_title() const;
  void set_rpc_doc_title(const ::std::string& value);
  #if LANG_CXX11
  void set_rpc_doc_title(::std::string&& value);
  #endif
  void set_rpc_doc_title(const char* value);
  void set_rpc_doc_title(const char* value, size_t size);
  ::std::string* mutable_rpc_doc_title();
  ::std::string* release_rpc_doc_title();
  void set_allocated_rpc_doc_title(::std::string* rpc_doc_title);

  // optional .RateLimit rate_limit = 4;
  bool has_rate_limit() const;
  void clear_rate_limit();
  static const int kRateLimitFieldNumber = 4;
  private:
  const ::RateLimit& _internal_rate_limit() const;
  public:
  const ::RateLimit& rate_limit() const;
  ::RateLimit* release_rate_limit();
  ::RateLimit* mutable_rate_limit();
  void set_allocated_rate_limit(::RateLimit* rate_limit);

  // optional .Visibility visibility = 2;
  bool has_visibility() const;
  void clear_visibility();
  static const int kVisibilityFieldNumber = 2;
  ::Visibility visibility() const;
  void set_visibility(::Visibility value);

  // @@protoc_insertion_point(class_scope:DatabricksRpcOptions)
 private:
  void set_has_visibility();
  void clear_has_visibility();
  void set_has_rate_limit();
  void clear_has_rate_limit();
  void set_has_rpc_doc_title();
  void clear_has_rpc_doc_title();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::HttpEndpoint > endpoints_;
  ::google::protobuf::RepeatedField<int> error_codes_;
  ::google::protobuf::internal::ArenaStringPtr rpc_doc_title_;
  ::RateLimit* rate_limit_;
  int visibility_;
  friend struct ::protobuf_databricks_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HttpEndpoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:HttpEndpoint) */ {
 public:
  HttpEndpoint();
  virtual ~HttpEndpoint();

  HttpEndpoint(const HttpEndpoint& from);

  inline HttpEndpoint& operator=(const HttpEndpoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HttpEndpoint(HttpEndpoint&& from) noexcept
    : HttpEndpoint() {
    *this = ::std::move(from);
  }

  inline HttpEndpoint& operator=(HttpEndpoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpEndpoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HttpEndpoint* internal_default_instance() {
    return reinterpret_cast<const HttpEndpoint*>(
               &_HttpEndpoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(HttpEndpoint* other);
  friend void swap(HttpEndpoint& a, HttpEndpoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HttpEndpoint* New() const final {
    return CreateMaybeMessage<HttpEndpoint>(NULL);
  }

  HttpEndpoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HttpEndpoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HttpEndpoint& from);
  void MergeFrom(const HttpEndpoint& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HttpEndpoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string method = 1 [default = "POST"];
  bool has_method() const;
  void clear_method();
  static const int kMethodFieldNumber = 1;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  #if LANG_CXX11
  void set_method(::std::string&& value);
  #endif
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // optional string path = 2;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional .ApiVersion since = 3;
  bool has_since() const;
  void clear_since();
  static const int kSinceFieldNumber = 3;
  private:
  const ::ApiVersion& _internal_since() const;
  public:
  const ::ApiVersion& since() const;
  ::ApiVersion* release_since();
  ::ApiVersion* mutable_since();
  void set_allocated_since(::ApiVersion* since);

  // @@protoc_insertion_point(class_scope:HttpEndpoint)
 private:
  void set_has_method();
  void clear_has_method();
  void set_has_path();
  void clear_has_path();
  void set_has_since();
  void clear_has_since();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  public:
  static ::google::protobuf::internal::ExplicitlyConstructed< ::std::string> _i_give_permission_to_break_this_code_default_method_;
  private:
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::ApiVersion* since_;
  friend struct ::protobuf_databricks_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ApiVersion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ApiVersion) */ {
 public:
  ApiVersion();
  virtual ~ApiVersion();

  ApiVersion(const ApiVersion& from);

  inline ApiVersion& operator=(const ApiVersion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApiVersion(ApiVersion&& from) noexcept
    : ApiVersion() {
    *this = ::std::move(from);
  }

  inline ApiVersion& operator=(ApiVersion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ApiVersion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApiVersion* internal_default_instance() {
    return reinterpret_cast<const ApiVersion*>(
               &_ApiVersion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ApiVersion* other);
  friend void swap(ApiVersion& a, ApiVersion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApiVersion* New() const final {
    return CreateMaybeMessage<ApiVersion>(NULL);
  }

  ApiVersion* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApiVersion>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApiVersion& from);
  void MergeFrom(const ApiVersion& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApiVersion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 major = 1;
  bool has_major() const;
  void clear_major();
  static const int kMajorFieldNumber = 1;
  ::google::protobuf::int32 major() const;
  void set_major(::google::protobuf::int32 value);

  // optional int32 minor = 2;
  bool has_minor() const;
  void clear_minor();
  static const int kMinorFieldNumber = 2;
  ::google::protobuf::int32 minor() const;
  void set_minor(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ApiVersion)
 private:
  void set_has_major();
  void clear_has_major();
  void set_has_minor();
  void clear_has_minor();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 major_;
  ::google::protobuf::int32 minor_;
  friend struct ::protobuf_databricks_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RateLimit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RateLimit) */ {
 public:
  RateLimit();
  virtual ~RateLimit();

  RateLimit(const RateLimit& from);

  inline RateLimit& operator=(const RateLimit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RateLimit(RateLimit&& from) noexcept
    : RateLimit() {
    *this = ::std::move(from);
  }

  inline RateLimit& operator=(RateLimit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RateLimit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RateLimit* internal_default_instance() {
    return reinterpret_cast<const RateLimit*>(
               &_RateLimit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(RateLimit* other);
  friend void swap(RateLimit& a, RateLimit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RateLimit* New() const final {
    return CreateMaybeMessage<RateLimit>(NULL);
  }

  RateLimit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RateLimit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RateLimit& from);
  void MergeFrom(const RateLimit& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RateLimit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 max_burst = 1;
  bool has_max_burst() const;
  void clear_max_burst();
  static const int kMaxBurstFieldNumber = 1;
  ::google::protobuf::int64 max_burst() const;
  void set_max_burst(::google::protobuf::int64 value);

  // optional int64 max_sustained_per_second = 2;
  bool has_max_sustained_per_second() const;
  void clear_max_sustained_per_second();
  static const int kMaxSustainedPerSecondFieldNumber = 2;
  ::google::protobuf::int64 max_sustained_per_second() const;
  void set_max_sustained_per_second(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:RateLimit)
 private:
  void set_has_max_burst();
  void clear_has_max_burst();
  void set_has_max_sustained_per_second();
  void clear_has_max_sustained_per_second();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 max_burst_;
  ::google::protobuf::int64 max_sustained_per_second_;
  friend struct ::protobuf_databricks_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DocumentationMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DocumentationMetadata) */ {
 public:
  DocumentationMetadata();
  virtual ~DocumentationMetadata();

  DocumentationMetadata(const DocumentationMetadata& from);

  inline DocumentationMetadata& operator=(const DocumentationMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DocumentationMetadata(DocumentationMetadata&& from) noexcept
    : DocumentationMetadata() {
    *this = ::std::move(from);
  }

  inline DocumentationMetadata& operator=(DocumentationMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DocumentationMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DocumentationMetadata* internal_default_instance() {
    return reinterpret_cast<const DocumentationMetadata*>(
               &_DocumentationMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(DocumentationMetadata* other);
  friend void swap(DocumentationMetadata& a, DocumentationMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DocumentationMetadata* New() const final {
    return CreateMaybeMessage<DocumentationMetadata>(NULL);
  }

  DocumentationMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DocumentationMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DocumentationMetadata& from);
  void MergeFrom(const DocumentationMetadata& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DocumentationMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string original_proto_path = 4;
  int original_proto_path_size() const;
  void clear_original_proto_path();
  static const int kOriginalProtoPathFieldNumber = 4;
  const ::std::string& original_proto_path(int index) const;
  ::std::string* mutable_original_proto_path(int index);
  void set_original_proto_path(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_original_proto_path(int index, ::std::string&& value);
  #endif
  void set_original_proto_path(int index, const char* value);
  void set_original_proto_path(int index, const char* value, size_t size);
  ::std::string* add_original_proto_path();
  void add_original_proto_path(const ::std::string& value);
  #if LANG_CXX11
  void add_original_proto_path(::std::string&& value);
  #endif
  void add_original_proto_path(const char* value);
  void add_original_proto_path(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& original_proto_path() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_original_proto_path();

  // optional string docstring = 1;
  bool has_docstring() const;
  void clear_docstring();
  static const int kDocstringFieldNumber = 1;
  const ::std::string& docstring() const;
  void set_docstring(const ::std::string& value);
  #if LANG_CXX11
  void set_docstring(::std::string&& value);
  #endif
  void set_docstring(const char* value);
  void set_docstring(const char* value, size_t size);
  ::std::string* mutable_docstring();
  ::std::string* release_docstring();
  void set_allocated_docstring(::std::string* docstring);

  // optional string lead_doc = 2;
  bool has_lead_doc() const;
  void clear_lead_doc();
  static const int kLeadDocFieldNumber = 2;
  const ::std::string& lead_doc() const;
  void set_lead_doc(const ::std::string& value);
  #if LANG_CXX11
  void set_lead_doc(::std::string&& value);
  #endif
  void set_lead_doc(const char* value);
  void set_lead_doc(const char* value, size_t size);
  ::std::string* mutable_lead_doc();
  ::std::string* release_lead_doc();
  void set_allocated_lead_doc(::std::string* lead_doc);

  // optional int32 position = 5;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 5;
  ::google::protobuf::int32 position() const;
  void set_position(::google::protobuf::int32 value);

  // optional .Visibility visibility = 3;
  bool has_visibility() const;
  void clear_visibility();
  static const int kVisibilityFieldNumber = 3;
  ::Visibility visibility() const;
  void set_visibility(::Visibility value);

  // @@protoc_insertion_point(class_scope:DocumentationMetadata)
 private:
  void set_has_docstring();
  void clear_has_docstring();
  void set_has_lead_doc();
  void clear_has_lead_doc();
  void set_has_visibility();
  void clear_has_visibility();
  void set_has_position();
  void clear_has_position();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> original_proto_path_;
  ::google::protobuf::internal::ArenaStringPtr docstring_;
  ::google::protobuf::internal::ArenaStringPtr lead_doc_;
  ::google::protobuf::int32 position_;
  int visibility_;
  friend struct ::protobuf_databricks_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DatabricksServiceExceptionProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DatabricksServiceExceptionProto) */ {
 public:
  DatabricksServiceExceptionProto();
  virtual ~DatabricksServiceExceptionProto();

  DatabricksServiceExceptionProto(const DatabricksServiceExceptionProto& from);

  inline DatabricksServiceExceptionProto& operator=(const DatabricksServiceExceptionProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DatabricksServiceExceptionProto(DatabricksServiceExceptionProto&& from) noexcept
    : DatabricksServiceExceptionProto() {
    *this = ::std::move(from);
  }

  inline DatabricksServiceExceptionProto& operator=(DatabricksServiceExceptionProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DatabricksServiceExceptionProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DatabricksServiceExceptionProto* internal_default_instance() {
    return reinterpret_cast<const DatabricksServiceExceptionProto*>(
               &_DatabricksServiceExceptionProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(DatabricksServiceExceptionProto* other);
  friend void swap(DatabricksServiceExceptionProto& a, DatabricksServiceExceptionProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DatabricksServiceExceptionProto* New() const final {
    return CreateMaybeMessage<DatabricksServiceExceptionProto>(NULL);
  }

  DatabricksServiceExceptionProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DatabricksServiceExceptionProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DatabricksServiceExceptionProto& from);
  void MergeFrom(const DatabricksServiceExceptionProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DatabricksServiceExceptionProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional string stack_trace = 3;
  bool has_stack_trace() const;
  void clear_stack_trace();
  static const int kStackTraceFieldNumber = 3;
  const ::std::string& stack_trace() const;
  void set_stack_trace(const ::std::string& value);
  #if LANG_CXX11
  void set_stack_trace(::std::string&& value);
  #endif
  void set_stack_trace(const char* value);
  void set_stack_trace(const char* value, size_t size);
  ::std::string* mutable_stack_trace();
  ::std::string* release_stack_trace();
  void set_allocated_stack_trace(::std::string* stack_trace);

  // optional .ErrorCode error_code = 1;
  bool has_error_code() const;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::ErrorCode error_code() const;
  void set_error_code(::ErrorCode value);

  // @@protoc_insertion_point(class_scope:DatabricksServiceExceptionProto)
 private:
  void set_has_error_code();
  void clear_has_error_code();
  void set_has_message();
  void clear_has_message();
  void set_has_stack_trace();
  void clear_has_stack_trace();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::internal::ArenaStringPtr stack_trace_;
  int error_code_;
  friend struct ::protobuf_databricks_2eproto::TableStruct;
};
// ===================================================================

static const int kVisibilityFieldNumber = 50000;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::Visibility, ::Visibility_IsValid>, 14, false >
  visibility;
static const int kValidateRequiredFieldNumber = 50001;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  validate_required;
static const int kJsonInlineFieldNumber = 50002;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  json_inline;
static const int kJsonMapFieldNumber = 50003;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  json_map;
static const int kFieldDocFieldNumber = 50004;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::DocumentationMetadata >, 11, false >
  field_doc;
static const int kRpcFieldNumber = 50000;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::DatabricksRpcOptions >, 11, false >
  rpc;
static const int kMethodDocFieldNumber = 50004;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::DocumentationMetadata >, 11, false >
  method_doc;
static const int kMessageDocFieldNumber = 50004;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::DocumentationMetadata >, 11, false >
  message_doc;
static const int kServiceDocFieldNumber = 50004;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::ServiceOptions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::DocumentationMetadata >, 11, false >
  service_doc;
static const int kEnumDocFieldNumber = 50004;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumOptions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::DocumentationMetadata >, 11, false >
  enum_doc;
static const int kEnumValueVisibilityFieldNumber = 50000;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::Visibility, ::Visibility_IsValid>, 14, false >
  enum_value_visibility;
static const int kEnumValueDocFieldNumber = 50004;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::DocumentationMetadata >, 11, false >
  enum_value_doc;

// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DatabricksRpcOptions

// repeated .HttpEndpoint endpoints = 1;
inline int DatabricksRpcOptions::endpoints_size() const {
  return endpoints_.size();
}
inline void DatabricksRpcOptions::clear_endpoints() {
  endpoints_.Clear();
}
inline ::HttpEndpoint* DatabricksRpcOptions::mutable_endpoints(int index) {
  // @@protoc_insertion_point(field_mutable:DatabricksRpcOptions.endpoints)
  return endpoints_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::HttpEndpoint >*
DatabricksRpcOptions::mutable_endpoints() {
  // @@protoc_insertion_point(field_mutable_list:DatabricksRpcOptions.endpoints)
  return &endpoints_;
}
inline const ::HttpEndpoint& DatabricksRpcOptions::endpoints(int index) const {
  // @@protoc_insertion_point(field_get:DatabricksRpcOptions.endpoints)
  return endpoints_.Get(index);
}
inline ::HttpEndpoint* DatabricksRpcOptions::add_endpoints() {
  // @@protoc_insertion_point(field_add:DatabricksRpcOptions.endpoints)
  return endpoints_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HttpEndpoint >&
DatabricksRpcOptions::endpoints() const {
  // @@protoc_insertion_point(field_list:DatabricksRpcOptions.endpoints)
  return endpoints_;
}

// optional .Visibility visibility = 2;
inline bool DatabricksRpcOptions::has_visibility() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DatabricksRpcOptions::set_has_visibility() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DatabricksRpcOptions::clear_has_visibility() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DatabricksRpcOptions::clear_visibility() {
  visibility_ = 1;
  clear_has_visibility();
}
inline ::Visibility DatabricksRpcOptions::visibility() const {
  // @@protoc_insertion_point(field_get:DatabricksRpcOptions.visibility)
  return static_cast< ::Visibility >(visibility_);
}
inline void DatabricksRpcOptions::set_visibility(::Visibility value) {
  assert(::Visibility_IsValid(value));
  set_has_visibility();
  visibility_ = value;
  // @@protoc_insertion_point(field_set:DatabricksRpcOptions.visibility)
}

// repeated .ErrorCode error_codes = 3;
inline int DatabricksRpcOptions::error_codes_size() const {
  return error_codes_.size();
}
inline void DatabricksRpcOptions::clear_error_codes() {
  error_codes_.Clear();
}
inline ::ErrorCode DatabricksRpcOptions::error_codes(int index) const {
  // @@protoc_insertion_point(field_get:DatabricksRpcOptions.error_codes)
  return static_cast< ::ErrorCode >(error_codes_.Get(index));
}
inline void DatabricksRpcOptions::set_error_codes(int index, ::ErrorCode value) {
  assert(::ErrorCode_IsValid(value));
  error_codes_.Set(index, value);
  // @@protoc_insertion_point(field_set:DatabricksRpcOptions.error_codes)
}
inline void DatabricksRpcOptions::add_error_codes(::ErrorCode value) {
  assert(::ErrorCode_IsValid(value));
  error_codes_.Add(value);
  // @@protoc_insertion_point(field_add:DatabricksRpcOptions.error_codes)
}
inline const ::google::protobuf::RepeatedField<int>&
DatabricksRpcOptions::error_codes() const {
  // @@protoc_insertion_point(field_list:DatabricksRpcOptions.error_codes)
  return error_codes_;
}
inline ::google::protobuf::RepeatedField<int>*
DatabricksRpcOptions::mutable_error_codes() {
  // @@protoc_insertion_point(field_mutable_list:DatabricksRpcOptions.error_codes)
  return &error_codes_;
}

// optional .RateLimit rate_limit = 4;
inline bool DatabricksRpcOptions::has_rate_limit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DatabricksRpcOptions::set_has_rate_limit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DatabricksRpcOptions::clear_has_rate_limit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DatabricksRpcOptions::clear_rate_limit() {
  if (rate_limit_ != NULL) rate_limit_->Clear();
  clear_has_rate_limit();
}
inline const ::RateLimit& DatabricksRpcOptions::_internal_rate_limit() const {
  return *rate_limit_;
}
inline const ::RateLimit& DatabricksRpcOptions::rate_limit() const {
  const ::RateLimit* p = rate_limit_;
  // @@protoc_insertion_point(field_get:DatabricksRpcOptions.rate_limit)
  return p != NULL ? *p : *reinterpret_cast<const ::RateLimit*>(
      &::_RateLimit_default_instance_);
}
inline ::RateLimit* DatabricksRpcOptions::release_rate_limit() {
  // @@protoc_insertion_point(field_release:DatabricksRpcOptions.rate_limit)
  clear_has_rate_limit();
  ::RateLimit* temp = rate_limit_;
  rate_limit_ = NULL;
  return temp;
}
inline ::RateLimit* DatabricksRpcOptions::mutable_rate_limit() {
  set_has_rate_limit();
  if (rate_limit_ == NULL) {
    auto* p = CreateMaybeMessage<::RateLimit>(GetArenaNoVirtual());
    rate_limit_ = p;
  }
  // @@protoc_insertion_point(field_mutable:DatabricksRpcOptions.rate_limit)
  return rate_limit_;
}
inline void DatabricksRpcOptions::set_allocated_rate_limit(::RateLimit* rate_limit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rate_limit_;
  }
  if (rate_limit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rate_limit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rate_limit, submessage_arena);
    }
    set_has_rate_limit();
  } else {
    clear_has_rate_limit();
  }
  rate_limit_ = rate_limit;
  // @@protoc_insertion_point(field_set_allocated:DatabricksRpcOptions.rate_limit)
}

// optional string rpc_doc_title = 5;
inline bool DatabricksRpcOptions::has_rpc_doc_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DatabricksRpcOptions::set_has_rpc_doc_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DatabricksRpcOptions::clear_has_rpc_doc_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DatabricksRpcOptions::clear_rpc_doc_title() {
  rpc_doc_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rpc_doc_title();
}
inline const ::std::string& DatabricksRpcOptions::rpc_doc_title() const {
  // @@protoc_insertion_point(field_get:DatabricksRpcOptions.rpc_doc_title)
  return rpc_doc_title_.GetNoArena();
}
inline void DatabricksRpcOptions::set_rpc_doc_title(const ::std::string& value) {
  set_has_rpc_doc_title();
  rpc_doc_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DatabricksRpcOptions.rpc_doc_title)
}
#if LANG_CXX11
inline void DatabricksRpcOptions::set_rpc_doc_title(::std::string&& value) {
  set_has_rpc_doc_title();
  rpc_doc_title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DatabricksRpcOptions.rpc_doc_title)
}
#endif
inline void DatabricksRpcOptions::set_rpc_doc_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_rpc_doc_title();
  rpc_doc_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DatabricksRpcOptions.rpc_doc_title)
}
inline void DatabricksRpcOptions::set_rpc_doc_title(const char* value, size_t size) {
  set_has_rpc_doc_title();
  rpc_doc_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DatabricksRpcOptions.rpc_doc_title)
}
inline ::std::string* DatabricksRpcOptions::mutable_rpc_doc_title() {
  set_has_rpc_doc_title();
  // @@protoc_insertion_point(field_mutable:DatabricksRpcOptions.rpc_doc_title)
  return rpc_doc_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DatabricksRpcOptions::release_rpc_doc_title() {
  // @@protoc_insertion_point(field_release:DatabricksRpcOptions.rpc_doc_title)
  if (!has_rpc_doc_title()) {
    return NULL;
  }
  clear_has_rpc_doc_title();
  return rpc_doc_title_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DatabricksRpcOptions::set_allocated_rpc_doc_title(::std::string* rpc_doc_title) {
  if (rpc_doc_title != NULL) {
    set_has_rpc_doc_title();
  } else {
    clear_has_rpc_doc_title();
  }
  rpc_doc_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rpc_doc_title);
  // @@protoc_insertion_point(field_set_allocated:DatabricksRpcOptions.rpc_doc_title)
}

// -------------------------------------------------------------------

// HttpEndpoint

// optional string method = 1 [default = "POST"];
inline bool HttpEndpoint::has_method() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HttpEndpoint::set_has_method() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HttpEndpoint::clear_has_method() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HttpEndpoint::clear_method() {
  method_.ClearToDefaultNoArena(&::HttpEndpoint::_i_give_permission_to_break_this_code_default_method_.get());
  clear_has_method();
}
inline const ::std::string& HttpEndpoint::method() const {
  // @@protoc_insertion_point(field_get:HttpEndpoint.method)
  return method_.GetNoArena();
}
inline void HttpEndpoint::set_method(const ::std::string& value) {
  set_has_method();
  method_.SetNoArena(&::HttpEndpoint::_i_give_permission_to_break_this_code_default_method_.get(), value);
  // @@protoc_insertion_point(field_set:HttpEndpoint.method)
}
#if LANG_CXX11
inline void HttpEndpoint::set_method(::std::string&& value) {
  set_has_method();
  method_.SetNoArena(
    &::HttpEndpoint::_i_give_permission_to_break_this_code_default_method_.get(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:HttpEndpoint.method)
}
#endif
inline void HttpEndpoint::set_method(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_method();
  method_.SetNoArena(&::HttpEndpoint::_i_give_permission_to_break_this_code_default_method_.get(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HttpEndpoint.method)
}
inline void HttpEndpoint::set_method(const char* value, size_t size) {
  set_has_method();
  method_.SetNoArena(&::HttpEndpoint::_i_give_permission_to_break_this_code_default_method_.get(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HttpEndpoint.method)
}
inline ::std::string* HttpEndpoint::mutable_method() {
  set_has_method();
  // @@protoc_insertion_point(field_mutable:HttpEndpoint.method)
  return method_.MutableNoArena(&::HttpEndpoint::_i_give_permission_to_break_this_code_default_method_.get());
}
inline ::std::string* HttpEndpoint::release_method() {
  // @@protoc_insertion_point(field_release:HttpEndpoint.method)
  if (!has_method()) {
    return NULL;
  }
  clear_has_method();
  return method_.ReleaseNonDefaultNoArena(&::HttpEndpoint::_i_give_permission_to_break_this_code_default_method_.get());
}
inline void HttpEndpoint::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    set_has_method();
  } else {
    clear_has_method();
  }
  method_.SetAllocatedNoArena(&::HttpEndpoint::_i_give_permission_to_break_this_code_default_method_.get(), method);
  // @@protoc_insertion_point(field_set_allocated:HttpEndpoint.method)
}

// optional string path = 2;
inline bool HttpEndpoint::has_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HttpEndpoint::set_has_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HttpEndpoint::clear_has_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HttpEndpoint::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& HttpEndpoint::path() const {
  // @@protoc_insertion_point(field_get:HttpEndpoint.path)
  return path_.GetNoArena();
}
inline void HttpEndpoint::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HttpEndpoint.path)
}
#if LANG_CXX11
inline void HttpEndpoint::set_path(::std::string&& value) {
  set_has_path();
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:HttpEndpoint.path)
}
#endif
inline void HttpEndpoint::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HttpEndpoint.path)
}
inline void HttpEndpoint::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HttpEndpoint.path)
}
inline ::std::string* HttpEndpoint::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:HttpEndpoint.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpEndpoint::release_path() {
  // @@protoc_insertion_point(field_release:HttpEndpoint.path)
  if (!has_path()) {
    return NULL;
  }
  clear_has_path();
  return path_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpEndpoint::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:HttpEndpoint.path)
}

// optional .ApiVersion since = 3;
inline bool HttpEndpoint::has_since() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HttpEndpoint::set_has_since() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HttpEndpoint::clear_has_since() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HttpEndpoint::clear_since() {
  if (since_ != NULL) since_->Clear();
  clear_has_since();
}
inline const ::ApiVersion& HttpEndpoint::_internal_since() const {
  return *since_;
}
inline const ::ApiVersion& HttpEndpoint::since() const {
  const ::ApiVersion* p = since_;
  // @@protoc_insertion_point(field_get:HttpEndpoint.since)
  return p != NULL ? *p : *reinterpret_cast<const ::ApiVersion*>(
      &::_ApiVersion_default_instance_);
}
inline ::ApiVersion* HttpEndpoint::release_since() {
  // @@protoc_insertion_point(field_release:HttpEndpoint.since)
  clear_has_since();
  ::ApiVersion* temp = since_;
  since_ = NULL;
  return temp;
}
inline ::ApiVersion* HttpEndpoint::mutable_since() {
  set_has_since();
  if (since_ == NULL) {
    auto* p = CreateMaybeMessage<::ApiVersion>(GetArenaNoVirtual());
    since_ = p;
  }
  // @@protoc_insertion_point(field_mutable:HttpEndpoint.since)
  return since_;
}
inline void HttpEndpoint::set_allocated_since(::ApiVersion* since) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete since_;
  }
  if (since) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      since = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, since, submessage_arena);
    }
    set_has_since();
  } else {
    clear_has_since();
  }
  since_ = since;
  // @@protoc_insertion_point(field_set_allocated:HttpEndpoint.since)
}

// -------------------------------------------------------------------

// ApiVersion

// optional int32 major = 1;
inline bool ApiVersion::has_major() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApiVersion::set_has_major() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApiVersion::clear_has_major() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApiVersion::clear_major() {
  major_ = 0;
  clear_has_major();
}
inline ::google::protobuf::int32 ApiVersion::major() const {
  // @@protoc_insertion_point(field_get:ApiVersion.major)
  return major_;
}
inline void ApiVersion::set_major(::google::protobuf::int32 value) {
  set_has_major();
  major_ = value;
  // @@protoc_insertion_point(field_set:ApiVersion.major)
}

// optional int32 minor = 2;
inline bool ApiVersion::has_minor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApiVersion::set_has_minor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ApiVersion::clear_has_minor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ApiVersion::clear_minor() {
  minor_ = 0;
  clear_has_minor();
}
inline ::google::protobuf::int32 ApiVersion::minor() const {
  // @@protoc_insertion_point(field_get:ApiVersion.minor)
  return minor_;
}
inline void ApiVersion::set_minor(::google::protobuf::int32 value) {
  set_has_minor();
  minor_ = value;
  // @@protoc_insertion_point(field_set:ApiVersion.minor)
}

// -------------------------------------------------------------------

// RateLimit

// optional int64 max_burst = 1;
inline bool RateLimit::has_max_burst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RateLimit::set_has_max_burst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RateLimit::clear_has_max_burst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RateLimit::clear_max_burst() {
  max_burst_ = GOOGLE_LONGLONG(0);
  clear_has_max_burst();
}
inline ::google::protobuf::int64 RateLimit::max_burst() const {
  // @@protoc_insertion_point(field_get:RateLimit.max_burst)
  return max_burst_;
}
inline void RateLimit::set_max_burst(::google::protobuf::int64 value) {
  set_has_max_burst();
  max_burst_ = value;
  // @@protoc_insertion_point(field_set:RateLimit.max_burst)
}

// optional int64 max_sustained_per_second = 2;
inline bool RateLimit::has_max_sustained_per_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RateLimit::set_has_max_sustained_per_second() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RateLimit::clear_has_max_sustained_per_second() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RateLimit::clear_max_sustained_per_second() {
  max_sustained_per_second_ = GOOGLE_LONGLONG(0);
  clear_has_max_sustained_per_second();
}
inline ::google::protobuf::int64 RateLimit::max_sustained_per_second() const {
  // @@protoc_insertion_point(field_get:RateLimit.max_sustained_per_second)
  return max_sustained_per_second_;
}
inline void RateLimit::set_max_sustained_per_second(::google::protobuf::int64 value) {
  set_has_max_sustained_per_second();
  max_sustained_per_second_ = value;
  // @@protoc_insertion_point(field_set:RateLimit.max_sustained_per_second)
}

// -------------------------------------------------------------------

// DocumentationMetadata

// optional string docstring = 1;
inline bool DocumentationMetadata::has_docstring() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DocumentationMetadata::set_has_docstring() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DocumentationMetadata::clear_has_docstring() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DocumentationMetadata::clear_docstring() {
  docstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_docstring();
}
inline const ::std::string& DocumentationMetadata::docstring() const {
  // @@protoc_insertion_point(field_get:DocumentationMetadata.docstring)
  return docstring_.GetNoArena();
}
inline void DocumentationMetadata::set_docstring(const ::std::string& value) {
  set_has_docstring();
  docstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DocumentationMetadata.docstring)
}
#if LANG_CXX11
inline void DocumentationMetadata::set_docstring(::std::string&& value) {
  set_has_docstring();
  docstring_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DocumentationMetadata.docstring)
}
#endif
inline void DocumentationMetadata::set_docstring(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_docstring();
  docstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DocumentationMetadata.docstring)
}
inline void DocumentationMetadata::set_docstring(const char* value, size_t size) {
  set_has_docstring();
  docstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DocumentationMetadata.docstring)
}
inline ::std::string* DocumentationMetadata::mutable_docstring() {
  set_has_docstring();
  // @@protoc_insertion_point(field_mutable:DocumentationMetadata.docstring)
  return docstring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DocumentationMetadata::release_docstring() {
  // @@protoc_insertion_point(field_release:DocumentationMetadata.docstring)
  if (!has_docstring()) {
    return NULL;
  }
  clear_has_docstring();
  return docstring_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DocumentationMetadata::set_allocated_docstring(::std::string* docstring) {
  if (docstring != NULL) {
    set_has_docstring();
  } else {
    clear_has_docstring();
  }
  docstring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), docstring);
  // @@protoc_insertion_point(field_set_allocated:DocumentationMetadata.docstring)
}

// optional string lead_doc = 2;
inline bool DocumentationMetadata::has_lead_doc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DocumentationMetadata::set_has_lead_doc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DocumentationMetadata::clear_has_lead_doc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DocumentationMetadata::clear_lead_doc() {
  lead_doc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lead_doc();
}
inline const ::std::string& DocumentationMetadata::lead_doc() const {
  // @@protoc_insertion_point(field_get:DocumentationMetadata.lead_doc)
  return lead_doc_.GetNoArena();
}
inline void DocumentationMetadata::set_lead_doc(const ::std::string& value) {
  set_has_lead_doc();
  lead_doc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DocumentationMetadata.lead_doc)
}
#if LANG_CXX11
inline void DocumentationMetadata::set_lead_doc(::std::string&& value) {
  set_has_lead_doc();
  lead_doc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DocumentationMetadata.lead_doc)
}
#endif
inline void DocumentationMetadata::set_lead_doc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lead_doc();
  lead_doc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DocumentationMetadata.lead_doc)
}
inline void DocumentationMetadata::set_lead_doc(const char* value, size_t size) {
  set_has_lead_doc();
  lead_doc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DocumentationMetadata.lead_doc)
}
inline ::std::string* DocumentationMetadata::mutable_lead_doc() {
  set_has_lead_doc();
  // @@protoc_insertion_point(field_mutable:DocumentationMetadata.lead_doc)
  return lead_doc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DocumentationMetadata::release_lead_doc() {
  // @@protoc_insertion_point(field_release:DocumentationMetadata.lead_doc)
  if (!has_lead_doc()) {
    return NULL;
  }
  clear_has_lead_doc();
  return lead_doc_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DocumentationMetadata::set_allocated_lead_doc(::std::string* lead_doc) {
  if (lead_doc != NULL) {
    set_has_lead_doc();
  } else {
    clear_has_lead_doc();
  }
  lead_doc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lead_doc);
  // @@protoc_insertion_point(field_set_allocated:DocumentationMetadata.lead_doc)
}

// optional .Visibility visibility = 3;
inline bool DocumentationMetadata::has_visibility() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DocumentationMetadata::set_has_visibility() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DocumentationMetadata::clear_has_visibility() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DocumentationMetadata::clear_visibility() {
  visibility_ = 1;
  clear_has_visibility();
}
inline ::Visibility DocumentationMetadata::visibility() const {
  // @@protoc_insertion_point(field_get:DocumentationMetadata.visibility)
  return static_cast< ::Visibility >(visibility_);
}
inline void DocumentationMetadata::set_visibility(::Visibility value) {
  assert(::Visibility_IsValid(value));
  set_has_visibility();
  visibility_ = value;
  // @@protoc_insertion_point(field_set:DocumentationMetadata.visibility)
}

// repeated string original_proto_path = 4;
inline int DocumentationMetadata::original_proto_path_size() const {
  return original_proto_path_.size();
}
inline void DocumentationMetadata::clear_original_proto_path() {
  original_proto_path_.Clear();
}
inline const ::std::string& DocumentationMetadata::original_proto_path(int index) const {
  // @@protoc_insertion_point(field_get:DocumentationMetadata.original_proto_path)
  return original_proto_path_.Get(index);
}
inline ::std::string* DocumentationMetadata::mutable_original_proto_path(int index) {
  // @@protoc_insertion_point(field_mutable:DocumentationMetadata.original_proto_path)
  return original_proto_path_.Mutable(index);
}
inline void DocumentationMetadata::set_original_proto_path(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:DocumentationMetadata.original_proto_path)
  original_proto_path_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void DocumentationMetadata::set_original_proto_path(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:DocumentationMetadata.original_proto_path)
  original_proto_path_.Mutable(index)->assign(std::move(value));
}
#endif
inline void DocumentationMetadata::set_original_proto_path(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  original_proto_path_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:DocumentationMetadata.original_proto_path)
}
inline void DocumentationMetadata::set_original_proto_path(int index, const char* value, size_t size) {
  original_proto_path_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DocumentationMetadata.original_proto_path)
}
inline ::std::string* DocumentationMetadata::add_original_proto_path() {
  // @@protoc_insertion_point(field_add_mutable:DocumentationMetadata.original_proto_path)
  return original_proto_path_.Add();
}
inline void DocumentationMetadata::add_original_proto_path(const ::std::string& value) {
  original_proto_path_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:DocumentationMetadata.original_proto_path)
}
#if LANG_CXX11
inline void DocumentationMetadata::add_original_proto_path(::std::string&& value) {
  original_proto_path_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:DocumentationMetadata.original_proto_path)
}
#endif
inline void DocumentationMetadata::add_original_proto_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  original_proto_path_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:DocumentationMetadata.original_proto_path)
}
inline void DocumentationMetadata::add_original_proto_path(const char* value, size_t size) {
  original_proto_path_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:DocumentationMetadata.original_proto_path)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DocumentationMetadata::original_proto_path() const {
  // @@protoc_insertion_point(field_list:DocumentationMetadata.original_proto_path)
  return original_proto_path_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DocumentationMetadata::mutable_original_proto_path() {
  // @@protoc_insertion_point(field_mutable_list:DocumentationMetadata.original_proto_path)
  return &original_proto_path_;
}

// optional int32 position = 5;
inline bool DocumentationMetadata::has_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DocumentationMetadata::set_has_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DocumentationMetadata::clear_has_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DocumentationMetadata::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 DocumentationMetadata::position() const {
  // @@protoc_insertion_point(field_get:DocumentationMetadata.position)
  return position_;
}
inline void DocumentationMetadata::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:DocumentationMetadata.position)
}

// -------------------------------------------------------------------

// DatabricksServiceExceptionProto

// optional .ErrorCode error_code = 1;
inline bool DatabricksServiceExceptionProto::has_error_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DatabricksServiceExceptionProto::set_has_error_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DatabricksServiceExceptionProto::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DatabricksServiceExceptionProto::clear_error_code() {
  error_code_ = 1;
  clear_has_error_code();
}
inline ::ErrorCode DatabricksServiceExceptionProto::error_code() const {
  // @@protoc_insertion_point(field_get:DatabricksServiceExceptionProto.error_code)
  return static_cast< ::ErrorCode >(error_code_);
}
inline void DatabricksServiceExceptionProto::set_error_code(::ErrorCode value) {
  assert(::ErrorCode_IsValid(value));
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:DatabricksServiceExceptionProto.error_code)
}

// optional string message = 2;
inline bool DatabricksServiceExceptionProto::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DatabricksServiceExceptionProto::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DatabricksServiceExceptionProto::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DatabricksServiceExceptionProto::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& DatabricksServiceExceptionProto::message() const {
  // @@protoc_insertion_point(field_get:DatabricksServiceExceptionProto.message)
  return message_.GetNoArena();
}
inline void DatabricksServiceExceptionProto::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DatabricksServiceExceptionProto.message)
}
#if LANG_CXX11
inline void DatabricksServiceExceptionProto::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DatabricksServiceExceptionProto.message)
}
#endif
inline void DatabricksServiceExceptionProto::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DatabricksServiceExceptionProto.message)
}
inline void DatabricksServiceExceptionProto::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DatabricksServiceExceptionProto.message)
}
inline ::std::string* DatabricksServiceExceptionProto::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:DatabricksServiceExceptionProto.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DatabricksServiceExceptionProto::release_message() {
  // @@protoc_insertion_point(field_release:DatabricksServiceExceptionProto.message)
  if (!has_message()) {
    return NULL;
  }
  clear_has_message();
  return message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DatabricksServiceExceptionProto::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:DatabricksServiceExceptionProto.message)
}

// optional string stack_trace = 3;
inline bool DatabricksServiceExceptionProto::has_stack_trace() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DatabricksServiceExceptionProto::set_has_stack_trace() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DatabricksServiceExceptionProto::clear_has_stack_trace() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DatabricksServiceExceptionProto::clear_stack_trace() {
  stack_trace_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stack_trace();
}
inline const ::std::string& DatabricksServiceExceptionProto::stack_trace() const {
  // @@protoc_insertion_point(field_get:DatabricksServiceExceptionProto.stack_trace)
  return stack_trace_.GetNoArena();
}
inline void DatabricksServiceExceptionProto::set_stack_trace(const ::std::string& value) {
  set_has_stack_trace();
  stack_trace_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DatabricksServiceExceptionProto.stack_trace)
}
#if LANG_CXX11
inline void DatabricksServiceExceptionProto::set_stack_trace(::std::string&& value) {
  set_has_stack_trace();
  stack_trace_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DatabricksServiceExceptionProto.stack_trace)
}
#endif
inline void DatabricksServiceExceptionProto::set_stack_trace(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_stack_trace();
  stack_trace_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DatabricksServiceExceptionProto.stack_trace)
}
inline void DatabricksServiceExceptionProto::set_stack_trace(const char* value, size_t size) {
  set_has_stack_trace();
  stack_trace_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DatabricksServiceExceptionProto.stack_trace)
}
inline ::std::string* DatabricksServiceExceptionProto::mutable_stack_trace() {
  set_has_stack_trace();
  // @@protoc_insertion_point(field_mutable:DatabricksServiceExceptionProto.stack_trace)
  return stack_trace_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DatabricksServiceExceptionProto::release_stack_trace() {
  // @@protoc_insertion_point(field_release:DatabricksServiceExceptionProto.stack_trace)
  if (!has_stack_trace()) {
    return NULL;
  }
  clear_has_stack_trace();
  return stack_trace_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DatabricksServiceExceptionProto::set_allocated_stack_trace(::std::string* stack_trace) {
  if (stack_trace != NULL) {
    set_has_stack_trace();
  } else {
    clear_has_stack_trace();
  }
  stack_trace_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stack_trace);
  // @@protoc_insertion_point(field_set_allocated:DatabricksServiceExceptionProto.stack_trace)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Visibility> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Visibility>() {
  return ::Visibility_descriptor();
}
template <> struct is_proto_enum< ::ErrorCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ErrorCode>() {
  return ::ErrorCode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_databricks_2eproto
